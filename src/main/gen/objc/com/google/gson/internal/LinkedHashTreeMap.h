//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/main/java/com/google/gson/internal/LinkedHashTreeMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap")
#ifdef RESTRICT_ComGoogleGsonInternalLinkedHashTreeMap
#define INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap 0
#else
#define INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap 1
#endif
#undef RESTRICT_ComGoogleGsonInternalLinkedHashTreeMap

#if !defined (ComGoogleGsonInternalLinkedHashTreeMap_) && (INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap || defined(INCLUDE_ComGoogleGsonInternalLinkedHashTreeMap))
#define ComGoogleGsonInternalLinkedHashTreeMap_

#define RESTRICT_JavaUtilAbstractMap 1
#define INCLUDE_JavaUtilAbstractMap 1
#include "java/util/AbstractMap.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComGoogleGsonInternalLinkedHashTreeMap_Node;
@class IOSObjectArray;
@protocol JavaUtilComparator;
@protocol JavaUtilMap_Entry;
@protocol JavaUtilSet;

/*!
 @brief A map of comparable keys to values.Unlike <code>TreeMap</code>, this class uses
  insertion order for iteration order.
 Comparison order is only used as an
  optimization for efficient insertion and removal. 
 <p>This implementation was derived from Android 4.1's TreeMap and
  LinkedHashMap classes.
 */
@interface ComGoogleGsonInternalLinkedHashTreeMap : JavaUtilAbstractMap < JavaIoSerializable > {
 @public
  id<JavaUtilComparator> comparator_;
  IOSObjectArray *table_;
  ComGoogleGsonInternalLinkedHashTreeMap_Node *header_;
  jint size_;
  jint modCount_;
  jint threshold_;
}

#pragma mark Public

/*!
 @brief Create a natural order, empty tree map whose keys must be mutually
  comparable and non-null.
 */
- (instancetype)init;

/*!
 @brief Create a tree map ordered by <code>comparator</code>.This map's keys may only
  be null if <code>comparator</code> permits.
 @param comparator the comparator to order elements with, or <code>null</code>  to
       use the natural ordering.
 */
- (instancetype)initWithJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (void)clear;

- (jboolean)containsKeyWithId:(id)key;

- (id<JavaUtilSet>)entrySet;

- (id)getWithId:(id)key;

- (id<JavaUtilSet>)keySet;

- (id)putWithId:(id)key
         withId:(id)value;

- (id)removeWithId:(id)key;

- (jint)size;

#pragma mark Package-Private

/*!
 @brief Returns a new array containing the same nodes as <code>oldTable</code>, but with
  twice as many trees, each of (approximately) half the previous size.
 */
+ (IOSObjectArray *)doubleCapacityWithComGoogleGsonInternalLinkedHashTreeMap_NodeArray:(IOSObjectArray *)oldTable;

/*!
 @brief Returns the node at or adjacent to the given key, creating it if requested.
 @throw ClassCastExceptionif <code>key</code> and the tree's keys aren't
      mutually comparable.
 */
- (ComGoogleGsonInternalLinkedHashTreeMap_Node *)findWithId:(id)key
                                                withBoolean:(jboolean)create;

/*!
 @brief Returns this map's entry that has the same key and value as <code>entry</code>
 , or null if this map has no such entry.
 <p>This method uses the comparator for key equality rather than <code>equals</code>
 . If this map's comparator isn't consistent with equals (such as 
 <code>String.CASE_INSENSITIVE_ORDER</code>), then <code>remove()</code> and <code>contains()</code>
  will violate the collections API.
 */
- (ComGoogleGsonInternalLinkedHashTreeMap_Node *)findByEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)entry_;

- (ComGoogleGsonInternalLinkedHashTreeMap_Node *)findByObjectWithId:(id)key;

/*!
 @brief Removes <code>node</code> from this tree, rearranging the tree's structure as
  necessary.
 @param unlink true to also unlink this node from the iteration linked list.
 */
- (void)removeInternalWithComGoogleGsonInternalLinkedHashTreeMap_Node:(ComGoogleGsonInternalLinkedHashTreeMap_Node *)node
                                                          withBoolean:(jboolean)unlink;

- (ComGoogleGsonInternalLinkedHashTreeMap_Node *)removeInternalByKeyWithId:(id)key;

@end

J2OBJC_STATIC_INIT(ComGoogleGsonInternalLinkedHashTreeMap)

J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap, comparator_, id<JavaUtilComparator>)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap, table_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap, header_, ComGoogleGsonInternalLinkedHashTreeMap_Node *)

FOUNDATION_EXPORT void ComGoogleGsonInternalLinkedHashTreeMap_init(ComGoogleGsonInternalLinkedHashTreeMap *self);

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap *new_ComGoogleGsonInternalLinkedHashTreeMap_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap *create_ComGoogleGsonInternalLinkedHashTreeMap_init(void);

FOUNDATION_EXPORT void ComGoogleGsonInternalLinkedHashTreeMap_initWithJavaUtilComparator_(ComGoogleGsonInternalLinkedHashTreeMap *self, id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap *new_ComGoogleGsonInternalLinkedHashTreeMap_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap *create_ComGoogleGsonInternalLinkedHashTreeMap_initWithJavaUtilComparator_(id<JavaUtilComparator> comparator);

FOUNDATION_EXPORT IOSObjectArray *ComGoogleGsonInternalLinkedHashTreeMap_doubleCapacityWithComGoogleGsonInternalLinkedHashTreeMap_NodeArray_(IOSObjectArray *oldTable);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalLinkedHashTreeMap)

#endif

#if !defined (ComGoogleGsonInternalLinkedHashTreeMap_Node_) && (INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap || defined(INCLUDE_ComGoogleGsonInternalLinkedHashTreeMap_Node))
#define ComGoogleGsonInternalLinkedHashTreeMap_Node_

#define RESTRICT_JavaUtilMap 1
#define INCLUDE_JavaUtilMap_Entry 1
#include "java/util/Map.h"

@interface ComGoogleGsonInternalLinkedHashTreeMap_Node : NSObject < JavaUtilMap_Entry > {
 @public
  ComGoogleGsonInternalLinkedHashTreeMap_Node *parent_;
  ComGoogleGsonInternalLinkedHashTreeMap_Node *left_;
  ComGoogleGsonInternalLinkedHashTreeMap_Node *right_;
  ComGoogleGsonInternalLinkedHashTreeMap_Node *next_;
  ComGoogleGsonInternalLinkedHashTreeMap_Node *prev_;
  id key_;
  jint hash__;
  id value_;
  jint height_;
}

#pragma mark Public

- (jboolean)isEqual:(id)o;

/*!
 @brief Returns the first node in this subtree.
 */
- (ComGoogleGsonInternalLinkedHashTreeMap_Node *)first;

- (id)getKey;

- (id)getValue;

- (NSUInteger)hash;

/*!
 @brief Returns the last node in this subtree.
 */
- (ComGoogleGsonInternalLinkedHashTreeMap_Node *)last;

- (id)setValueWithId:(id)value;

- (NSString *)description;

#pragma mark Package-Private

/*!
 @brief Create the header entry
 */
- (instancetype)init;

/*!
 @brief Create a regular entry
 */
- (instancetype)initWithComGoogleGsonInternalLinkedHashTreeMap_Node:(ComGoogleGsonInternalLinkedHashTreeMap_Node *)parent
                                                             withId:(id)key
                                                            withInt:(jint)hash_
                    withComGoogleGsonInternalLinkedHashTreeMap_Node:(ComGoogleGsonInternalLinkedHashTreeMap_Node *)next
                    withComGoogleGsonInternalLinkedHashTreeMap_Node:(ComGoogleGsonInternalLinkedHashTreeMap_Node *)prev;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalLinkedHashTreeMap_Node)

J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap_Node, parent_, ComGoogleGsonInternalLinkedHashTreeMap_Node *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap_Node, left_, ComGoogleGsonInternalLinkedHashTreeMap_Node *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap_Node, right_, ComGoogleGsonInternalLinkedHashTreeMap_Node *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap_Node, next_, ComGoogleGsonInternalLinkedHashTreeMap_Node *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap_Node, prev_, ComGoogleGsonInternalLinkedHashTreeMap_Node *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap_Node, key_, id)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalLinkedHashTreeMap_Node, value_, id)

FOUNDATION_EXPORT void ComGoogleGsonInternalLinkedHashTreeMap_Node_init(ComGoogleGsonInternalLinkedHashTreeMap_Node *self);

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_Node *new_ComGoogleGsonInternalLinkedHashTreeMap_Node_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_Node *create_ComGoogleGsonInternalLinkedHashTreeMap_Node_init(void);

FOUNDATION_EXPORT void ComGoogleGsonInternalLinkedHashTreeMap_Node_initWithComGoogleGsonInternalLinkedHashTreeMap_Node_withId_withInt_withComGoogleGsonInternalLinkedHashTreeMap_Node_withComGoogleGsonInternalLinkedHashTreeMap_Node_(ComGoogleGsonInternalLinkedHashTreeMap_Node *self, ComGoogleGsonInternalLinkedHashTreeMap_Node *parent, id key, jint hash_, ComGoogleGsonInternalLinkedHashTreeMap_Node *next, ComGoogleGsonInternalLinkedHashTreeMap_Node *prev);

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_Node *new_ComGoogleGsonInternalLinkedHashTreeMap_Node_initWithComGoogleGsonInternalLinkedHashTreeMap_Node_withId_withInt_withComGoogleGsonInternalLinkedHashTreeMap_Node_withComGoogleGsonInternalLinkedHashTreeMap_Node_(ComGoogleGsonInternalLinkedHashTreeMap_Node *parent, id key, jint hash_, ComGoogleGsonInternalLinkedHashTreeMap_Node *next, ComGoogleGsonInternalLinkedHashTreeMap_Node *prev) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_Node *create_ComGoogleGsonInternalLinkedHashTreeMap_Node_initWithComGoogleGsonInternalLinkedHashTreeMap_Node_withId_withInt_withComGoogleGsonInternalLinkedHashTreeMap_Node_withComGoogleGsonInternalLinkedHashTreeMap_Node_(ComGoogleGsonInternalLinkedHashTreeMap_Node *parent, id key, jint hash_, ComGoogleGsonInternalLinkedHashTreeMap_Node *next, ComGoogleGsonInternalLinkedHashTreeMap_Node *prev);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalLinkedHashTreeMap_Node)

#endif

#if !defined (ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator_) && (INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap || defined(INCLUDE_ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator))
#define ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator_

@class ComGoogleGsonInternalLinkedHashTreeMap_Node;

/*!
 @brief Walks an AVL tree in iteration order.Once a node has been returned, its
  left, right and parent links are <strong>no longer used</strong>.
 For this
  reason it is safe to transform these links as you walk a tree. 
 <p><strong>Warning:</strong> this iterator is destructive. It clears the
  parent node of all nodes in the tree. It is an error to make a partial
  iteration of a tree.
 */
@interface ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator : NSObject

#pragma mark Public

- (ComGoogleGsonInternalLinkedHashTreeMap_Node *)next;

#pragma mark Package-Private

- (instancetype)init;

- (void)resetWithComGoogleGsonInternalLinkedHashTreeMap_Node:(ComGoogleGsonInternalLinkedHashTreeMap_Node *)root;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator)

FOUNDATION_EXPORT void ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator_init(ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator *self);

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator *new_ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator *create_ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalLinkedHashTreeMap_AvlIterator)

#endif

#if !defined (ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder_) && (INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap || defined(INCLUDE_ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder))
#define ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder_

@class ComGoogleGsonInternalLinkedHashTreeMap_Node;

/*!
 @brief Builds AVL trees of a predetermined size by accepting nodes of increasing
  value.To use: 
 <ol>
    <li>Call <code>reset</code> to initialize the target size <i>size</i>.
 <li>Call <code>add</code> <i>size</i> times with increasing values.
    <li>Call <code>root</code> to get the root of the balanced tree. 
 </ol>
  
 <p>The returned tree will satisfy the AVL constraint: for every node 
 <i>N</i>, the height of <i>N.left</i> and <i>N.right</i> is different by at
  most 1. It accomplishes this by omitting deepest-level leaf nodes when
  building trees whose size isn't a power of 2 minus 1. 
 <p>Unlike rebuilding a tree from scratch, this approach requires no value
  comparisons. Using this class to create a tree of size <i>S</i> is 
 <code>O(S)</code>.
 */
@interface ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder : NSObject

#pragma mark Package-Private

- (instancetype)init;

- (void)addWithComGoogleGsonInternalLinkedHashTreeMap_Node:(ComGoogleGsonInternalLinkedHashTreeMap_Node *)node;

- (void)resetWithInt:(jint)targetSize;

- (ComGoogleGsonInternalLinkedHashTreeMap_Node *)root;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder)

FOUNDATION_EXPORT void ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder_init(ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder *self);

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder *new_ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder *create_ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalLinkedHashTreeMap_AvlBuilder)

#endif

#if !defined (ComGoogleGsonInternalLinkedHashTreeMap_EntrySet_) && (INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap || defined(INCLUDE_ComGoogleGsonInternalLinkedHashTreeMap_EntrySet))
#define ComGoogleGsonInternalLinkedHashTreeMap_EntrySet_

#define RESTRICT_JavaUtilAbstractSet 1
#define INCLUDE_JavaUtilAbstractSet 1
#include "java/util/AbstractSet.h"

@class ComGoogleGsonInternalLinkedHashTreeMap;
@protocol JavaUtilIterator;

@interface ComGoogleGsonInternalLinkedHashTreeMap_EntrySet : JavaUtilAbstractSet

#pragma mark Public

- (void)clear;

- (jboolean)containsWithId:(id)o;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)o;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithComGoogleGsonInternalLinkedHashTreeMap:(ComGoogleGsonInternalLinkedHashTreeMap *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalLinkedHashTreeMap_EntrySet)

FOUNDATION_EXPORT void ComGoogleGsonInternalLinkedHashTreeMap_EntrySet_initWithComGoogleGsonInternalLinkedHashTreeMap_(ComGoogleGsonInternalLinkedHashTreeMap_EntrySet *self, ComGoogleGsonInternalLinkedHashTreeMap *outer$);

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_EntrySet *new_ComGoogleGsonInternalLinkedHashTreeMap_EntrySet_initWithComGoogleGsonInternalLinkedHashTreeMap_(ComGoogleGsonInternalLinkedHashTreeMap *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_EntrySet *create_ComGoogleGsonInternalLinkedHashTreeMap_EntrySet_initWithComGoogleGsonInternalLinkedHashTreeMap_(ComGoogleGsonInternalLinkedHashTreeMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalLinkedHashTreeMap_EntrySet)

#endif

#if !defined (ComGoogleGsonInternalLinkedHashTreeMap_KeySet_) && (INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap || defined(INCLUDE_ComGoogleGsonInternalLinkedHashTreeMap_KeySet))
#define ComGoogleGsonInternalLinkedHashTreeMap_KeySet_

#define RESTRICT_JavaUtilAbstractSet 1
#define INCLUDE_JavaUtilAbstractSet 1
#include "java/util/AbstractSet.h"

@class ComGoogleGsonInternalLinkedHashTreeMap;
@protocol JavaUtilIterator;

@interface ComGoogleGsonInternalLinkedHashTreeMap_KeySet : JavaUtilAbstractSet

#pragma mark Public

- (void)clear;

- (jboolean)containsWithId:(id)o;

- (id<JavaUtilIterator>)iterator;

- (jboolean)removeWithId:(id)key;

- (jint)size;

#pragma mark Package-Private

- (instancetype)initWithComGoogleGsonInternalLinkedHashTreeMap:(ComGoogleGsonInternalLinkedHashTreeMap *)outer$;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalLinkedHashTreeMap_KeySet)

FOUNDATION_EXPORT void ComGoogleGsonInternalLinkedHashTreeMap_KeySet_initWithComGoogleGsonInternalLinkedHashTreeMap_(ComGoogleGsonInternalLinkedHashTreeMap_KeySet *self, ComGoogleGsonInternalLinkedHashTreeMap *outer$);

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_KeySet *new_ComGoogleGsonInternalLinkedHashTreeMap_KeySet_initWithComGoogleGsonInternalLinkedHashTreeMap_(ComGoogleGsonInternalLinkedHashTreeMap *outer$) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonInternalLinkedHashTreeMap_KeySet *create_ComGoogleGsonInternalLinkedHashTreeMap_KeySet_initWithComGoogleGsonInternalLinkedHashTreeMap_(ComGoogleGsonInternalLinkedHashTreeMap *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalLinkedHashTreeMap_KeySet)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonInternalLinkedHashTreeMap")
