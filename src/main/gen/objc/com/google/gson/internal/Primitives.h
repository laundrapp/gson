//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/main/java/com/google/gson/internal/Primitives.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonInternalPrimitives")
#ifdef RESTRICT_ComGoogleGsonInternalPrimitives
#define INCLUDE_ALL_ComGoogleGsonInternalPrimitives 0
#else
#define INCLUDE_ALL_ComGoogleGsonInternalPrimitives 1
#endif
#undef RESTRICT_ComGoogleGsonInternalPrimitives

#if !defined (ComGoogleGsonInternalPrimitives_) && (INCLUDE_ALL_ComGoogleGsonInternalPrimitives || defined(INCLUDE_ComGoogleGsonInternalPrimitives))
#define ComGoogleGsonInternalPrimitives_

@class IOSClass;
@protocol JavaLangReflectType;

/*!
 @brief Contains static utility methods pertaining to primitive types and their
  corresponding wrapper types.
 @author Kevin Bourrillion
 */
@interface ComGoogleGsonInternalPrimitives : NSObject

#pragma mark Public

/*!
 @brief Returns true if this type is a primitive.
 */
+ (jboolean)isPrimitiveWithJavaLangReflectType:(id<JavaLangReflectType>)type;

/*!
 @brief Returns <code>true</code> if <code>type</code> is one of the nine
  primitive-wrapper types, such as <code>Integer</code>.
 - seealso: Class#isPrimitive
 */
+ (jboolean)isWrapperTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type;

/*!
 @brief Returns the corresponding primitive type of <code>type</code> if it is a
  wrapper type; otherwise returns <code>type</code> itself.Idempotent.
 @code

      unwrap(Integer.class) == int.class
      unwrap(int.class) == int.class
      unwrap(String.class) == String.class 
  
@endcode
 */
+ (IOSClass *)unwrapWithIOSClass:(IOSClass *)type;

/*!
 @brief Returns the corresponding wrapper type of <code>type</code> if it is a primitive
  type; otherwise returns <code>type</code> itself.Idempotent.
 @code

      wrap(int.class) == Integer.class
      wrap(Integer.class) == Integer.class
      wrap(String.class) == String.class 
  
@endcode
 */
+ (IOSClass *)wrapWithIOSClass:(IOSClass *)type;

@end

J2OBJC_STATIC_INIT(ComGoogleGsonInternalPrimitives)

FOUNDATION_EXPORT jboolean ComGoogleGsonInternalPrimitives_isPrimitiveWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT jboolean ComGoogleGsonInternalPrimitives_isWrapperTypeWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT IOSClass *ComGoogleGsonInternalPrimitives_wrapWithIOSClass_(IOSClass *type);

FOUNDATION_EXPORT IOSClass *ComGoogleGsonInternalPrimitives_unwrapWithIOSClass_(IOSClass *type);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalPrimitives)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonInternalPrimitives")
