//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/main/java/com/google/gson/internal/bind/SqlDateTypeAdapter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonInternalBindSqlDateTypeAdapter")
#ifdef RESTRICT_ComGoogleGsonInternalBindSqlDateTypeAdapter
#define INCLUDE_ALL_ComGoogleGsonInternalBindSqlDateTypeAdapter 0
#else
#define INCLUDE_ALL_ComGoogleGsonInternalBindSqlDateTypeAdapter 1
#endif
#undef RESTRICT_ComGoogleGsonInternalBindSqlDateTypeAdapter

#if !defined (ComGoogleGsonInternalBindSqlDateTypeAdapter_) && (INCLUDE_ALL_ComGoogleGsonInternalBindSqlDateTypeAdapter || defined(INCLUDE_ComGoogleGsonInternalBindSqlDateTypeAdapter))
#define ComGoogleGsonInternalBindSqlDateTypeAdapter_

#define RESTRICT_ComGoogleGsonTypeAdapter 1
#define INCLUDE_ComGoogleGsonTypeAdapter 1
#include "com/google/gson/TypeAdapter.h"

@class ComGoogleGsonJsonElement;
@class ComGoogleGsonStreamJsonReader;
@class ComGoogleGsonStreamJsonWriter;
@class JavaIoReader;
@class JavaSqlDate;
@protocol ComGoogleGsonTypeAdapterFactory;

/*!
 @brief Adapter for java.sql.Date.Although this class appears stateless, it is not.
 DateFormat captures its time zone and locale when it is created, which gives
  this class state. DateFormat isn't thread safe either, so this class has
  to synchronize its read and write methods.
 */
@interface ComGoogleGsonInternalBindSqlDateTypeAdapter : ComGoogleGsonTypeAdapter

#pragma mark Public

- (instancetype)init;

- (JavaSqlDate *)fromJsonTreeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)arg0;

- (JavaSqlDate *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaSqlDate *)fromJsonWithNSString:(NSString *)arg0;

- (JavaSqlDate *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(JavaSqlDate *)value;

@end

J2OBJC_STATIC_INIT(ComGoogleGsonInternalBindSqlDateTypeAdapter)

inline id<ComGoogleGsonTypeAdapterFactory> ComGoogleGsonInternalBindSqlDateTypeAdapter_get_FACTORY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ComGoogleGsonTypeAdapterFactory> ComGoogleGsonInternalBindSqlDateTypeAdapter_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleGsonInternalBindSqlDateTypeAdapter, FACTORY, id<ComGoogleGsonTypeAdapterFactory>)

FOUNDATION_EXPORT void ComGoogleGsonInternalBindSqlDateTypeAdapter_init(ComGoogleGsonInternalBindSqlDateTypeAdapter *self);

FOUNDATION_EXPORT ComGoogleGsonInternalBindSqlDateTypeAdapter *new_ComGoogleGsonInternalBindSqlDateTypeAdapter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonInternalBindSqlDateTypeAdapter *create_ComGoogleGsonInternalBindSqlDateTypeAdapter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalBindSqlDateTypeAdapter)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonInternalBindSqlDateTypeAdapter")
