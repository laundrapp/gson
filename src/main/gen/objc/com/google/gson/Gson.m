//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/main/java/com/google/gson/Gson.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/gson/FieldNamingPolicy.h"
#include "com/google/gson/FieldNamingStrategy.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/JsonDeserializationContext.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonIOException.h"
#include "com/google/gson/JsonNull.h"
#include "com/google/gson/JsonSerializationContext.h"
#include "com/google/gson/JsonSyntaxException.h"
#include "com/google/gson/LongSerializationPolicy.h"
#include "com/google/gson/TypeAdapter.h"
#include "com/google/gson/TypeAdapterFactory.h"
#include "com/google/gson/internal/ConstructorConstructor.h"
#include "com/google/gson/internal/Excluder.h"
#include "com/google/gson/internal/Primitives.h"
#include "com/google/gson/internal/Streams.h"
#include "com/google/gson/internal/bind/ArrayTypeAdapter.h"
#include "com/google/gson/internal/bind/CollectionTypeAdapterFactory.h"
#include "com/google/gson/internal/bind/DateTypeAdapter.h"
#include "com/google/gson/internal/bind/JsonAdapterAnnotationTypeAdapterFactory.h"
#include "com/google/gson/internal/bind/JsonTreeReader.h"
#include "com/google/gson/internal/bind/JsonTreeWriter.h"
#include "com/google/gson/internal/bind/MapTypeAdapterFactory.h"
#include "com/google/gson/internal/bind/ObjectTypeAdapter.h"
#include "com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.h"
#include "com/google/gson/internal/bind/SqlDateTypeAdapter.h"
#include "com/google/gson/internal/bind/TimeTypeAdapter.h"
#include "com/google/gson/internal/bind/TypeAdapters.h"
#include "com/google/gson/reflect/TypeToken.h"
#include "com/google/gson/stream/JsonReader.h"
#include "com/google/gson/stream/JsonToken.h"
#include "com/google/gson/stream/JsonWriter.h"
#include "com/google/gson/stream/MalformedJsonException.h"
#include "java/io/EOFException.h"
#include "java/io/IOException.h"
#include "java/io/Reader.h"
#include "java/io/StringReader.h"
#include "java/io/StringWriter.h"
#include "java/io/Writer.h"
#include "java/lang/Appendable.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/ThreadLocal.h"
#include "java/lang/reflect/Type.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleGsonGson () {
 @public
  /*!
   @brief This thread local guards against reentrant calls to getAdapter().In
  certain object graphs, creating an adapter for a type may recursively
  require an adapter for the same type!
   Without intervention, the recursive
  lookup would stack overflow. We cheat by returning a proxy type adapter.
  The proxy is wired up once the initial adapter has been created.
   */
  JavaLangThreadLocal *calls_;
  id<JavaUtilMap> typeTokenCache_;
  id<JavaUtilList> factories_;
  ComGoogleGsonInternalConstructorConstructor *constructorConstructor_;
  jboolean serializeNulls_;
  jboolean htmlSafe_;
  jboolean generateNonExecutableJson_;
  jboolean prettyPrinting_;
}

- (ComGoogleGsonTypeAdapter *)doubleAdapterWithBoolean:(jboolean)serializeSpecialFloatingPointValues;

- (ComGoogleGsonTypeAdapter *)floatAdapterWithBoolean:(jboolean)serializeSpecialFloatingPointValues;

- (void)checkValidFloatingPointWithDouble:(jdouble)value;

- (ComGoogleGsonTypeAdapter *)longAdapterWithComGoogleGsonLongSerializationPolicy:(ComGoogleGsonLongSerializationPolicy *)longSerializationPolicy;

/*!
 @brief Returns a new JSON writer configured for this GSON and with the non-execute
  prefix if that is configured.
 */
- (ComGoogleGsonStreamJsonWriter *)newJsonWriterWithJavaIoWriter:(JavaIoWriter *)writer OBJC_METHOD_FAMILY_NONE;

+ (void)assertFullConsumptionWithId:(id)obj
  withComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)reader;

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonGson, calls_, JavaLangThreadLocal *)
J2OBJC_FIELD_SETTER(ComGoogleGsonGson, typeTokenCache_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComGoogleGsonGson, factories_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonGson, constructorConstructor_, ComGoogleGsonInternalConstructorConstructor *)

inline NSString *ComGoogleGsonGson_get_JSON_NON_EXECUTABLE_PREFIX(void);
static NSString *ComGoogleGsonGson_JSON_NON_EXECUTABLE_PREFIX = @")]}'\n";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleGsonGson, JSON_NON_EXECUTABLE_PREFIX, NSString *)

__attribute__((unused)) static ComGoogleGsonTypeAdapter *ComGoogleGsonGson_doubleAdapterWithBoolean_(ComGoogleGsonGson *self, jboolean serializeSpecialFloatingPointValues);

__attribute__((unused)) static ComGoogleGsonTypeAdapter *ComGoogleGsonGson_floatAdapterWithBoolean_(ComGoogleGsonGson *self, jboolean serializeSpecialFloatingPointValues);

__attribute__((unused)) static void ComGoogleGsonGson_checkValidFloatingPointWithDouble_(ComGoogleGsonGson *self, jdouble value);

__attribute__((unused)) static ComGoogleGsonTypeAdapter *ComGoogleGsonGson_longAdapterWithComGoogleGsonLongSerializationPolicy_(ComGoogleGsonGson *self, ComGoogleGsonLongSerializationPolicy *longSerializationPolicy);

__attribute__((unused)) static ComGoogleGsonStreamJsonWriter *ComGoogleGsonGson_newJsonWriterWithJavaIoWriter_(ComGoogleGsonGson *self, JavaIoWriter *writer);

__attribute__((unused)) static void ComGoogleGsonGson_assertFullConsumptionWithId_withComGoogleGsonStreamJsonReader_(id obj, ComGoogleGsonStreamJsonReader *reader);

@interface ComGoogleGsonGson_1 : NSObject < ComGoogleGsonJsonDeserializationContext > {
 @public
  ComGoogleGsonGson *this$0_;
}

- (instancetype __nonnull)initWithComGoogleGsonGson:(ComGoogleGsonGson *)outer$;

- (id)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGson_1)

__attribute__((unused)) static void ComGoogleGsonGson_1_initWithComGoogleGsonGson_(ComGoogleGsonGson_1 *self, ComGoogleGsonGson *outer$);

__attribute__((unused)) static ComGoogleGsonGson_1 *new_ComGoogleGsonGson_1_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGson_1 *create_ComGoogleGsonGson_1_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$);

@interface ComGoogleGsonGson_2 : NSObject < ComGoogleGsonJsonSerializationContext > {
 @public
  ComGoogleGsonGson *this$0_;
}

- (instancetype __nonnull)initWithComGoogleGsonGson:(ComGoogleGsonGson *)outer$;

- (ComGoogleGsonJsonElement *)serializeWithId:(id)src;

- (ComGoogleGsonJsonElement *)serializeWithId:(id)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGson_2)

__attribute__((unused)) static void ComGoogleGsonGson_2_initWithComGoogleGsonGson_(ComGoogleGsonGson_2 *self, ComGoogleGsonGson *outer$);

__attribute__((unused)) static ComGoogleGsonGson_2 *new_ComGoogleGsonGson_2_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGson_2 *create_ComGoogleGsonGson_2_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$);

@interface ComGoogleGsonGson_3 : ComGoogleGsonTypeAdapter {
 @public
  ComGoogleGsonGson *this$0_;
}

- (instancetype __nonnull)initWithComGoogleGsonGson:(ComGoogleGsonGson *)outer$;

- (JavaLangDouble *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGson_3)

__attribute__((unused)) static void ComGoogleGsonGson_3_initWithComGoogleGsonGson_(ComGoogleGsonGson_3 *self, ComGoogleGsonGson *outer$);

__attribute__((unused)) static ComGoogleGsonGson_3 *new_ComGoogleGsonGson_3_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGson_3 *create_ComGoogleGsonGson_3_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$);

@interface ComGoogleGsonGson_4 : ComGoogleGsonTypeAdapter {
 @public
  ComGoogleGsonGson *this$0_;
}

- (instancetype __nonnull)initWithComGoogleGsonGson:(ComGoogleGsonGson *)outer$;

- (JavaLangFloat *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGson_4)

__attribute__((unused)) static void ComGoogleGsonGson_4_initWithComGoogleGsonGson_(ComGoogleGsonGson_4 *self, ComGoogleGsonGson *outer$);

__attribute__((unused)) static ComGoogleGsonGson_4 *new_ComGoogleGsonGson_4_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGson_4 *create_ComGoogleGsonGson_4_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$);

@interface ComGoogleGsonGson_5 : ComGoogleGsonTypeAdapter

- (instancetype __nonnull)init;

- (NSNumber *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(NSNumber *)value;

- (NSNumber *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSNumber *)fromJsonTreeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)arg0;

- (NSNumber *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGson_5)

__attribute__((unused)) static void ComGoogleGsonGson_5_init(ComGoogleGsonGson_5 *self);

__attribute__((unused)) static ComGoogleGsonGson_5 *new_ComGoogleGsonGson_5_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGson_5 *create_ComGoogleGsonGson_5_init(void);

@interface ComGoogleGsonGson_FutureTypeAdapter () {
 @public
  ComGoogleGsonTypeAdapter *delegate_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonGson_FutureTypeAdapter, delegate_, ComGoogleGsonTypeAdapter *)

@implementation ComGoogleGsonGson

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGson_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComGoogleGsonInternalExcluder:(ComGoogleGsonInternalExcluder *)excluder
                           withComGoogleGsonFieldNamingStrategy:(id<ComGoogleGsonFieldNamingStrategy>)fieldNamingPolicy
                                                withJavaUtilMap:(id<JavaUtilMap>)instanceCreators
                                                    withBoolean:(jboolean)serializeNulls
                                                    withBoolean:(jboolean)complexMapKeySerialization
                                                    withBoolean:(jboolean)generateNonExecutableGson
                                                    withBoolean:(jboolean)htmlSafe
                                                    withBoolean:(jboolean)prettyPrinting
                                                    withBoolean:(jboolean)serializeSpecialFloatingPointValues
                       withComGoogleGsonLongSerializationPolicy:(ComGoogleGsonLongSerializationPolicy *)longSerializationPolicy
                                               withJavaUtilList:(id<JavaUtilList>)typeAdapterFactories {
  ComGoogleGsonGson_initWithComGoogleGsonInternalExcluder_withComGoogleGsonFieldNamingStrategy_withJavaUtilMap_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withComGoogleGsonLongSerializationPolicy_withJavaUtilList_(self, excluder, fieldNamingPolicy, instanceCreators, serializeNulls, complexMapKeySerialization, generateNonExecutableGson, htmlSafe, prettyPrinting, serializeSpecialFloatingPointValues, longSerializationPolicy, typeAdapterFactories);
  return self;
}

- (ComGoogleGsonTypeAdapter *)doubleAdapterWithBoolean:(jboolean)serializeSpecialFloatingPointValues {
  return ComGoogleGsonGson_doubleAdapterWithBoolean_(self, serializeSpecialFloatingPointValues);
}

- (ComGoogleGsonTypeAdapter *)floatAdapterWithBoolean:(jboolean)serializeSpecialFloatingPointValues {
  return ComGoogleGsonGson_floatAdapterWithBoolean_(self, serializeSpecialFloatingPointValues);
}

- (void)checkValidFloatingPointWithDouble:(jdouble)value {
  ComGoogleGsonGson_checkValidFloatingPointWithDouble_(self, value);
}

- (ComGoogleGsonTypeAdapter *)longAdapterWithComGoogleGsonLongSerializationPolicy:(ComGoogleGsonLongSerializationPolicy *)longSerializationPolicy {
  return ComGoogleGsonGson_longAdapterWithComGoogleGsonLongSerializationPolicy_(self, longSerializationPolicy);
}

- (ComGoogleGsonTypeAdapter *)getAdapterWithComGoogleGsonReflectTypeToken:(ComGoogleGsonReflectTypeToken *)type {
  ComGoogleGsonTypeAdapter *cached = [((id<JavaUtilMap>) nil_chk(typeTokenCache_)) getWithId:type];
  if (cached != nil) {
    return cached;
  }
  id<JavaUtilMap> threadCalls = [((JavaLangThreadLocal *) nil_chk(calls_)) get];
  jboolean requiresThreadLocalCleanup = false;
  if (threadCalls == nil) {
    threadCalls = create_JavaUtilHashMap_init();
    [calls_ setWithId:threadCalls];
    requiresThreadLocalCleanup = true;
  }
  ComGoogleGsonGson_FutureTypeAdapter *ongoingCall = [threadCalls getWithId:type];
  if (ongoingCall != nil) {
    return ongoingCall;
  }
  @try {
    ComGoogleGsonGson_FutureTypeAdapter *call = create_ComGoogleGsonGson_FutureTypeAdapter_init();
    [threadCalls putWithId:type withId:call];
    for (id<ComGoogleGsonTypeAdapterFactory> __strong factory in nil_chk(factories_)) {
      ComGoogleGsonTypeAdapter *candidate = [((id<ComGoogleGsonTypeAdapterFactory>) nil_chk(factory)) createWithComGoogleGsonGson:self withComGoogleGsonReflectTypeToken:type];
      if (candidate != nil) {
        [call setDelegateWithComGoogleGsonTypeAdapter:candidate];
        [typeTokenCache_ putWithId:type withId:candidate];
        return candidate;
      }
    }
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"GSON cannot handle ", type));
  }
  @finally {
    [threadCalls removeWithId:type];
    if (requiresThreadLocalCleanup) {
      [calls_ remove];
    }
  }
}

- (ComGoogleGsonTypeAdapter *)getDelegateAdapterWithComGoogleGsonTypeAdapterFactory:(id<ComGoogleGsonTypeAdapterFactory>)skipPast
                                                  withComGoogleGsonReflectTypeToken:(ComGoogleGsonReflectTypeToken *)type {
  jboolean skipPastFound = false;
  if (![((id<JavaUtilList>) nil_chk(factories_)) containsWithId:skipPast]) skipPastFound = true;
  for (id<ComGoogleGsonTypeAdapterFactory> __strong factory in factories_) {
    if (!skipPastFound) {
      if (factory == skipPast) {
        skipPastFound = true;
      }
      continue;
    }
    ComGoogleGsonTypeAdapter *candidate = [((id<ComGoogleGsonTypeAdapterFactory>) nil_chk(factory)) createWithComGoogleGsonGson:self withComGoogleGsonReflectTypeToken:type];
    if (candidate != nil) {
      return candidate;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"GSON cannot serialize ", type));
}

- (ComGoogleGsonTypeAdapter *)getAdapterWithIOSClass:(IOSClass *)type {
  return [self getAdapterWithComGoogleGsonReflectTypeToken:ComGoogleGsonReflectTypeToken_getWithIOSClass_(type)];
}

- (ComGoogleGsonJsonElement *)toJsonTreeWithId:(id)src {
  if (src == nil) {
    return JreLoadStatic(ComGoogleGsonJsonNull, INSTANCE);
  }
  return [self toJsonTreeWithId:src withJavaLangReflectType:[src java_getClass]];
}

- (ComGoogleGsonJsonElement *)toJsonTreeWithId:(id)src
                       withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc {
  ComGoogleGsonInternalBindJsonTreeWriter *writer = create_ComGoogleGsonInternalBindJsonTreeWriter_init();
  [self toJsonWithId:src withJavaLangReflectType:typeOfSrc withComGoogleGsonStreamJsonWriter:writer];
  return [writer get];
}

- (NSString *)toJsonWithId:(id)src {
  if (src == nil) {
    return [self toJsonWithComGoogleGsonJsonElement:JreLoadStatic(ComGoogleGsonJsonNull, INSTANCE)];
  }
  return [self toJsonWithId:src withJavaLangReflectType:[src java_getClass]];
}

- (NSString *)toJsonWithId:(id)src
   withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc {
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  [self toJsonWithId:src withJavaLangReflectType:typeOfSrc withJavaLangAppendable:writer];
  return [writer description];
}

- (void)toJsonWithId:(id)src
withJavaLangAppendable:(id<JavaLangAppendable>)writer {
  if (src != nil) {
    [self toJsonWithId:src withJavaLangReflectType:[src java_getClass] withJavaLangAppendable:writer];
  }
  else {
    [self toJsonWithComGoogleGsonJsonElement:JreLoadStatic(ComGoogleGsonJsonNull, INSTANCE) withJavaLangAppendable:writer];
  }
}

- (void)toJsonWithId:(id)src
withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
withJavaLangAppendable:(id<JavaLangAppendable>)writer {
  @try {
    ComGoogleGsonStreamJsonWriter *jsonWriter = ComGoogleGsonGson_newJsonWriterWithJavaIoWriter_(self, ComGoogleGsonInternalStreams_writerForAppendableWithJavaLangAppendable_(writer));
    [self toJsonWithId:src withJavaLangReflectType:typeOfSrc withComGoogleGsonStreamJsonWriter:jsonWriter];
  }
  @catch (JavaIoIOException *e) {
    @throw create_ComGoogleGsonJsonIOException_initWithJavaLangThrowable_(e);
  }
}

- (void)toJsonWithId:(id)src
withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
withComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)writer {
  ComGoogleGsonTypeAdapter *adapter = [self getAdapterWithComGoogleGsonReflectTypeToken:ComGoogleGsonReflectTypeToken_getWithJavaLangReflectType_(typeOfSrc)];
  jboolean oldLenient = [((ComGoogleGsonStreamJsonWriter *) nil_chk(writer)) isLenient];
  [writer setLenientWithBoolean:true];
  jboolean oldHtmlSafe = [writer isHtmlSafe];
  [writer setHtmlSafeWithBoolean:htmlSafe_];
  jboolean oldSerializeNulls = [writer getSerializeNulls];
  [writer setSerializeNullsWithBoolean:serializeNulls_];
  @try {
    [((ComGoogleGsonTypeAdapter *) nil_chk((adapter))) writeWithComGoogleGsonStreamJsonWriter:writer withId:src];
  }
  @catch (JavaIoIOException *e) {
    @throw create_ComGoogleGsonJsonIOException_initWithJavaLangThrowable_(e);
  }
  @finally {
    [writer setLenientWithBoolean:oldLenient];
    [writer setHtmlSafeWithBoolean:oldHtmlSafe];
    [writer setSerializeNullsWithBoolean:oldSerializeNulls];
  }
}

- (NSString *)toJsonWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)jsonElement {
  JavaIoStringWriter *writer = create_JavaIoStringWriter_init();
  [self toJsonWithComGoogleGsonJsonElement:jsonElement withJavaLangAppendable:writer];
  return [writer description];
}

- (void)toJsonWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)jsonElement
                    withJavaLangAppendable:(id<JavaLangAppendable>)writer {
  @try {
    ComGoogleGsonStreamJsonWriter *jsonWriter = ComGoogleGsonGson_newJsonWriterWithJavaIoWriter_(self, ComGoogleGsonInternalStreams_writerForAppendableWithJavaLangAppendable_(writer));
    [self toJsonWithComGoogleGsonJsonElement:jsonElement withComGoogleGsonStreamJsonWriter:jsonWriter];
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}

- (ComGoogleGsonStreamJsonWriter *)newJsonWriterWithJavaIoWriter:(JavaIoWriter *)writer {
  return ComGoogleGsonGson_newJsonWriterWithJavaIoWriter_(self, writer);
}

- (void)toJsonWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)jsonElement
         withComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)writer {
  jboolean oldLenient = [((ComGoogleGsonStreamJsonWriter *) nil_chk(writer)) isLenient];
  [writer setLenientWithBoolean:true];
  jboolean oldHtmlSafe = [writer isHtmlSafe];
  [writer setHtmlSafeWithBoolean:htmlSafe_];
  jboolean oldSerializeNulls = [writer getSerializeNulls];
  [writer setSerializeNullsWithBoolean:serializeNulls_];
  @try {
    ComGoogleGsonInternalStreams_writeWithComGoogleGsonJsonElement_withComGoogleGsonStreamJsonWriter_(jsonElement, writer);
  }
  @catch (JavaIoIOException *e) {
    @throw create_ComGoogleGsonJsonIOException_initWithJavaLangThrowable_(e);
  }
  @finally {
    [writer setLenientWithBoolean:oldLenient];
    [writer setHtmlSafeWithBoolean:oldHtmlSafe];
    [writer setSerializeNullsWithBoolean:oldSerializeNulls];
  }
}

- (id)fromJsonWithNSString:(NSString *)json
              withIOSClass:(IOSClass *)classOfT {
  id object = [self fromJsonWithNSString:json withJavaLangReflectType:classOfT];
  return [((IOSClass *) nil_chk(ComGoogleGsonInternalPrimitives_wrapWithIOSClass_(classOfT))) cast:object];
}

- (id)fromJsonWithNSString:(NSString *)json
   withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT {
  if (json == nil) {
    return nil;
  }
  JavaIoStringReader *reader = create_JavaIoStringReader_initWithNSString_(json);
  id target = [self fromJsonWithJavaIoReader:reader withJavaLangReflectType:typeOfT];
  return target;
}

- (id)fromJsonWithJavaIoReader:(JavaIoReader *)json
                  withIOSClass:(IOSClass *)classOfT {
  ComGoogleGsonStreamJsonReader *jsonReader = create_ComGoogleGsonStreamJsonReader_initWithJavaIoReader_(json);
  id object = [self fromJsonWithComGoogleGsonStreamJsonReader:jsonReader withJavaLangReflectType:classOfT];
  ComGoogleGsonGson_assertFullConsumptionWithId_withComGoogleGsonStreamJsonReader_(object, jsonReader);
  return [((IOSClass *) nil_chk(ComGoogleGsonInternalPrimitives_wrapWithIOSClass_(classOfT))) cast:object];
}

- (id)fromJsonWithJavaIoReader:(JavaIoReader *)json
       withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT {
  ComGoogleGsonStreamJsonReader *jsonReader = create_ComGoogleGsonStreamJsonReader_initWithJavaIoReader_(json);
  id object = [self fromJsonWithComGoogleGsonStreamJsonReader:jsonReader withJavaLangReflectType:typeOfT];
  ComGoogleGsonGson_assertFullConsumptionWithId_withComGoogleGsonStreamJsonReader_(object, jsonReader);
  return object;
}

+ (void)assertFullConsumptionWithId:(id)obj
  withComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)reader {
  ComGoogleGsonGson_assertFullConsumptionWithId_withComGoogleGsonStreamJsonReader_(obj, reader);
}

- (id)fromJsonWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)reader
                        withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT {
  jboolean isEmpty = true;
  jboolean oldLenient = [((ComGoogleGsonStreamJsonReader *) nil_chk(reader)) isLenient];
  [reader setLenientWithBoolean:true];
  @try {
    [reader peek];
    isEmpty = false;
    ComGoogleGsonReflectTypeToken *typeToken = ComGoogleGsonReflectTypeToken_getWithJavaLangReflectType_(typeOfT);
    ComGoogleGsonTypeAdapter *typeAdapter = [self getAdapterWithComGoogleGsonReflectTypeToken:typeToken];
    id object = [((ComGoogleGsonTypeAdapter *) nil_chk(typeAdapter)) readWithComGoogleGsonStreamJsonReader:reader];
    return object;
  }
  @catch (JavaIoEOFException *e) {
    if (isEmpty) {
      return nil;
    }
    @throw create_ComGoogleGsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
  @catch (JavaLangIllegalStateException *e) {
    @throw create_ComGoogleGsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
  @catch (JavaIoIOException *e) {
    @throw create_ComGoogleGsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
  @finally {
    [reader setLenientWithBoolean:oldLenient];
  }
}

- (id)fromJsonWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                              withIOSClass:(IOSClass *)classOfT {
  id object = [self fromJsonWithComGoogleGsonJsonElement:json withJavaLangReflectType:classOfT];
  return [((IOSClass *) nil_chk(ComGoogleGsonInternalPrimitives_wrapWithIOSClass_(classOfT))) cast:object];
}

- (id)fromJsonWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                   withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT {
  if (json == nil) {
    return nil;
  }
  return [self fromJsonWithComGoogleGsonStreamJsonReader:create_ComGoogleGsonInternalBindJsonTreeReader_initWithComGoogleGsonJsonElement_(json) withJavaLangReflectType:typeOfT];
}

- (NSString *)description {
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([create_JavaLangStringBuilder_initWithNSString_(@"{serializeNulls:") appendWithBoolean:serializeNulls_])) appendWithNSString:@"factories:"])) appendWithId:factories_])) appendWithNSString:@",instanceCreators:"])) appendWithId:constructorConstructor_])) appendWithNSString:@"}"])) description];
}

- (void)dealloc {
  RELEASE_(calls_);
  RELEASE_(typeTokenCache_);
  RELEASE_(factories_);
  RELEASE_(constructorConstructor_);
  RELEASE_(deserializationContext_);
  RELEASE_(serializationContext_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleGsonTypeAdapter;", 0x2, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComGoogleGsonTypeAdapter;", 0x2, 5, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonTypeAdapter;", 0x2, 8, 9, -1, 10, -1, -1 },
    { NULL, "LComGoogleGsonTypeAdapter;", 0x1, 11, 12, -1, 13, -1, -1 },
    { NULL, "LComGoogleGsonTypeAdapter;", 0x1, 14, 15, -1, 16, -1, -1 },
    { NULL, "LComGoogleGsonTypeAdapter;", 0x1, 11, 17, -1, 18, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 19, 21, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 22, 20, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 22, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 23, 24, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 25, 24, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 26, 24, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 22, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 28, 24, -1, -1, -1 },
    { NULL, "LComGoogleGsonStreamJsonWriter;", 0x2, 29, 30, 31, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 32, 24, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 33, 34, 35, 36, -1, -1 },
    { NULL, "LNSObject;", 0x1, 33, 37, 35, 38, -1, -1 },
    { NULL, "LNSObject;", 0x1, 33, 39, 40, 41, -1, -1 },
    { NULL, "LNSObject;", 0x1, 33, 42, 43, 44, -1, -1 },
    { NULL, "V", 0xa, 45, 46, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 33, 47, 43, 48, -1, -1 },
    { NULL, "LNSObject;", 0x1, 33, 49, 35, 50, -1, -1 },
    { NULL, "LNSObject;", 0x1, 33, 51, 35, 52, -1, -1 },
    { NULL, "LNSString;", 0x1, 53, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComGoogleGsonInternalExcluder:withComGoogleGsonFieldNamingStrategy:withJavaUtilMap:withBoolean:withBoolean:withBoolean:withBoolean:withBoolean:withBoolean:withComGoogleGsonLongSerializationPolicy:withJavaUtilList:);
  methods[2].selector = @selector(doubleAdapterWithBoolean:);
  methods[3].selector = @selector(floatAdapterWithBoolean:);
  methods[4].selector = @selector(checkValidFloatingPointWithDouble:);
  methods[5].selector = @selector(longAdapterWithComGoogleGsonLongSerializationPolicy:);
  methods[6].selector = @selector(getAdapterWithComGoogleGsonReflectTypeToken:);
  methods[7].selector = @selector(getDelegateAdapterWithComGoogleGsonTypeAdapterFactory:withComGoogleGsonReflectTypeToken:);
  methods[8].selector = @selector(getAdapterWithIOSClass:);
  methods[9].selector = @selector(toJsonTreeWithId:);
  methods[10].selector = @selector(toJsonTreeWithId:withJavaLangReflectType:);
  methods[11].selector = @selector(toJsonWithId:);
  methods[12].selector = @selector(toJsonWithId:withJavaLangReflectType:);
  methods[13].selector = @selector(toJsonWithId:withJavaLangAppendable:);
  methods[14].selector = @selector(toJsonWithId:withJavaLangReflectType:withJavaLangAppendable:);
  methods[15].selector = @selector(toJsonWithId:withJavaLangReflectType:withComGoogleGsonStreamJsonWriter:);
  methods[16].selector = @selector(toJsonWithComGoogleGsonJsonElement:);
  methods[17].selector = @selector(toJsonWithComGoogleGsonJsonElement:withJavaLangAppendable:);
  methods[18].selector = @selector(newJsonWriterWithJavaIoWriter:);
  methods[19].selector = @selector(toJsonWithComGoogleGsonJsonElement:withComGoogleGsonStreamJsonWriter:);
  methods[20].selector = @selector(fromJsonWithNSString:withIOSClass:);
  methods[21].selector = @selector(fromJsonWithNSString:withJavaLangReflectType:);
  methods[22].selector = @selector(fromJsonWithJavaIoReader:withIOSClass:);
  methods[23].selector = @selector(fromJsonWithJavaIoReader:withJavaLangReflectType:);
  methods[24].selector = @selector(assertFullConsumptionWithId:withComGoogleGsonStreamJsonReader:);
  methods[25].selector = @selector(fromJsonWithComGoogleGsonStreamJsonReader:withJavaLangReflectType:);
  methods[26].selector = @selector(fromJsonWithComGoogleGsonJsonElement:withIOSClass:);
  methods[27].selector = @selector(fromJsonWithComGoogleGsonJsonElement:withJavaLangReflectType:);
  methods[28].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_JSON_NON_EXECUTABLE", "Z", .constantValue.asBOOL = ComGoogleGsonGson_DEFAULT_JSON_NON_EXECUTABLE, 0x18, -1, -1, -1, -1 },
    { "JSON_NON_EXECUTABLE_PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 54, -1, -1 },
    { "calls_", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x12, -1, -1, 55, -1 },
    { "typeTokenCache_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 56, -1 },
    { "factories_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 57, -1 },
    { "constructorConstructor_", "LComGoogleGsonInternalConstructorConstructor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "serializeNulls_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "htmlSafe_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "generateNonExecutableJson_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "prettyPrinting_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "deserializationContext_", "LComGoogleGsonJsonDeserializationContext;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "serializationContext_", "LComGoogleGsonJsonSerializationContext;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonInternalExcluder;LComGoogleGsonFieldNamingStrategy;LJavaUtilMap;ZZZZZZLComGoogleGsonLongSerializationPolicy;LJavaUtilList;", "(Lcom/google/gson/internal/Excluder;Lcom/google/gson/FieldNamingStrategy;Ljava/util/Map<Ljava/lang/reflect/Type;Lcom/google/gson/InstanceCreator<*>;>;ZZZZZZLcom/google/gson/LongSerializationPolicy;Ljava/util/List<Lcom/google/gson/TypeAdapterFactory;>;)V", "doubleAdapter", "Z", "(Z)Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;", "floatAdapter", "checkValidFloatingPoint", "D", "longAdapter", "LComGoogleGsonLongSerializationPolicy;", "(Lcom/google/gson/LongSerializationPolicy;)Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;", "getAdapter", "LComGoogleGsonReflectTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "getDelegateAdapter", "LComGoogleGsonTypeAdapterFactory;LComGoogleGsonReflectTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/TypeAdapterFactory;Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)Lcom/google/gson/TypeAdapter<TT;>;", "toJsonTree", "LNSObject;", "LNSObject;LJavaLangReflectType;", "toJson", "LNSObject;LJavaLangAppendable;", "LComGoogleGsonJsonIOException;", "LNSObject;LJavaLangReflectType;LJavaLangAppendable;", "LNSObject;LJavaLangReflectType;LComGoogleGsonStreamJsonWriter;", "LComGoogleGsonJsonElement;", "LComGoogleGsonJsonElement;LJavaLangAppendable;", "newJsonWriter", "LJavaIoWriter;", "LJavaIoIOException;", "LComGoogleGsonJsonElement;LComGoogleGsonStreamJsonWriter;", "fromJson", "LNSString;LIOSClass;", "LComGoogleGsonJsonSyntaxException;", "<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/Class<TT;>;)TT;", "LNSString;LJavaLangReflectType;", "<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/reflect/Type;)TT;", "LJavaIoReader;LIOSClass;", "LComGoogleGsonJsonSyntaxException;LComGoogleGsonJsonIOException;", "<T:Ljava/lang/Object;>(Ljava/io/Reader;Ljava/lang/Class<TT;>;)TT;", "LJavaIoReader;LJavaLangReflectType;", "LComGoogleGsonJsonIOException;LComGoogleGsonJsonSyntaxException;", "<T:Ljava/lang/Object;>(Ljava/io/Reader;Ljava/lang/reflect/Type;)TT;", "assertFullConsumption", "LNSObject;LComGoogleGsonStreamJsonReader;", "LComGoogleGsonStreamJsonReader;LJavaLangReflectType;", "<T:Ljava/lang/Object;>(Lcom/google/gson/stream/JsonReader;Ljava/lang/reflect/Type;)TT;", "LComGoogleGsonJsonElement;LIOSClass;", "<T:Ljava/lang/Object;>(Lcom/google/gson/JsonElement;Ljava/lang/Class<TT;>;)TT;", "LComGoogleGsonJsonElement;LJavaLangReflectType;", "<T:Ljava/lang/Object;>(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;)TT;", "toString", &ComGoogleGsonGson_JSON_NON_EXECUTABLE_PREFIX, "Ljava/lang/ThreadLocal<Ljava/util/Map<Lcom/google/gson/reflect/TypeToken<*>;Lcom/google/gson/Gson$FutureTypeAdapter<*>;>;>;", "Ljava/util/Map<Lcom/google/gson/reflect/TypeToken<*>;Lcom/google/gson/TypeAdapter<*>;>;", "Ljava/util/List<Lcom/google/gson/TypeAdapterFactory;>;", "LComGoogleGsonGson_FutureTypeAdapter;" };
  static const J2ObjcClassInfo _ComGoogleGsonGson = { "Gson", "com.google.gson", ptrTable, methods, fields, 7, 0x11, 29, 12, -1, 58, -1, -1, -1 };
  return &_ComGoogleGsonGson;
}

@end

void ComGoogleGsonGson_init(ComGoogleGsonGson *self) {
  ComGoogleGsonGson_initWithComGoogleGsonInternalExcluder_withComGoogleGsonFieldNamingStrategy_withJavaUtilMap_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withComGoogleGsonLongSerializationPolicy_withJavaUtilList_(self, JreLoadStatic(ComGoogleGsonInternalExcluder, DEFAULT), JreLoadEnum(ComGoogleGsonFieldNamingPolicy, IDENTITY), JavaUtilCollections_emptyMap(), false, false, ComGoogleGsonGson_DEFAULT_JSON_NON_EXECUTABLE, true, false, false, JreLoadEnum(ComGoogleGsonLongSerializationPolicy, DEFAULT), JavaUtilCollections_emptyList());
}

ComGoogleGsonGson *new_ComGoogleGsonGson_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGson, init)
}

ComGoogleGsonGson *create_ComGoogleGsonGson_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGson, init)
}

void ComGoogleGsonGson_initWithComGoogleGsonInternalExcluder_withComGoogleGsonFieldNamingStrategy_withJavaUtilMap_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withComGoogleGsonLongSerializationPolicy_withJavaUtilList_(ComGoogleGsonGson *self, ComGoogleGsonInternalExcluder *excluder, id<ComGoogleGsonFieldNamingStrategy> fieldNamingPolicy, id<JavaUtilMap> instanceCreators, jboolean serializeNulls, jboolean complexMapKeySerialization, jboolean generateNonExecutableGson, jboolean htmlSafe, jboolean prettyPrinting, jboolean serializeSpecialFloatingPointValues, ComGoogleGsonLongSerializationPolicy *longSerializationPolicy, id<JavaUtilList> typeAdapterFactories) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->calls_, new_JavaLangThreadLocal_init());
  JreStrongAssign(&self->typeTokenCache_, JavaUtilCollections_synchronizedMapWithJavaUtilMap_(create_JavaUtilHashMap_init()));
  JreStrongAssignAndConsume(&self->deserializationContext_, new_ComGoogleGsonGson_1_initWithComGoogleGsonGson_(self));
  JreStrongAssignAndConsume(&self->serializationContext_, new_ComGoogleGsonGson_2_initWithComGoogleGsonGson_(self));
  JreStrongAssignAndConsume(&self->constructorConstructor_, new_ComGoogleGsonInternalConstructorConstructor_initWithJavaUtilMap_(instanceCreators));
  self->serializeNulls_ = serializeNulls;
  self->generateNonExecutableJson_ = generateNonExecutableGson;
  self->htmlSafe_ = htmlSafe;
  self->prettyPrinting_ = prettyPrinting;
  id<JavaUtilList> factories = create_JavaUtilArrayList_init();
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, JSON_ELEMENT_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindObjectTypeAdapter, FACTORY)];
  [factories addWithId:excluder];
  [factories addAllWithJavaUtilCollection:typeAdapterFactories];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, STRING_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, INTEGER_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, BOOLEAN_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, BYTE_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, SHORT_FACTORY)];
  [factories addWithId:ComGoogleGsonInternalBindTypeAdapters_newFactoryWithIOSClass_withIOSClass_withComGoogleGsonTypeAdapter_([IOSClass longClass], JavaLangLong_class_(), ComGoogleGsonGson_longAdapterWithComGoogleGsonLongSerializationPolicy_(self, longSerializationPolicy))];
  [factories addWithId:ComGoogleGsonInternalBindTypeAdapters_newFactoryWithIOSClass_withIOSClass_withComGoogleGsonTypeAdapter_([IOSClass doubleClass], JavaLangDouble_class_(), ComGoogleGsonGson_doubleAdapterWithBoolean_(self, serializeSpecialFloatingPointValues))];
  [factories addWithId:ComGoogleGsonInternalBindTypeAdapters_newFactoryWithIOSClass_withIOSClass_withComGoogleGsonTypeAdapter_([IOSClass floatClass], JavaLangFloat_class_(), ComGoogleGsonGson_floatAdapterWithBoolean_(self, serializeSpecialFloatingPointValues))];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, NUMBER_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, CHARACTER_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, STRING_BUILDER_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, STRING_BUFFER_FACTORY)];
  [factories addWithId:ComGoogleGsonInternalBindTypeAdapters_newFactoryWithIOSClass_withComGoogleGsonTypeAdapter_(JavaMathBigDecimal_class_(), JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, BIG_DECIMAL))];
  [factories addWithId:ComGoogleGsonInternalBindTypeAdapters_newFactoryWithIOSClass_withComGoogleGsonTypeAdapter_(JavaMathBigInteger_class_(), JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, BIG_INTEGER))];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, URL_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, URI_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, UUID_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, LOCALE_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, INET_ADDRESS_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, BIT_SET_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindDateTypeAdapter, FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, CALENDAR_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTimeTypeAdapter, FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindSqlDateTypeAdapter, FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, TIMESTAMP_FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindArrayTypeAdapter, FACTORY)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, CLASS_FACTORY)];
  [factories addWithId:create_ComGoogleGsonInternalBindCollectionTypeAdapterFactory_initWithComGoogleGsonInternalConstructorConstructor_(self->constructorConstructor_)];
  [factories addWithId:create_ComGoogleGsonInternalBindMapTypeAdapterFactory_initWithComGoogleGsonInternalConstructorConstructor_withBoolean_(self->constructorConstructor_, complexMapKeySerialization)];
  [factories addWithId:create_ComGoogleGsonInternalBindJsonAdapterAnnotationTypeAdapterFactory_initWithComGoogleGsonInternalConstructorConstructor_(self->constructorConstructor_)];
  [factories addWithId:JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, ENUM_FACTORY)];
  [factories addWithId:create_ComGoogleGsonInternalBindReflectiveTypeAdapterFactory_initWithComGoogleGsonInternalConstructorConstructor_withComGoogleGsonFieldNamingStrategy_withComGoogleGsonInternalExcluder_(self->constructorConstructor_, fieldNamingPolicy, excluder)];
  JreStrongAssign(&self->factories_, JavaUtilCollections_unmodifiableListWithJavaUtilList_(factories));
}

ComGoogleGsonGson *new_ComGoogleGsonGson_initWithComGoogleGsonInternalExcluder_withComGoogleGsonFieldNamingStrategy_withJavaUtilMap_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withComGoogleGsonLongSerializationPolicy_withJavaUtilList_(ComGoogleGsonInternalExcluder *excluder, id<ComGoogleGsonFieldNamingStrategy> fieldNamingPolicy, id<JavaUtilMap> instanceCreators, jboolean serializeNulls, jboolean complexMapKeySerialization, jboolean generateNonExecutableGson, jboolean htmlSafe, jboolean prettyPrinting, jboolean serializeSpecialFloatingPointValues, ComGoogleGsonLongSerializationPolicy *longSerializationPolicy, id<JavaUtilList> typeAdapterFactories) {
  J2OBJC_NEW_IMPL(ComGoogleGsonGson, initWithComGoogleGsonInternalExcluder_withComGoogleGsonFieldNamingStrategy_withJavaUtilMap_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withComGoogleGsonLongSerializationPolicy_withJavaUtilList_, excluder, fieldNamingPolicy, instanceCreators, serializeNulls, complexMapKeySerialization, generateNonExecutableGson, htmlSafe, prettyPrinting, serializeSpecialFloatingPointValues, longSerializationPolicy, typeAdapterFactories)
}

ComGoogleGsonGson *create_ComGoogleGsonGson_initWithComGoogleGsonInternalExcluder_withComGoogleGsonFieldNamingStrategy_withJavaUtilMap_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withComGoogleGsonLongSerializationPolicy_withJavaUtilList_(ComGoogleGsonInternalExcluder *excluder, id<ComGoogleGsonFieldNamingStrategy> fieldNamingPolicy, id<JavaUtilMap> instanceCreators, jboolean serializeNulls, jboolean complexMapKeySerialization, jboolean generateNonExecutableGson, jboolean htmlSafe, jboolean prettyPrinting, jboolean serializeSpecialFloatingPointValues, ComGoogleGsonLongSerializationPolicy *longSerializationPolicy, id<JavaUtilList> typeAdapterFactories) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGson, initWithComGoogleGsonInternalExcluder_withComGoogleGsonFieldNamingStrategy_withJavaUtilMap_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withBoolean_withComGoogleGsonLongSerializationPolicy_withJavaUtilList_, excluder, fieldNamingPolicy, instanceCreators, serializeNulls, complexMapKeySerialization, generateNonExecutableGson, htmlSafe, prettyPrinting, serializeSpecialFloatingPointValues, longSerializationPolicy, typeAdapterFactories)
}

ComGoogleGsonTypeAdapter *ComGoogleGsonGson_doubleAdapterWithBoolean_(ComGoogleGsonGson *self, jboolean serializeSpecialFloatingPointValues) {
  if (serializeSpecialFloatingPointValues) {
    return JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, DOUBLE);
  }
  return create_ComGoogleGsonGson_3_initWithComGoogleGsonGson_(self);
}

ComGoogleGsonTypeAdapter *ComGoogleGsonGson_floatAdapterWithBoolean_(ComGoogleGsonGson *self, jboolean serializeSpecialFloatingPointValues) {
  if (serializeSpecialFloatingPointValues) {
    return JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, FLOAT);
  }
  return create_ComGoogleGsonGson_4_initWithComGoogleGsonGson_(self);
}

void ComGoogleGsonGson_checkValidFloatingPointWithDouble_(ComGoogleGsonGson *self, jdouble value) {
  if (JavaLangDouble_isNaNWithDouble_(value) || JavaLangDouble_isInfiniteWithDouble_(value)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("D$", value, @" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method."));
  }
}

ComGoogleGsonTypeAdapter *ComGoogleGsonGson_longAdapterWithComGoogleGsonLongSerializationPolicy_(ComGoogleGsonGson *self, ComGoogleGsonLongSerializationPolicy *longSerializationPolicy) {
  if (longSerializationPolicy == JreLoadEnum(ComGoogleGsonLongSerializationPolicy, DEFAULT)) {
    return JreLoadStatic(ComGoogleGsonInternalBindTypeAdapters, LONG);
  }
  return create_ComGoogleGsonGson_5_init();
}

ComGoogleGsonStreamJsonWriter *ComGoogleGsonGson_newJsonWriterWithJavaIoWriter_(ComGoogleGsonGson *self, JavaIoWriter *writer) {
  if (self->generateNonExecutableJson_) {
    [((JavaIoWriter *) nil_chk(writer)) writeWithNSString:ComGoogleGsonGson_JSON_NON_EXECUTABLE_PREFIX];
  }
  ComGoogleGsonStreamJsonWriter *jsonWriter = create_ComGoogleGsonStreamJsonWriter_initWithJavaIoWriter_(writer);
  if (self->prettyPrinting_) {
    [jsonWriter setIndentWithNSString:@"  "];
  }
  [jsonWriter setSerializeNullsWithBoolean:self->serializeNulls_];
  return jsonWriter;
}

void ComGoogleGsonGson_assertFullConsumptionWithId_withComGoogleGsonStreamJsonReader_(id obj, ComGoogleGsonStreamJsonReader *reader) {
  ComGoogleGsonGson_initialize();
  @try {
    if (obj != nil && [((ComGoogleGsonStreamJsonReader *) nil_chk(reader)) peek] != JreLoadEnum(ComGoogleGsonStreamJsonToken, END_DOCUMENT)) {
      @throw create_ComGoogleGsonJsonIOException_initWithNSString_(@"JSON document was not fully consumed.");
    }
  }
  @catch (ComGoogleGsonStreamMalformedJsonException *e) {
    @throw create_ComGoogleGsonJsonSyntaxException_initWithJavaLangThrowable_(e);
  }
  @catch (JavaIoIOException *e) {
    @throw create_ComGoogleGsonJsonIOException_initWithJavaLangThrowable_(e);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGson)

@implementation ComGoogleGsonGson_1

- (instancetype __nonnull)initWithComGoogleGsonGson:(ComGoogleGsonGson *)outer$ {
  ComGoogleGsonGson_1_initWithComGoogleGsonGson_(self, outer$);
  return self;
}

- (id)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT {
  return [this$0_ fromJsonWithComGoogleGsonJsonElement:json withJavaLangReflectType:typeOfT];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonGson:);
  methods[1].selector = @selector(deserializeWithComGoogleGsonJsonElement:withJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "deserialize", "LComGoogleGsonJsonElement;LJavaLangReflectType;", "LComGoogleGsonJsonParseException;", "<T:Ljava/lang/Object;>(Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;)TT;", "LComGoogleGsonGson;" };
  static const J2ObjcClassInfo _ComGoogleGsonGson_1 = { "", "com.google.gson", ptrTable, methods, fields, 7, 0x8018, 2, 1, 4, -1, -1, -1, -1 };
  return &_ComGoogleGsonGson_1;
}

@end

void ComGoogleGsonGson_1_initWithComGoogleGsonGson_(ComGoogleGsonGson_1 *self, ComGoogleGsonGson *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ComGoogleGsonGson_1 *new_ComGoogleGsonGson_1_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleGsonGson_1, initWithComGoogleGsonGson_, outer$)
}

ComGoogleGsonGson_1 *create_ComGoogleGsonGson_1_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGson_1, initWithComGoogleGsonGson_, outer$)
}

@implementation ComGoogleGsonGson_2

- (instancetype __nonnull)initWithComGoogleGsonGson:(ComGoogleGsonGson *)outer$ {
  ComGoogleGsonGson_2_initWithComGoogleGsonGson_(self, outer$);
  return self;
}

- (ComGoogleGsonJsonElement *)serializeWithId:(id)src {
  return [this$0_ toJsonTreeWithId:src];
}

- (ComGoogleGsonJsonElement *)serializeWithId:(id)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc {
  return [this$0_ toJsonTreeWithId:src withJavaLangReflectType:typeOfSrc];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonGson:);
  methods[1].selector = @selector(serializeWithId:);
  methods[2].selector = @selector(serializeWithId:withJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LNSObject;", "LNSObject;LJavaLangReflectType;", "LComGoogleGsonGson;" };
  static const J2ObjcClassInfo _ComGoogleGsonGson_2 = { "", "com.google.gson", ptrTable, methods, fields, 7, 0x8018, 3, 1, 3, -1, -1, -1, -1 };
  return &_ComGoogleGsonGson_2;
}

@end

void ComGoogleGsonGson_2_initWithComGoogleGsonGson_(ComGoogleGsonGson_2 *self, ComGoogleGsonGson *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

ComGoogleGsonGson_2 *new_ComGoogleGsonGson_2_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleGsonGson_2, initWithComGoogleGsonGson_, outer$)
}

ComGoogleGsonGson_2 *create_ComGoogleGsonGson_2_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGson_2, initWithComGoogleGsonGson_, outer$)
}

@implementation ComGoogleGsonGson_3

- (instancetype __nonnull)initWithComGoogleGsonGson:(ComGoogleGsonGson *)outer$ {
  ComGoogleGsonGson_3_initWithComGoogleGsonGson_(self, outer$);
  return self;
}

- (JavaLangDouble *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg {
  if ([((ComGoogleGsonStreamJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(ComGoogleGsonStreamJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaLangDouble_valueOfWithDouble_([inArg nextDouble]);
}

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(NSNumber *)value {
  if (value == nil) {
    [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) nullValue];
    return;
  }
  jdouble doubleValue = [value doubleValue];
  ComGoogleGsonGson_checkValidFloatingPointWithDouble_(this$0_, doubleValue);
  [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangDouble;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonGson:);
  methods[1].selector = @selector(readWithComGoogleGsonStreamJsonReader:);
  methods[2].selector = @selector(writeWithComGoogleGsonStreamJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "read", "LComGoogleGsonStreamJsonReader;", "LJavaIoIOException;", "write", "LComGoogleGsonStreamJsonWriter;LNSNumber;", "LComGoogleGsonGson;", "doubleAdapterWithBoolean:", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGson_3 = { "", "com.google.gson", ptrTable, methods, fields, 7, 0x8018, 3, 1, 5, -1, 6, 7, -1 };
  return &_ComGoogleGsonGson_3;
}

@end

void ComGoogleGsonGson_3_initWithComGoogleGsonGson_(ComGoogleGsonGson_3 *self, ComGoogleGsonGson *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ComGoogleGsonTypeAdapter_init(self);
}

ComGoogleGsonGson_3 *new_ComGoogleGsonGson_3_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleGsonGson_3, initWithComGoogleGsonGson_, outer$)
}

ComGoogleGsonGson_3 *create_ComGoogleGsonGson_3_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGson_3, initWithComGoogleGsonGson_, outer$)
}

@implementation ComGoogleGsonGson_4

- (instancetype __nonnull)initWithComGoogleGsonGson:(ComGoogleGsonGson *)outer$ {
  ComGoogleGsonGson_4_initWithComGoogleGsonGson_(self, outer$);
  return self;
}

- (JavaLangFloat *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg {
  if ([((ComGoogleGsonStreamJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(ComGoogleGsonStreamJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaLangFloat_valueOfWithFloat_((jfloat) [inArg nextDouble]);
}

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(NSNumber *)value {
  if (value == nil) {
    [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) nullValue];
    return;
  }
  jfloat floatValue = [value floatValue];
  ComGoogleGsonGson_checkValidFloatingPointWithDouble_(this$0_, floatValue);
  [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) valueWithNSNumber:value];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangFloat;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonGson:);
  methods[1].selector = @selector(readWithComGoogleGsonStreamJsonReader:);
  methods[2].selector = @selector(writeWithComGoogleGsonStreamJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "read", "LComGoogleGsonStreamJsonReader;", "LJavaIoIOException;", "write", "LComGoogleGsonStreamJsonWriter;LNSNumber;", "LComGoogleGsonGson;", "floatAdapterWithBoolean:", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGson_4 = { "", "com.google.gson", ptrTable, methods, fields, 7, 0x8018, 3, 1, 5, -1, 6, 7, -1 };
  return &_ComGoogleGsonGson_4;
}

@end

void ComGoogleGsonGson_4_initWithComGoogleGsonGson_(ComGoogleGsonGson_4 *self, ComGoogleGsonGson *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  ComGoogleGsonTypeAdapter_init(self);
}

ComGoogleGsonGson_4 *new_ComGoogleGsonGson_4_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleGsonGson_4, initWithComGoogleGsonGson_, outer$)
}

ComGoogleGsonGson_4 *create_ComGoogleGsonGson_4_initWithComGoogleGsonGson_(ComGoogleGsonGson *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGson_4, initWithComGoogleGsonGson_, outer$)
}

@implementation ComGoogleGsonGson_5

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGson_5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSNumber *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg {
  if ([((ComGoogleGsonStreamJsonReader *) nil_chk(inArg)) peek] == JreLoadEnum(ComGoogleGsonStreamJsonToken, NULL)) {
    [inArg nextNull];
    return nil;
  }
  return JavaLangLong_valueOfWithLong_([inArg nextLong]);
}

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(NSNumber *)value {
  if (value == nil) {
    [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) nullValue];
    return;
  }
  [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) valueWithNSString:[value description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readWithComGoogleGsonStreamJsonReader:);
  methods[2].selector = @selector(writeWithComGoogleGsonStreamJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "read", "LComGoogleGsonStreamJsonReader;", "LJavaIoIOException;", "write", "LComGoogleGsonStreamJsonWriter;LNSNumber;", "LComGoogleGsonGson;", "longAdapterWithComGoogleGsonLongSerializationPolicy:", "Lcom/google/gson/TypeAdapter<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGson_5 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, 6, 7, -1 };
  return &_ComGoogleGsonGson_5;
}

@end

void ComGoogleGsonGson_5_init(ComGoogleGsonGson_5 *self) {
  ComGoogleGsonTypeAdapter_init(self);
}

ComGoogleGsonGson_5 *new_ComGoogleGsonGson_5_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGson_5, init)
}

ComGoogleGsonGson_5 *create_ComGoogleGsonGson_5_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGson_5, init)
}

@implementation ComGoogleGsonGson_FutureTypeAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGson_FutureTypeAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setDelegateWithComGoogleGsonTypeAdapter:(ComGoogleGsonTypeAdapter *)typeAdapter {
  if (delegate_ != nil) {
    @throw create_JavaLangAssertionError_init();
  }
  JreStrongAssign(&delegate_, typeAdapter);
}

- (id)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg {
  if (delegate_ == nil) {
    @throw create_JavaLangIllegalStateException_init();
  }
  return [delegate_ readWithComGoogleGsonStreamJsonReader:inArg];
}

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(id)value {
  if (delegate_ == nil) {
    @throw create_JavaLangIllegalStateException_init();
  }
  [delegate_ writeWithComGoogleGsonStreamJsonWriter:outArg withId:value];
}

- (void)dealloc {
  RELEASE_(delegate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 4, 5, 6, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 5, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setDelegateWithComGoogleGsonTypeAdapter:);
  methods[2].selector = @selector(readWithComGoogleGsonStreamJsonReader:);
  methods[3].selector = @selector(writeWithComGoogleGsonStreamJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", "LComGoogleGsonTypeAdapter;", .constantValue.asLong = 0, 0x2, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "setDelegate", "LComGoogleGsonTypeAdapter;", "(Lcom/google/gson/TypeAdapter<TT;>;)V", "read", "LComGoogleGsonStreamJsonReader;", "LJavaIoIOException;", "(Lcom/google/gson/stream/JsonReader;)TT;", "write", "LComGoogleGsonStreamJsonWriter;LNSObject;", "(Lcom/google/gson/stream/JsonWriter;TT;)V", "Lcom/google/gson/TypeAdapter<TT;>;", "LComGoogleGsonGson;", "<T:Ljava/lang/Object;>Lcom/google/gson/TypeAdapter<TT;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGson_FutureTypeAdapter = { "FutureTypeAdapter", "com.google.gson", ptrTable, methods, fields, 7, 0x8, 4, 1, 11, -1, -1, 12, -1 };
  return &_ComGoogleGsonGson_FutureTypeAdapter;
}

@end

void ComGoogleGsonGson_FutureTypeAdapter_init(ComGoogleGsonGson_FutureTypeAdapter *self) {
  ComGoogleGsonTypeAdapter_init(self);
}

ComGoogleGsonGson_FutureTypeAdapter *new_ComGoogleGsonGson_FutureTypeAdapter_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGson_FutureTypeAdapter, init)
}

ComGoogleGsonGson_FutureTypeAdapter *create_ComGoogleGsonGson_FutureTypeAdapter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGson_FutureTypeAdapter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGson_FutureTypeAdapter)
