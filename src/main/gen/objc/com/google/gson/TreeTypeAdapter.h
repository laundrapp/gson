//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/main/java/com/google/gson/TreeTypeAdapter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonTreeTypeAdapter")
#ifdef RESTRICT_ComGoogleGsonTreeTypeAdapter
#define INCLUDE_ALL_ComGoogleGsonTreeTypeAdapter 0
#else
#define INCLUDE_ALL_ComGoogleGsonTreeTypeAdapter 1
#endif
#undef RESTRICT_ComGoogleGsonTreeTypeAdapter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonTreeTypeAdapter_) && (INCLUDE_ALL_ComGoogleGsonTreeTypeAdapter || defined(INCLUDE_ComGoogleGsonTreeTypeAdapter))
#define ComGoogleGsonTreeTypeAdapter_

#define RESTRICT_ComGoogleGsonTypeAdapter 1
#define INCLUDE_ComGoogleGsonTypeAdapter 1
#include "com/google/gson/TypeAdapter.h"

@class ComGoogleGsonReflectTypeToken;
@class ComGoogleGsonStreamJsonReader;
@class ComGoogleGsonStreamJsonWriter;
@class IOSClass;
@protocol ComGoogleGsonTypeAdapterFactory;

/*!
 @brief Adapts a Gson 1.x tree-style adapter as a streaming TypeAdapter.Since the
  tree adapter may be serialization-only or deserialization-only, this class
  has a facility to lookup a delegate type adapter on demand.
 */
@interface ComGoogleGsonTreeTypeAdapter : ComGoogleGsonTypeAdapter

#pragma mark Public

/*!
 @brief Returns a new factory that will match each type against <code>exactType</code>.
 */
+ (id<ComGoogleGsonTypeAdapterFactory>)newFactoryWithComGoogleGsonReflectTypeToken:(ComGoogleGsonReflectTypeToken *)exactType
                                                                            withId:(id)typeAdapter OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Returns a new factory that will match each type and its raw type against 
 <code>exactType</code>.
 */
+ (id<ComGoogleGsonTypeAdapterFactory>)newFactoryWithMatchRawTypeWithComGoogleGsonReflectTypeToken:(ComGoogleGsonReflectTypeToken *)exactType
                                                                                            withId:(id)typeAdapter OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Returns a new factory that will match each type's raw type for assignability
  to <code>hierarchyType</code>.
 */
+ (id<ComGoogleGsonTypeAdapterFactory>)newTypeHierarchyFactoryWithIOSClass:(IOSClass *)hierarchyType
                                                                    withId:(id)typeAdapter OBJC_METHOD_FAMILY_NONE;

- (id)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(id)value;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonTreeTypeAdapter)

FOUNDATION_EXPORT id<ComGoogleGsonTypeAdapterFactory> ComGoogleGsonTreeTypeAdapter_newFactoryWithComGoogleGsonReflectTypeToken_withId_(ComGoogleGsonReflectTypeToken *exactType, id typeAdapter);

FOUNDATION_EXPORT id<ComGoogleGsonTypeAdapterFactory> ComGoogleGsonTreeTypeAdapter_newFactoryWithMatchRawTypeWithComGoogleGsonReflectTypeToken_withId_(ComGoogleGsonReflectTypeToken *exactType, id typeAdapter);

FOUNDATION_EXPORT id<ComGoogleGsonTypeAdapterFactory> ComGoogleGsonTreeTypeAdapter_newTypeHierarchyFactoryWithIOSClass_withId_(IOSClass *hierarchyType, id typeAdapter);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonTreeTypeAdapter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonTreeTypeAdapter")
