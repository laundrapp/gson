//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/VersionExclusionStrategyTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonVersionExclusionStrategyTest")
#ifdef RESTRICT_ComGoogleGsonVersionExclusionStrategyTest
#define INCLUDE_ALL_ComGoogleGsonVersionExclusionStrategyTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonVersionExclusionStrategyTest 1
#endif
#undef RESTRICT_ComGoogleGsonVersionExclusionStrategyTest

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonVersionExclusionStrategyTest_) && (INCLUDE_ALL_ComGoogleGsonVersionExclusionStrategyTest || defined(INCLUDE_ComGoogleGsonVersionExclusionStrategyTest))
#define ComGoogleGsonVersionExclusionStrategyTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Unit tests for the <code>Excluder</code> class.
 @author Joel Leitch
 */
@interface ComGoogleGsonVersionExclusionStrategyTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype __nonnull)init;

- (void)testClassAndFieldAreAheadInVersion;

- (void)testClassAndFieldAreAtSameVersion;

- (void)testClassAndFieldAreBehindInVersion;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonVersionExclusionStrategyTest)

FOUNDATION_EXPORT void ComGoogleGsonVersionExclusionStrategyTest_init(ComGoogleGsonVersionExclusionStrategyTest *self);

FOUNDATION_EXPORT ComGoogleGsonVersionExclusionStrategyTest *new_ComGoogleGsonVersionExclusionStrategyTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonVersionExclusionStrategyTest *create_ComGoogleGsonVersionExclusionStrategyTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonVersionExclusionStrategyTest)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonVersionExclusionStrategyTest")
