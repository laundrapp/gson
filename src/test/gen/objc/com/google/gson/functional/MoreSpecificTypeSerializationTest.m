//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
//

#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonObject.h"
#include "com/google/gson/functional/MoreSpecificTypeSerializationTest.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest () {
 @public
  ComGoogleGsonGson *gson_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest, gson_, ComGoogleGsonGson *)

@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base : NSObject {
 @public
  jint b_;
}

- (instancetype)initWithInt:(jint)b;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base)

__attribute__((unused)) static void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *self, jint b);

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(jint b) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(jint b);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base)

@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub : ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base {
 @public
  jint s_;
}

- (instancetype)initWithInt:(jint)b
                    withInt:(jint)s;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub)

__attribute__((unused)) static void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub *self, jint b, jint s);

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(jint b, jint s) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(jint b, jint s);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub)

@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields : NSObject {
 @public
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *b_;
}

- (instancetype)initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base:(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields, b_, ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *)

__attribute__((unused)) static void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields *self, ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *b);

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *b) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *b);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields)

@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields : NSObject {
 @public
  id<JavaUtilCollection> collection_;
  id<JavaUtilMap> map_;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                           withJavaUtilMap:(id<JavaUtilMap>)map;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields, collection_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields, map_, id<JavaUtilMap>)

__attribute__((unused)) static void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields *self, id<JavaUtilCollection> collection, id<JavaUtilMap> map);

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(id<JavaUtilCollection> collection, id<JavaUtilMap> map) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(id<JavaUtilCollection> collection, id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields)

@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase : NSObject {
 @public
  id t_;
}

- (instancetype)initWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase, t_, id)

__attribute__((unused)) static void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *self, id t);

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(id t) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(id t);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase)

@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub : ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase {
 @public
  id s_;
}

- (instancetype)initWithId:(id)t
                    withId:(id)s;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub, s_, id)

__attribute__((unused)) static void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub *self, id t, id s);

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(id t, id s) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(id t, id s);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub)

@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields : NSObject {
 @public
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *b_;
}

- (instancetype)initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase:(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields, b_, ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *)

__attribute__((unused)) static void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields *self, ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *b);

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *b) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *b);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields)

@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields : NSObject {
 @public
  id<JavaUtilCollection> collection_;
  id<JavaUtilMap> map_;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                           withJavaUtilMap:(id<JavaUtilMap>)map;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields, collection_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields, map_, id<JavaUtilMap>)

__attribute__((unused)) static void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields *self, id<JavaUtilCollection> collection, id<JavaUtilMap> map);

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(id<JavaUtilCollection> collection, id<JavaUtilMap> map) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(id<JavaUtilCollection> collection, id<JavaUtilMap> map);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields)

@implementation ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssignAndConsume(&gson_, new_ComGoogleGsonGson_init());
}

- (void)testSubclassFields {
  __unused ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields *target = create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_(create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(1, 2));
  __unused NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"\"b\":1"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"\"s\":2"]);
}

- (void)testListOfSubclassFields {
  __unused id<JavaUtilCollection> list = create_JavaUtilArrayList_init();
  [list addWithId:create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(1)];
  [list addWithId:create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(2, 3)];
  __unused ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields *target = create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(list, nil);
  __unused NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertTrueWithNSString_withBoolean_(json, [((NSString *) nil_chk(json)) java_contains:@"{\"b\":1}"]);
  JunitFrameworkTestCase_assertTrueWithNSString_withBoolean_(json, [json java_contains:@"{\"s\":3,\"b\":2}"]);
}

- (void)testMapOfSubclassFields {
  __unused id<JavaUtilMap> map = create_JavaUtilHashMap_init();
  [map putWithId:@"base" withId:create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(1)];
  [map putWithId:@"sub" withId:create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(2, 3)];
  __unused ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields *target = create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(nil, map);
  __unused ComGoogleGsonJsonObject *json = [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk([((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) toJsonTreeWithId:target])) getAsJsonObject])) getWithNSString:@"map"])) getAsJsonObject];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk([((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(json)) getWithNSString:@"base"])) getAsJsonObject])) getWithNSString:@"b"])) getAsInt]);
  __unused ComGoogleGsonJsonObject *sub = [((ComGoogleGsonJsonElement *) nil_chk([json getWithNSString:@"sub"])) getAsJsonObject];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(2, [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(sub)) getWithNSString:@"b"])) getAsInt]);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(3, [((ComGoogleGsonJsonElement *) nil_chk([sub getWithNSString:@"s"])) getAsInt]);
}

- (void)testParameterizedSubclassFields {
  __unused ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields *target = create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_(create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(@"one", @"two"));
  __unused NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"\"t\":\"one\""]);
  JunitFrameworkTestCase_assertFalseWithBoolean_([json java_contains:@"\"s\""]);
}

- (void)testListOfParameterizedSubclassFields {
  __unused id<JavaUtilCollection> list = create_JavaUtilArrayList_init();
  [list addWithId:create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(@"one")];
  [list addWithId:create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(@"two", @"three")];
  __unused ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields *target = create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(list, nil);
  __unused NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertTrueWithNSString_withBoolean_(json, [((NSString *) nil_chk(json)) java_contains:@"{\"t\":\"one\"}"]);
  JunitFrameworkTestCase_assertFalseWithNSString_withBoolean_(json, [json java_contains:@"\"s\":"]);
}

- (void)testMapOfParameterizedSubclassFields {
  __unused id<JavaUtilMap> map = create_JavaUtilHashMap_init();
  [map putWithId:@"base" withId:create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(@"one")];
  [map putWithId:@"sub" withId:create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(@"two", @"three")];
  __unused ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields *target = create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(nil, map);
  __unused ComGoogleGsonJsonObject *json = [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk([((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) toJsonTreeWithId:target])) getAsJsonObject])) getWithNSString:@"map"])) getAsJsonObject];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"one", [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk([((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(json)) getWithNSString:@"base"])) getAsJsonObject])) getWithNSString:@"t"])) getAsString]);
  __unused ComGoogleGsonJsonObject *sub = [((ComGoogleGsonJsonElement *) nil_chk([json getWithNSString:@"sub"])) getAsJsonObject];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"two", [((ComGoogleGsonJsonElement *) nil_chk([((ComGoogleGsonJsonObject *) nil_chk(sub)) getWithNSString:@"t"])) getAsString]);
  JunitFrameworkTestCase_assertNullWithId_([sub getWithNSString:@"s"]);
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testSubclassFields);
  methods[3].selector = @selector(testListOfSubclassFields);
  methods[4].selector = @selector(testMapOfSubclassFields);
  methods[5].selector = @selector(testParameterizedSubclassFields);
  methods[6].selector = @selector(testListOfParameterizedSubclassFields);
  methods[7].selector = @selector(testMapOfParameterizedSubclassFields);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base;LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub;LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields;LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields;LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase;LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub;LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields;LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest = { "MoreSpecificTypeSerializationTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, 1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest;
}

@end

void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_init(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest, init)
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest)

@implementation ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base

- (instancetype)initWithInt:(jint)b {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(self, b);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "b_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base = { "Base", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base;
}

@end

void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *self, jint b) {
  NSObject_init(self);
  self->b_ = b;
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(jint b) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base, initWithInt_, b)
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(jint b) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base, initWithInt_, b)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base)

@implementation ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub

- (instancetype)initWithInt:(jint)b
                    withInt:(jint)s {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(self, b, s);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "s_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub = { "Sub", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub;
}

@end

void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub *self, jint b, jint s) {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_initWithInt_(self, b);
  self->s_ = s;
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(jint b, jint s) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub, initWithInt_withInt_, b, s)
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub_initWithInt_withInt_(jint b, jint s) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub, initWithInt_withInt_, b, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Sub)

@implementation ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields

- (instancetype)initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base:(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *)b {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_(self, b);
  return self;
}

- (void)dealloc {
  RELEASE_(b_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "b_", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base;", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields = { "ClassWithBaseFields", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields;
}

@end

void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields *self, ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *b) {
  NSObject_init(self);
  JreStrongAssign(&self->b_, b);
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *b) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields, initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_, b)
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base *b) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields, initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_Base_, b)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithBaseFields)

@implementation ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                           withJavaUtilMap:(id<JavaUtilMap>)map {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(self, collection, map);
  return self;
}

- (void)dealloc {
  RELEASE_(collection_);
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilCollection:withJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "collection_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;LJavaUtilMap;", "(Ljava/util/Collection<Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$Base;>;Ljava/util/Map<Ljava/lang/String;Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$Base;>;)V", "Ljava/util/Collection<Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$Base;>;", "Ljava/util/Map<Ljava/lang/String;Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$Base;>;", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields = { "ClassWithContainersOfBaseFields", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields;
}

@end

void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields *self, id<JavaUtilCollection> collection, id<JavaUtilMap> map) {
  NSObject_init(self);
  JreStrongAssign(&self->collection_, collection);
  JreStrongAssign(&self->map_, map);
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(id<JavaUtilCollection> collection, id<JavaUtilMap> map) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields, initWithJavaUtilCollection_withJavaUtilMap_, collection, map)
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(id<JavaUtilCollection> collection, id<JavaUtilMap> map) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields, initWithJavaUtilCollection_withJavaUtilMap_, collection, map)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfBaseFields)

@implementation ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase

- (instancetype)initWithId:(id)t {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(self, t);
  return self;
}

- (void)dealloc {
  RELEASE_(t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "t_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TT;)V", "TT;", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase = { "ParameterizedBase", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 3, -1, -1, 4, -1 };
  return &_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase;
}

@end

void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *self, id t) {
  NSObject_init(self);
  JreStrongAssign(&self->t_, t);
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(id t) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase, initWithId_, t)
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(id t) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase, initWithId_, t)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase)

@implementation ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub

- (instancetype)initWithId:(id)t
                    withId:(id)s {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(self, t, s);
  return self;
}

- (void)dealloc {
  RELEASE_(s_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "s_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LNSObject;", "(TT;TT;)V", "TT;", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest;", "<T:Ljava/lang/Object;>Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$ParameterizedBase<TT;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub = { "ParameterizedSub", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 3, -1, -1, 4, -1 };
  return &_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub;
}

@end

void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub *self, id t, id s) {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_initWithId_(self, t);
  JreStrongAssign(&self->s_, s);
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(id t, id s) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub, initWithId_withId_, t, s)
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub_initWithId_withId_(id t, id s) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub, initWithId_withId_, t, s)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedSub)

@implementation ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields

- (instancetype)initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase:(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *)b {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_(self, b);
  return self;
}

- (void)dealloc {
  RELEASE_(b_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "b_", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase;", "(Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$ParameterizedBase<Ljava/lang/String;>;)V", "Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$ParameterizedBase<Ljava/lang/String;>;", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields = { "ClassWithParameterizedBaseFields", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 3, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields;
}

@end

void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields *self, ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *b) {
  NSObject_init(self);
  JreStrongAssign(&self->b_, b);
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *b) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields, initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_, b)
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields_initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase *b) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields, initWithComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ParameterizedBase_, b)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithParameterizedBaseFields)

@implementation ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection
                           withJavaUtilMap:(id<JavaUtilMap>)map {
  ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(self, collection, map);
  return self;
}

- (void)dealloc {
  RELEASE_(collection_);
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilCollection:withJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "collection_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x0, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;LJavaUtilMap;", "(Ljava/util/Collection<Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$ParameterizedBase<Ljava/lang/String;>;>;Ljava/util/Map<Ljava/lang/String;Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$ParameterizedBase<Ljava/lang/String;>;>;)V", "Ljava/util/Collection<Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$ParameterizedBase<Ljava/lang/String;>;>;", "Ljava/util/Map<Ljava/lang/String;Lcom/google/gson/functional/MoreSpecificTypeSerializationTest$ParameterizedBase<Ljava/lang/String;>;>;", "LComGoogleGsonFunctionalMoreSpecificTypeSerializationTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields = { "ClassWithContainersOfParameterizedBaseFields", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields;
}

@end

void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields *self, id<JavaUtilCollection> collection, id<JavaUtilMap> map) {
  NSObject_init(self);
  JreStrongAssign(&self->collection_, collection);
  JreStrongAssign(&self->map_, map);
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(id<JavaUtilCollection> collection, id<JavaUtilMap> map) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields, initWithJavaUtilCollection_withJavaUtilMap_, collection, map)
}

ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields_initWithJavaUtilCollection_withJavaUtilMap_(id<JavaUtilCollection> collection, id<JavaUtilMap> map) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields, initWithJavaUtilCollection_withJavaUtilMap_, collection, map)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_ClassWithContainersOfParameterizedBaseFields)
