//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/EnumTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalEnumTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalEnumTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalEnumTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalEnumTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalEnumTest

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonFunctionalEnumTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalEnumTest || defined(INCLUDE_ComGoogleGsonFunctionalEnumTest))
#define ComGoogleGsonFunctionalEnumTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Functional tests for Java 5.0 enums.
 @author Inderjeet Singh
 @author Joel Leitch
 */
@interface ComGoogleGsonFunctionalEnumTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype)init;

- (void)testClassWithEnumFieldDeserialization;

- (void)testClassWithEnumFieldSerialization;

- (void)testCollectionOfEnumsDeserialization;

- (void)testCollectionOfEnumsSerialization;

- (void)testEnumCaseMapping;

- (void)testEnumSet;

/*!
 @brief Test for issue 226.
 */
- (void)testEnumSubclass;

- (void)testEnumSubclassAsParameterizedType;

- (void)testEnumSubclassWithRegisteredTypeAdapter;

- (void)testTopLevelEnumDeserialization;

- (void)testTopLevelEnumSerialization;

#pragma mark Protected

- (void)setUp;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalEnumTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalEnumTest_init(ComGoogleGsonFunctionalEnumTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalEnumTest *new_ComGoogleGsonFunctionalEnumTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalEnumTest *create_ComGoogleGsonFunctionalEnumTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalEnumTest)

#endif

#if !defined (ComGoogleGsonFunctionalEnumTest_Roshambo_) && (INCLUDE_ALL_ComGoogleGsonFunctionalEnumTest || defined(INCLUDE_ComGoogleGsonFunctionalEnumTest_Roshambo))
#define ComGoogleGsonFunctionalEnumTest_Roshambo_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComGoogleGsonFunctionalEnumTest_Roshambo_Enum) {
  ComGoogleGsonFunctionalEnumTest_Roshambo_Enum_ROCK = 0,
  ComGoogleGsonFunctionalEnumTest_Roshambo_Enum_PAPER = 1,
  ComGoogleGsonFunctionalEnumTest_Roshambo_Enum_SCISSORS = 2,
};

@interface ComGoogleGsonFunctionalEnumTest_Roshambo : JavaLangEnum

#pragma mark Public

+ (ComGoogleGsonFunctionalEnumTest_Roshambo *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (ComGoogleGsonFunctionalEnumTest_Roshambo *)defeats;

@end

J2OBJC_STATIC_INIT(ComGoogleGsonFunctionalEnumTest_Roshambo)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleGsonFunctionalEnumTest_Roshambo *ComGoogleGsonFunctionalEnumTest_Roshambo_values_[];

inline ComGoogleGsonFunctionalEnumTest_Roshambo *ComGoogleGsonFunctionalEnumTest_Roshambo_get_ROCK(void);
J2OBJC_ENUM_CONSTANT(ComGoogleGsonFunctionalEnumTest_Roshambo, ROCK)

inline ComGoogleGsonFunctionalEnumTest_Roshambo *ComGoogleGsonFunctionalEnumTest_Roshambo_get_PAPER(void);
J2OBJC_ENUM_CONSTANT(ComGoogleGsonFunctionalEnumTest_Roshambo, PAPER)

inline ComGoogleGsonFunctionalEnumTest_Roshambo *ComGoogleGsonFunctionalEnumTest_Roshambo_get_SCISSORS(void);
J2OBJC_ENUM_CONSTANT(ComGoogleGsonFunctionalEnumTest_Roshambo, SCISSORS)

FOUNDATION_EXPORT IOSObjectArray *ComGoogleGsonFunctionalEnumTest_Roshambo_values(void);

FOUNDATION_EXPORT ComGoogleGsonFunctionalEnumTest_Roshambo *ComGoogleGsonFunctionalEnumTest_Roshambo_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleGsonFunctionalEnumTest_Roshambo *ComGoogleGsonFunctionalEnumTest_Roshambo_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalEnumTest_Roshambo)

#endif

#if !defined (ComGoogleGsonFunctionalEnumTest_Gender_) && (INCLUDE_ALL_ComGoogleGsonFunctionalEnumTest || defined(INCLUDE_ComGoogleGsonFunctionalEnumTest_Gender))
#define ComGoogleGsonFunctionalEnumTest_Gender_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComGoogleGsonFunctionalEnumTest_Gender_Enum) {
  ComGoogleGsonFunctionalEnumTest_Gender_Enum_MALE = 0,
  ComGoogleGsonFunctionalEnumTest_Gender_Enum_FEMALE = 1,
};

@interface ComGoogleGsonFunctionalEnumTest_Gender : JavaLangEnum

#pragma mark Public

+ (ComGoogleGsonFunctionalEnumTest_Gender *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(ComGoogleGsonFunctionalEnumTest_Gender)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleGsonFunctionalEnumTest_Gender *ComGoogleGsonFunctionalEnumTest_Gender_values_[];

inline ComGoogleGsonFunctionalEnumTest_Gender *ComGoogleGsonFunctionalEnumTest_Gender_get_MALE(void);
J2OBJC_ENUM_CONSTANT(ComGoogleGsonFunctionalEnumTest_Gender, MALE)

inline ComGoogleGsonFunctionalEnumTest_Gender *ComGoogleGsonFunctionalEnumTest_Gender_get_FEMALE(void);
J2OBJC_ENUM_CONSTANT(ComGoogleGsonFunctionalEnumTest_Gender, FEMALE)

FOUNDATION_EXPORT IOSObjectArray *ComGoogleGsonFunctionalEnumTest_Gender_values(void);

FOUNDATION_EXPORT ComGoogleGsonFunctionalEnumTest_Gender *ComGoogleGsonFunctionalEnumTest_Gender_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleGsonFunctionalEnumTest_Gender *ComGoogleGsonFunctionalEnumTest_Gender_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalEnumTest_Gender)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalEnumTest")
