//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/ThrowableFunctionalTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalThrowableFunctionalTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalThrowableFunctionalTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalThrowableFunctionalTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalThrowableFunctionalTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalThrowableFunctionalTest

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonFunctionalThrowableFunctionalTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalThrowableFunctionalTest || defined(INCLUDE_ComGoogleGsonFunctionalThrowableFunctionalTest))
#define ComGoogleGsonFunctionalThrowableFunctionalTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonFunctionalThrowableFunctionalTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype __nonnull)init;

- (void)testErrornWithCause;

- (void)testErrorWithoutCause;

- (void)testExceptionWithCause;

- (void)testExceptionWithoutCause;

- (void)testSerializedNameOnExceptionFields;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalThrowableFunctionalTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalThrowableFunctionalTest_init(ComGoogleGsonFunctionalThrowableFunctionalTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalThrowableFunctionalTest *new_ComGoogleGsonFunctionalThrowableFunctionalTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalThrowableFunctionalTest *create_ComGoogleGsonFunctionalThrowableFunctionalTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalThrowableFunctionalTest)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalThrowableFunctionalTest")
