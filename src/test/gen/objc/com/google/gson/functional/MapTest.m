//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/MapTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/GsonBuilder.h"
#include "com/google/gson/InstanceCreator.h"
#include "com/google/gson/JsonArray.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonParseException.h"
#include "com/google/gson/JsonParser.h"
#include "com/google/gson/JsonPrimitive.h"
#include "com/google/gson/JsonSerializationContext.h"
#include "com/google/gson/JsonSerializer.h"
#include "com/google/gson/JsonSyntaxException.h"
#include "com/google/gson/common/TestTypes.h"
#include "com/google/gson/functional/MapTest.h"
#include "com/google/gson/internal/$Gson$Types.h"
#include "com/google/gson/reflect/TypeToken.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"
#include "junit/framework/TestCase.h"

@class ComGoogleGsonFunctionalMapTest_MyMap;
@protocol JavaUtilFunctionBiFunction;
@protocol JavaUtilFunctionFunction;

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComGoogleGsonFunctionalMapTest () {
 @public
  ComGoogleGsonGson *gson_;
}

- (id<JavaUtilMap>)newMapWithId:(id)key1
                         withId:(id)value1
                         withId:(id)key2
                         withId:(id)value2 OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMapTest, gson_, ComGoogleGsonGson *)

__attribute__((unused)) static id<JavaUtilMap> ComGoogleGsonFunctionalMapTest_newMapWithId_withId_withId_withId_(ComGoogleGsonFunctionalMapTest *self, id key1, id value1, id key2, id value2);

@interface ComGoogleGsonFunctionalMapTest_1 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_1)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_1_init(ComGoogleGsonFunctionalMapTest_1 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_1 *new_ComGoogleGsonFunctionalMapTest_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_1 *create_ComGoogleGsonFunctionalMapTest_1_init(void);

@interface ComGoogleGsonFunctionalMapTest_2 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_2)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_2_init(ComGoogleGsonFunctionalMapTest_2 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_2 *new_ComGoogleGsonFunctionalMapTest_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_2 *create_ComGoogleGsonFunctionalMapTest_2_init(void);

@interface ComGoogleGsonFunctionalMapTest_3 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_3)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_3_init(ComGoogleGsonFunctionalMapTest_3 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_3 *new_ComGoogleGsonFunctionalMapTest_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_3 *create_ComGoogleGsonFunctionalMapTest_3_init(void);

@interface ComGoogleGsonFunctionalMapTest_4 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_4)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_4_init(ComGoogleGsonFunctionalMapTest_4 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_4 *new_ComGoogleGsonFunctionalMapTest_4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_4 *create_ComGoogleGsonFunctionalMapTest_4_init(void);

@interface ComGoogleGsonFunctionalMapTest_5 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_5)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_5_init(ComGoogleGsonFunctionalMapTest_5 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_5 *new_ComGoogleGsonFunctionalMapTest_5_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_5 *create_ComGoogleGsonFunctionalMapTest_5_init(void);

@interface ComGoogleGsonFunctionalMapTest_6 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_6)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_6_init(ComGoogleGsonFunctionalMapTest_6 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_6 *new_ComGoogleGsonFunctionalMapTest_6_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_6 *create_ComGoogleGsonFunctionalMapTest_6_init(void);

@interface ComGoogleGsonFunctionalMapTest_7 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_7)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_7_init(ComGoogleGsonFunctionalMapTest_7 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_7 *new_ComGoogleGsonFunctionalMapTest_7_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_7 *create_ComGoogleGsonFunctionalMapTest_7_init(void);

@interface ComGoogleGsonFunctionalMapTest_8 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_8)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_8_init(ComGoogleGsonFunctionalMapTest_8 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_8 *new_ComGoogleGsonFunctionalMapTest_8_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_8 *create_ComGoogleGsonFunctionalMapTest_8_init(void);

@interface ComGoogleGsonFunctionalMapTest_9 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_9)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_9_init(ComGoogleGsonFunctionalMapTest_9 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_9 *new_ComGoogleGsonFunctionalMapTest_9_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_9 *create_ComGoogleGsonFunctionalMapTest_9_init(void);

@interface ComGoogleGsonFunctionalMapTest_10 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_10)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_10_init(ComGoogleGsonFunctionalMapTest_10 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_10 *new_ComGoogleGsonFunctionalMapTest_10_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_10 *create_ComGoogleGsonFunctionalMapTest_10_init(void);

@interface ComGoogleGsonFunctionalMapTest_11 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_11)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_11_init(ComGoogleGsonFunctionalMapTest_11 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_11 *new_ComGoogleGsonFunctionalMapTest_11_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_11 *create_ComGoogleGsonFunctionalMapTest_11_init(void);

@interface ComGoogleGsonFunctionalMapTest_12 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_12)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_12_init(ComGoogleGsonFunctionalMapTest_12 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_12 *new_ComGoogleGsonFunctionalMapTest_12_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_12 *create_ComGoogleGsonFunctionalMapTest_12_init(void);

@interface ComGoogleGsonFunctionalMapTest_13 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_13)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_13_init(ComGoogleGsonFunctionalMapTest_13 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_13 *new_ComGoogleGsonFunctionalMapTest_13_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_13 *create_ComGoogleGsonFunctionalMapTest_13_init(void);

@interface ComGoogleGsonFunctionalMapTest_14 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_14)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_14_init(ComGoogleGsonFunctionalMapTest_14 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_14 *new_ComGoogleGsonFunctionalMapTest_14_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_14 *create_ComGoogleGsonFunctionalMapTest_14_init(void);

@interface ComGoogleGsonFunctionalMapTest_MyParameterizedMap : JavaUtilLinkedHashMap {
 @public
  jint foo_;
}

- (instancetype __nonnull)initWithInt:(jint)foo;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_MyParameterizedMap)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_MyParameterizedMap_initWithInt_(ComGoogleGsonFunctionalMapTest_MyParameterizedMap *self, jint foo);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_MyParameterizedMap *new_ComGoogleGsonFunctionalMapTest_MyParameterizedMap_initWithInt_(jint foo) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_MyParameterizedMap *create_ComGoogleGsonFunctionalMapTest_MyParameterizedMap_initWithInt_(jint foo);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMapTest_MyParameterizedMap)

@interface ComGoogleGsonFunctionalMapTest_15 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_15)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_15_init(ComGoogleGsonFunctionalMapTest_15 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_15 *new_ComGoogleGsonFunctionalMapTest_15_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_15 *create_ComGoogleGsonFunctionalMapTest_15_init(void);

@interface ComGoogleGsonFunctionalMapTest_16 : NSObject < ComGoogleGsonInstanceCreator >

- (instancetype __nonnull)init;

- (ComGoogleGsonFunctionalMapTest_MyMap *)createInstanceWithJavaLangReflectType:(id<JavaLangReflectType>)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_16)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_16_init(ComGoogleGsonFunctionalMapTest_16 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_16 *new_ComGoogleGsonFunctionalMapTest_16_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_16 *create_ComGoogleGsonFunctionalMapTest_16_init(void);

@interface ComGoogleGsonFunctionalMapTest_17 : NSObject < ComGoogleGsonJsonSerializer >

- (instancetype __nonnull)init;

- (ComGoogleGsonJsonElement *)serializeWithId:(id<JavaUtilMap>)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_17)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_17_init(ComGoogleGsonFunctionalMapTest_17 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_17 *new_ComGoogleGsonFunctionalMapTest_17_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_17 *create_ComGoogleGsonFunctionalMapTest_17_init(void);

/*!
 @brief Created in response to http://code.google.com/p/google-gson/issues/detail?
 id=99
 */
@interface ComGoogleGsonFunctionalMapTest_ClassWithAMap : NSObject {
 @public
  id<JavaUtilMap> map_;
}

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_ClassWithAMap)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMapTest_ClassWithAMap, map_, id<JavaUtilMap>)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_ClassWithAMap_init(ComGoogleGsonFunctionalMapTest_ClassWithAMap *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_ClassWithAMap *new_ComGoogleGsonFunctionalMapTest_ClassWithAMap_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_ClassWithAMap *create_ComGoogleGsonFunctionalMapTest_ClassWithAMap_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMapTest_ClassWithAMap)

@interface ComGoogleGsonFunctionalMapTest_18 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_18)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_18_init(ComGoogleGsonFunctionalMapTest_18 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_18 *new_ComGoogleGsonFunctionalMapTest_18_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_18 *create_ComGoogleGsonFunctionalMapTest_18_init(void);

@interface ComGoogleGsonFunctionalMapTest_19 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_19)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_19_init(ComGoogleGsonFunctionalMapTest_19 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_19 *new_ComGoogleGsonFunctionalMapTest_19_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_19 *create_ComGoogleGsonFunctionalMapTest_19_init(void);

@interface ComGoogleGsonFunctionalMapTest_MyMap : JavaUtilLinkedHashMap {
 @public
  jint foo_;
}

- (instancetype __nonnull)init;

- (NSString *)computeIfAbsentWithId:(NSString *)arg0
       withJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg1;

- (NSString *)getWithId:(id)arg0;

- (NSString *)removeWithId:(id)arg0;

- (NSString *)putIfAbsentWithId:(NSString *)arg0
                         withId:(NSString *)arg1;

- (NSString *)computeIfPresentWithId:(NSString *)arg0
      withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (NSString *)replaceWithId:(NSString *)arg0
                     withId:(NSString *)arg1;

- (NSString *)putWithId:(NSString *)arg0
                 withId:(NSString *)arg1;

- (NSString *)computeWithId:(NSString *)arg0
withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg1;

- (NSString *)mergeWithId:(NSString *)arg0
                   withId:(NSString *)arg1
withJavaUtilFunctionBiFunction:(id<JavaUtilFunctionBiFunction>)arg2;

- (NSString *)getOrDefaultWithId:(id)arg0
                          withId:(NSString *)arg1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_MyMap)

inline jlong ComGoogleGsonFunctionalMapTest_MyMap_get_serialVersionUID(void);
#define ComGoogleGsonFunctionalMapTest_MyMap_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComGoogleGsonFunctionalMapTest_MyMap, serialVersionUID, jlong)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_MyMap_init(ComGoogleGsonFunctionalMapTest_MyMap *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_MyMap *new_ComGoogleGsonFunctionalMapTest_MyMap_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_MyMap *create_ComGoogleGsonFunctionalMapTest_MyMap_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMapTest_MyMap)

@interface ComGoogleGsonFunctionalMapTest_20 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_20)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_20_init(ComGoogleGsonFunctionalMapTest_20 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_20 *new_ComGoogleGsonFunctionalMapTest_20_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_20 *create_ComGoogleGsonFunctionalMapTest_20_init(void);

@interface ComGoogleGsonFunctionalMapTest_21 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_21)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_21_init(ComGoogleGsonFunctionalMapTest_21 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_21 *new_ComGoogleGsonFunctionalMapTest_21_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_21 *create_ComGoogleGsonFunctionalMapTest_21_init(void);

@interface ComGoogleGsonFunctionalMapTest_22 : NSObject < ComGoogleGsonJsonSerializer > {
 @public
  ComGoogleGsonJsonElement *val$baseTypeJsonElement_;
}

- (instancetype __nonnull)initWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)capture$0;

- (ComGoogleGsonJsonElement *)serializeWithId:(ComGoogleGsonCommonTestTypes_Base *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_22)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_22_initWithComGoogleGsonJsonElement_(ComGoogleGsonFunctionalMapTest_22 *self, ComGoogleGsonJsonElement *capture$0);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_22 *new_ComGoogleGsonFunctionalMapTest_22_initWithComGoogleGsonJsonElement_(ComGoogleGsonJsonElement *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_22 *create_ComGoogleGsonFunctionalMapTest_22_initWithComGoogleGsonJsonElement_(ComGoogleGsonJsonElement *capture$0);

@interface ComGoogleGsonFunctionalMapTest_23 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_23)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_23_init(ComGoogleGsonFunctionalMapTest_23 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_23 *new_ComGoogleGsonFunctionalMapTest_23_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_23 *create_ComGoogleGsonFunctionalMapTest_23_init(void);

@interface ComGoogleGsonFunctionalMapTest_24 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_24)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_24_init(ComGoogleGsonFunctionalMapTest_24 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_24 *new_ComGoogleGsonFunctionalMapTest_24_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_24 *create_ComGoogleGsonFunctionalMapTest_24_init(void);

@interface ComGoogleGsonFunctionalMapTest_25 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_25)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_25_init(ComGoogleGsonFunctionalMapTest_25 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_25 *new_ComGoogleGsonFunctionalMapTest_25_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_25 *create_ComGoogleGsonFunctionalMapTest_25_init(void);

@interface ComGoogleGsonFunctionalMapTest_26 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_26)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_26_init(ComGoogleGsonFunctionalMapTest_26 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_26 *new_ComGoogleGsonFunctionalMapTest_26_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_26 *create_ComGoogleGsonFunctionalMapTest_26_init(void);

@interface ComGoogleGsonFunctionalMapTest_27 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_27)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_27_init(ComGoogleGsonFunctionalMapTest_27 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_27 *new_ComGoogleGsonFunctionalMapTest_27_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_27 *create_ComGoogleGsonFunctionalMapTest_27_init(void);

@interface ComGoogleGsonFunctionalMapTest_28 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_28)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_28_init(ComGoogleGsonFunctionalMapTest_28 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_28 *new_ComGoogleGsonFunctionalMapTest_28_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_28 *create_ComGoogleGsonFunctionalMapTest_28_init(void);

@interface ComGoogleGsonFunctionalMapTest_29 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_29)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_29_init(ComGoogleGsonFunctionalMapTest_29 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_29 *new_ComGoogleGsonFunctionalMapTest_29_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_29 *create_ComGoogleGsonFunctionalMapTest_29_init(void);

@interface ComGoogleGsonFunctionalMapTest_30 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_30)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_30_init(ComGoogleGsonFunctionalMapTest_30 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_30 *new_ComGoogleGsonFunctionalMapTest_30_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_30 *create_ComGoogleGsonFunctionalMapTest_30_init(void);

@interface ComGoogleGsonFunctionalMapTest_31 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMapTest_31)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_31_init(ComGoogleGsonFunctionalMapTest_31 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_31 *new_ComGoogleGsonFunctionalMapTest_31_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalMapTest_31 *create_ComGoogleGsonFunctionalMapTest_31_init(void);

@interface ComGoogleGsonFunctionalMapTest_Point () {
 @public
  jint x_;
  jint y_;
}

@end

@interface ComGoogleGsonFunctionalMapTest_MapClass () {
 @public
  id<JavaUtilMap> bases_;
  id<JavaUtilMap> subs_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMapTest_MapClass, bases_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalMapTest_MapClass, subs_, id<JavaUtilMap>)

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_MapClass_addBaseWithNSString_withComGoogleGsonCommonTestTypes_Base_(ComGoogleGsonFunctionalMapTest_MapClass *self, NSString *name, ComGoogleGsonCommonTestTypes_Base *value);

__attribute__((unused)) static void ComGoogleGsonFunctionalMapTest_MapClass_addSubWithNSString_withComGoogleGsonCommonTestTypes_Sub_(ComGoogleGsonFunctionalMapTest_MapClass *self, NSString *name, ComGoogleGsonCommonTestTypes_Sub *value);

@implementation ComGoogleGsonFunctionalMapTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssignAndConsume(&gson_, new_ComGoogleGsonGson_init());
}

- (void)testMapSerialization {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:@"a" withId:JavaLangInteger_valueOfWithInt_(1)];
  [map putWithId:@"b" withId:JavaLangInteger_valueOfWithInt_(2)];
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_1_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"\"a\":1"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"\"b\":2"]);
}

- (void)testMapDeserialization {
  NSString *json = @"{\"a\":1,\"b\":2}";
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_2_init() getType];
  id<JavaUtilMap> target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((JavaLangInteger *) nil_chk([((id<JavaUtilMap>) nil_chk(target)) getWithId:@"a"])) intValue]);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(2, [((JavaLangInteger *) nil_chk([target getWithId:@"b"])) intValue]);
}

- (void)testRawMapSerialization {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:@"a" withId:JavaLangInteger_valueOfWithInt_(1)];
  [map putWithId:@"b" withId:@"string"];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"\"a\":1"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"\"b\":\"string\""]);
}

- (void)testMapSerializationEmpty {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_3_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{}", json);
}

- (void)testMapDeserializationEmpty {
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_4_init() getType];
  id<JavaUtilMap> map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{}" withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((id<JavaUtilMap>) nil_chk(map)) isEmpty]);
}

- (void)testMapSerializationWithNullValue {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:@"abc" withId:nil];
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_5_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{}", json);
}

- (void)testMapDeserializationWithNullValue {
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_6_init() getType];
  id<JavaUtilMap> map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"abc\":null}" withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((id<JavaUtilMap>) nil_chk(map)) size]);
  JunitFrameworkTestCase_assertNullWithId_([map getWithId:@"abc"]);
}

- (void)testMapSerializationWithNullValueButSerializeNulls {
  JreStrongAssign(&gson_, [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() serializeNulls])) create]);
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:@"abc" withId:nil];
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_7_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"abc\":null}", json);
}

- (void)testMapSerializationWithNullKey {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:nil withId:JavaLangInteger_valueOfWithInt_(123)];
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_8_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"null\":123}", json);
}

- (void)testMapDeserializationWithNullKey {
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_9_init() getType];
  id<JavaUtilMap> map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"null\":123}" withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((id<JavaUtilMap>) nil_chk(map)) size]);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(123, [((JavaLangInteger *) nil_chk([map getWithId:@"null"])) intValue]);
  JunitFrameworkTestCase_assertNullWithId_([map getWithId:nil]);
  map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{null:123}" withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((id<JavaUtilMap>) nil_chk(map)) size]);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(123, [((JavaLangInteger *) nil_chk([map getWithId:@"null"])) intValue]);
  JunitFrameworkTestCase_assertNullWithId_([map getWithId:nil]);
}

- (void)testMapSerializationWithIntegerKeys {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:JavaLangInteger_valueOfWithInt_(123) withId:@"456"];
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_10_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"123\":\"456\"}", json);
}

- (void)testMapDeserializationWithIntegerKeys {
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_11_init() getType];
  id<JavaUtilMap> map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"123\":\"456\"}" withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((id<JavaUtilMap>) nil_chk(map)) size]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([map containsKeyWithId:JavaLangInteger_valueOfWithInt_(123)]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"456", [map getWithId:JavaLangInteger_valueOfWithInt_(123)]);
}

- (void)testHashMapDeserialization {
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_12_init() getType];
  JavaUtilHashMap *map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"123\":\"456\"}" withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((JavaUtilHashMap *) nil_chk(map)) size]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([map containsKeyWithId:JavaLangInteger_valueOfWithInt_(123)]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"456", [map getWithId:JavaLangInteger_valueOfWithInt_(123)]);
}

- (void)testSortedMap {
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_13_init() getType];
  id<JavaUtilSortedMap> map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"123\":\"456\"}" withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((id<JavaUtilSortedMap>) nil_chk(map)) size]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([map containsKeyWithId:JavaLangInteger_valueOfWithInt_(123)]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"456", [map getWithId:JavaLangInteger_valueOfWithInt_(123)]);
}

- (void)testParameterizedMapSubclassSerialization {
  ComGoogleGsonFunctionalMapTest_MyParameterizedMap *map = create_ComGoogleGsonFunctionalMapTest_MyParameterizedMap_initWithInt_(10);
  [map putWithId:@"a" withId:@"b"];
  id<JavaLangReflectType> type = [create_ComGoogleGsonFunctionalMapTest_14_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:type];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"\"a\":\"b\""]);
}

- (void)testMapSubclassSerialization {
  ComGoogleGsonFunctionalMapTest_MyMap *map = create_ComGoogleGsonFunctionalMapTest_MyMap_init();
  [map putWithId:@"a" withId:@"b"];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:ComGoogleGsonFunctionalMapTest_MyMap_class_()];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"\"a\":\"b\""]);
}

- (void)testMapStandardSubclassDeserialization {
  NSString *json = @"{a:'1',b:'2'}";
  id<JavaLangReflectType> type = [create_ComGoogleGsonFunctionalMapTest_15_init() getType];
  JavaUtilLinkedHashMap *map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:type];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(@"1", [((JavaUtilLinkedHashMap *) nil_chk(map)) getWithId:@"a"]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(@"2", [map getWithId:@"b"]);
}

- (void)testMapSubclassDeserialization {
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:ComGoogleGsonFunctionalMapTest_MyMap_class_() withId:create_ComGoogleGsonFunctionalMapTest_16_init()])) create];
  NSString *json = @"{\"a\":1,\"b\":2}";
  ComGoogleGsonFunctionalMapTest_MyMap *map = [((ComGoogleGsonGson *) nil_chk(gson)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalMapTest_MyMap_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"1", [((ComGoogleGsonFunctionalMapTest_MyMap *) nil_chk(map)) getWithId:@"a"]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"2", [map getWithId:@"b"]);
}

- (void)testCustomSerializerForSpecificMapType {
  id<JavaLangReflectType> type = ComGoogleGsonInternal_Gson_Types_newParameterizedTypeWithOwnerWithJavaLangReflectType_withJavaLangReflectType_withJavaLangReflectTypeArray_(nil, JavaUtilMap_class_(), [IOSObjectArray arrayWithObjects:(id[]){ NSString_class_(), JavaLangLong_class_() } count:2 type:JavaLangReflectType_class_()]);
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:type withId:create_ComGoogleGsonFunctionalMapTest_17_init()])) create];
  id<JavaUtilMap> src = create_JavaUtilLinkedHashMap_init();
  [src putWithId:@"one" withId:JavaLangLong_valueOfWithLong_(1LL)];
  [src putWithId:@"two" withId:JavaLangLong_valueOfWithLong_(2LL)];
  [src putWithId:@"three" withId:JavaLangLong_valueOfWithLong_(3LL)];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[1,2,3]", [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:src withJavaLangReflectType:type]);
}

- (void)testMapSerializationWithNullValues {
  ComGoogleGsonFunctionalMapTest_ClassWithAMap *target = create_ComGoogleGsonFunctionalMapTest_ClassWithAMap_init();
  [((id<JavaUtilMap>) nil_chk(target->map_)) putWithId:@"name1" withId:nil];
  [((id<JavaUtilMap>) nil_chk(target->map_)) putWithId:@"name2" withId:@"value2"];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertFalseWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"name1"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"name2"]);
}

- (void)testMapSerializationWithNullValuesSerialized {
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() serializeNulls])) create];
  ComGoogleGsonFunctionalMapTest_ClassWithAMap *target = create_ComGoogleGsonFunctionalMapTest_ClassWithAMap_init();
  [((id<JavaUtilMap>) nil_chk(target->map_)) putWithId:@"name1" withId:nil];
  [((id<JavaUtilMap>) nil_chk(target->map_)) putWithId:@"name2" withId:@"value2"];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:target];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"name1"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"name2"]);
}

- (void)testMapSerializationWithWildcardValues {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:@"test" withId:nil];
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_18_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{}", json);
}

- (void)testMapDeserializationWithWildcardValues {
  id<JavaLangReflectType> typeOfMap = [create_ComGoogleGsonFunctionalMapTest_19_init() getType];
  id<JavaUtilMap> map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"test\":123}" withJavaLangReflectType:typeOfMap];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(1, [((id<JavaUtilMap>) nil_chk(map)) size]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(create_JavaLangLong_initWithLong_(123LL), [map getWithId:@"test"]);
}

- (void)testMapOfMapSerialization {
  id<JavaUtilMap> map = create_JavaUtilHashMap_init();
  id<JavaUtilMap> nestedMap = create_JavaUtilHashMap_init();
  [nestedMap putWithId:@"1" withId:@"1"];
  [nestedMap putWithId:@"2" withId:@"2"];
  [map putWithId:@"nestedMap" withId:nestedMap];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"nestedMap"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"\"1\":\"1\""]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"\"2\":\"2\""]);
}

- (void)testMapOfMapDeserialization {
  NSString *json = @"{nestedMap:{'2':'2','1':'1'}}";
  id<JavaLangReflectType> type = [create_ComGoogleGsonFunctionalMapTest_20_init() getType];
  id<JavaUtilMap> map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:type];
  id<JavaUtilMap> nested = [((id<JavaUtilMap>) nil_chk(map)) getWithId:@"nestedMap"];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"1", [((id<JavaUtilMap>) nil_chk(nested)) getWithId:@"1"]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"2", [nested getWithId:@"2"]);
}

- (void)testMapWithQuotes {
  id<JavaUtilMap> map = create_JavaUtilHashMap_init();
  [map putWithId:@"a\"b" withId:@"c\"d"];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"a\\\"b\":\"c\\\"d\"}", json);
}

- (void)testWriteMapsWithEmptyStringKey {
  id<JavaUtilMap> map = create_JavaUtilHashMap_init();
  [map putWithId:@"" withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"\":true}", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map]);
}

- (void)testReadMapsWithEmptyStringKey {
  id<JavaUtilMap> map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"\":true}" withJavaLangReflectType:[create_ComGoogleGsonFunctionalMapTest_21_init() getType]];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JreLoadStatic(JavaLangBoolean, TRUE), [((id<JavaUtilMap>) nil_chk(map)) getWithId:@""]);
}

- (void)testSerializeMaps {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:@"a" withId:JavaLangInteger_valueOfWithInt_(12)];
  [map putWithId:@"b" withId:nil];
  JavaUtilLinkedHashMap *innerMap = create_JavaUtilLinkedHashMap_init();
  [innerMap putWithId:@"test" withId:JavaLangInteger_valueOfWithInt_(1)];
  [innerMap putWithId:@"TestStringArray" withId:[IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two" } count:2 type:NSString_class_()]];
  [map putWithId:@"c" withId:innerMap];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"a\":12,\"b\":null,\"c\":{\"test\":1,\"TestStringArray\":[\"one\",\"two\"]}}", [((ComGoogleGsonGson *) nil_chk([((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() serializeNulls])) create])) toJsonWithId:map]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\n  \"a\": 12,\n  \"b\": null,\n  \"c\": {\n    \"test\": 1,\n    \"TestStringArray\": [\n      \"one\",\n      \"two\"\n    ]\n  }\n}", [((ComGoogleGsonGson *) nil_chk([((ComGoogleGsonGsonBuilder *) nil_chk([((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() setPrettyPrinting])) serializeNulls])) create])) toJsonWithId:map]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"a\":12,\"c\":{\"test\":1,\"TestStringArray\":[\"one\",\"two\"]}}", [((ComGoogleGsonGson *) nil_chk([create_ComGoogleGsonGsonBuilder_init() create])) toJsonWithId:map]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\n  \"a\": 12,\n  \"c\": {\n    \"test\": 1,\n    \"TestStringArray\": [\n      \"one\",\n      \"two\"\n    ]\n  }\n}", [((ComGoogleGsonGson *) nil_chk([((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() setPrettyPrinting])) create])) toJsonWithId:map]);
  [innerMap putWithId:@"d" withId:@"e"];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"a\":12,\"c\":{\"test\":1,\"TestStringArray\":[\"one\",\"two\"],\"d\":\"e\"}}", [create_ComGoogleGsonGson_init() toJsonWithId:map]);
}

- (void)testInterfaceTypeMap {
  ComGoogleGsonFunctionalMapTest_MapClass *element = create_ComGoogleGsonFunctionalMapTest_MapClass_init();
  ComGoogleGsonCommonTestTypes_Sub *subType = create_ComGoogleGsonCommonTestTypes_Sub_init();
  ComGoogleGsonFunctionalMapTest_MapClass_addBaseWithNSString_withComGoogleGsonCommonTestTypes_Base_(element, @"Test", subType);
  ComGoogleGsonFunctionalMapTest_MapClass_addSubWithNSString_withComGoogleGsonCommonTestTypes_Sub_(element, @"Test", subType);
  NSString *subTypeJson = [create_ComGoogleGsonGson_init() toJsonWithId:subType];
  NSString *expected = JreStrcat("$$$$$", @"{\"bases\":{\"Test\":", subTypeJson, @"},\"subs\":{\"Test\":", subTypeJson, @"}}");
  ComGoogleGsonGson *gsonWithComplexKeys = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() enableComplexMapKeySerialization])) create];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gsonWithComplexKeys)) toJsonWithId:element];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expected, json);
  ComGoogleGsonGson *gson = create_ComGoogleGsonGson_init();
  json = [gson toJsonWithId:element];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expected, json);
}

- (void)testInterfaceTypeMapWithSerializer {
  ComGoogleGsonFunctionalMapTest_MapClass *element = create_ComGoogleGsonFunctionalMapTest_MapClass_init();
  ComGoogleGsonCommonTestTypes_Sub *subType = create_ComGoogleGsonCommonTestTypes_Sub_init();
  ComGoogleGsonFunctionalMapTest_MapClass_addBaseWithNSString_withComGoogleGsonCommonTestTypes_Base_(element, @"Test", subType);
  ComGoogleGsonFunctionalMapTest_MapClass_addSubWithNSString_withComGoogleGsonCommonTestTypes_Sub_(element, @"Test", subType);
  ComGoogleGsonGson *tempGson = create_ComGoogleGsonGson_init();
  NSString *subTypeJson = [tempGson toJsonWithId:subType];
  ComGoogleGsonJsonElement *baseTypeJsonElement = [tempGson toJsonTreeWithId:subType withJavaLangReflectType:ComGoogleGsonCommonTestTypes_Base_class_()];
  NSString *baseTypeJson = [tempGson toJsonWithComGoogleGsonJsonElement:baseTypeJsonElement];
  NSString *expected = JreStrcat("$$$$$", @"{\"bases\":{\"Test\":", baseTypeJson, @"},\"subs\":{\"Test\":", subTypeJson, @"}}");
  id<ComGoogleGsonJsonSerializer> baseTypeAdapter = create_ComGoogleGsonFunctionalMapTest_22_initWithComGoogleGsonJsonElement_(baseTypeJsonElement);
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() enableComplexMapKeySerialization])) registerTypeAdapterWithJavaLangReflectType:ComGoogleGsonCommonTestTypes_Base_class_() withId:baseTypeAdapter])) create];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:element];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expected, json);
  gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:ComGoogleGsonCommonTestTypes_Base_class_() withId:baseTypeAdapter])) create];
  json = [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:element];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expected, json);
}

- (void)testGeneralMapField {
  ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters *map = create_ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_init();
  [((id<JavaUtilMap>) nil_chk(map->map_)) putWithId:@"string" withId:@"testString"];
  [map->map_ putWithId:@"stringArray" withId:[IOSObjectArray arrayWithObjects:(id[]){ @"one", @"two" } count:2 type:NSString_class_()]];
  [map->map_ putWithId:@"objectArray" withId:[IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangLong_valueOfWithLong_(2LL), @"three" } count:3 type:NSObject_class_()]];
  NSString *expected = @"{\"map\":{\"string\":\"testString\",\"stringArray\":[\"one\",\"two\"],\"objectArray\":[1,2,\"three\"]}}";
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expected, [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map]);
  JreStrongAssign(&gson_, [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() enableComplexMapKeySerialization])) create]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expected, [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map]);
}

- (void)testComplexKeysSerialization {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:create_ComGoogleGsonFunctionalMapTest_Point_initWithInt_withInt_(2, 3) withId:@"a"];
  [map putWithId:create_ComGoogleGsonFunctionalMapTest_Point_initWithInt_withInt_(5, 7) withId:@"b"];
  NSString *json = @"{\"2,3\":\"a\",\"5,7\":\"b\"}";
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:[create_ComGoogleGsonFunctionalMapTest_23_init() getType]]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:JavaUtilMap_class_()]);
}

- (void)testComplexKeysDeserialization {
  NSString *json = @"{'2,3':'a','5,7':'b'}";
  @try {
    [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:[create_ComGoogleGsonFunctionalMapTest_24_init() getType]];
    JunitFrameworkTestCase_fail();
  }
  @catch (ComGoogleGsonJsonParseException *expected) {
  }
}

- (void)testStringKeyDeserialization {
  NSString *json = @"{'2,3':'a','5,7':'b'}";
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:@"2,3" withId:@"a"];
  [map putWithId:@"5,7" withId:@"b"];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(map, [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:[create_ComGoogleGsonFunctionalMapTest_25_init() getType]]);
}

- (void)testNumberKeyDeserialization {
  NSString *json = @"{'2.3':'a','5.7':'b'}";
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:JavaLangDouble_valueOfWithDouble_(2.3) withId:@"a"];
  [map putWithId:JavaLangDouble_valueOfWithDouble_(5.7) withId:@"b"];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(map, [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:[create_ComGoogleGsonFunctionalMapTest_26_init() getType]]);
}

- (void)testBooleanKeyDeserialization {
  NSString *json = @"{'true':'a','false':'b'}";
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:JavaLangBoolean_valueOfWithBoolean_(true) withId:@"a"];
  [map putWithId:JavaLangBoolean_valueOfWithBoolean_(false) withId:@"b"];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(map, [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:[create_ComGoogleGsonFunctionalMapTest_27_init() getType]]);
}

- (void)testMapDeserializationWithDuplicateKeys {
  @try {
    [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{'a':1,'a':2}" withJavaLangReflectType:[create_ComGoogleGsonFunctionalMapTest_28_init() getType]];
    JunitFrameworkTestCase_fail();
  }
  @catch (ComGoogleGsonJsonSyntaxException *expected) {
  }
}

- (void)testSerializeMapOfMaps {
  id<JavaLangReflectType> type = [create_ComGoogleGsonFunctionalMapTest_29_init() getType];
  id<JavaUtilMap> map = ComGoogleGsonFunctionalMapTest_newMapWithId_withId_withId_withId_(self, @"a", ComGoogleGsonFunctionalMapTest_newMapWithId_withId_withId_withId_(self, @"ka1", @"va1", @"ka2", @"va2"), @"b", ComGoogleGsonFunctionalMapTest_newMapWithId_withId_withId_withId_(self, @"kb1", @"vb1", @"kb2", @"vb2"));
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{'a':{'ka1':'va1','ka2':'va2'},'b':{'kb1':'vb1','kb2':'vb2'}}", [((NSString *) nil_chk([((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:map withJavaLangReflectType:type])) java_replace:'"' withChar:'\'']);
}

- (void)testDeerializeMapOfMaps {
  id<JavaLangReflectType> type = [create_ComGoogleGsonFunctionalMapTest_30_init() getType];
  id<JavaUtilMap> map = ComGoogleGsonFunctionalMapTest_newMapWithId_withId_withId_withId_(self, @"a", ComGoogleGsonFunctionalMapTest_newMapWithId_withId_withId_withId_(self, @"ka1", @"va1", @"ka2", @"va2"), @"b", ComGoogleGsonFunctionalMapTest_newMapWithId_withId_withId_withId_(self, @"kb1", @"vb1", @"kb2", @"vb2"));
  NSString *json = @"{'a':{'ka1':'va1','ka2':'va2'},'b':{'kb1':'vb1','kb2':'vb2'}}";
  JunitFrameworkTestCase_assertEqualsWithId_withId_(map, [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:type]);
}

- (id<JavaUtilMap>)newMapWithId:(id)key1
                         withId:(id)value1
                         withId:(id)key2
                         withId:(id)value2 {
  return ComGoogleGsonFunctionalMapTest_newMapWithId_withId_withId_withId_(self, key1, value1, key2, value2);
}

- (void)testMapNamePromotionWithJsonElementReader {
  NSString *json = @"{'2.3':'a'}";
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:JavaLangDouble_valueOfWithDouble_(2.3) withId:@"a"];
  ComGoogleGsonJsonElement *tree = [create_ComGoogleGsonJsonParser_init() parseWithNSString:json];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(map, [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithComGoogleGsonJsonElement:tree withJavaLangReflectType:[create_ComGoogleGsonFunctionalMapTest_31_init() getType]]);
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 1, 2, -1, 3, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testMapSerialization);
  methods[3].selector = @selector(testMapDeserialization);
  methods[4].selector = @selector(testRawMapSerialization);
  methods[5].selector = @selector(testMapSerializationEmpty);
  methods[6].selector = @selector(testMapDeserializationEmpty);
  methods[7].selector = @selector(testMapSerializationWithNullValue);
  methods[8].selector = @selector(testMapDeserializationWithNullValue);
  methods[9].selector = @selector(testMapSerializationWithNullValueButSerializeNulls);
  methods[10].selector = @selector(testMapSerializationWithNullKey);
  methods[11].selector = @selector(testMapDeserializationWithNullKey);
  methods[12].selector = @selector(testMapSerializationWithIntegerKeys);
  methods[13].selector = @selector(testMapDeserializationWithIntegerKeys);
  methods[14].selector = @selector(testHashMapDeserialization);
  methods[15].selector = @selector(testSortedMap);
  methods[16].selector = @selector(testParameterizedMapSubclassSerialization);
  methods[17].selector = @selector(testMapSubclassSerialization);
  methods[18].selector = @selector(testMapStandardSubclassDeserialization);
  methods[19].selector = @selector(testMapSubclassDeserialization);
  methods[20].selector = @selector(testCustomSerializerForSpecificMapType);
  methods[21].selector = @selector(testMapSerializationWithNullValues);
  methods[22].selector = @selector(testMapSerializationWithNullValuesSerialized);
  methods[23].selector = @selector(testMapSerializationWithWildcardValues);
  methods[24].selector = @selector(testMapDeserializationWithWildcardValues);
  methods[25].selector = @selector(testMapOfMapSerialization);
  methods[26].selector = @selector(testMapOfMapDeserialization);
  methods[27].selector = @selector(testMapWithQuotes);
  methods[28].selector = @selector(testWriteMapsWithEmptyStringKey);
  methods[29].selector = @selector(testReadMapsWithEmptyStringKey);
  methods[30].selector = @selector(testSerializeMaps);
  methods[31].selector = @selector(testInterfaceTypeMap);
  methods[32].selector = @selector(testInterfaceTypeMapWithSerializer);
  methods[33].selector = @selector(testGeneralMapField);
  methods[34].selector = @selector(testComplexKeysSerialization);
  methods[35].selector = @selector(testComplexKeysDeserialization);
  methods[36].selector = @selector(testStringKeyDeserialization);
  methods[37].selector = @selector(testNumberKeyDeserialization);
  methods[38].selector = @selector(testBooleanKeyDeserialization);
  methods[39].selector = @selector(testMapDeserializationWithDuplicateKeys);
  methods[40].selector = @selector(testSerializeMapOfMaps);
  methods[41].selector = @selector(testDeerializeMapOfMaps);
  methods[42].selector = @selector(newMapWithId:withId:withId:withId:);
  methods[43].selector = @selector(testMapNamePromotionWithJsonElementReader);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "newMap", "LNSObject;LNSObject;LNSObject;LNSObject;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>(TK;TV;TK;TV;)Ljava/util/Map<TK;TV;>;", "LComGoogleGsonFunctionalMapTest_MyParameterizedMap;LComGoogleGsonFunctionalMapTest_ClassWithAMap;LComGoogleGsonFunctionalMapTest_MyMap;LComGoogleGsonFunctionalMapTest_Point;LComGoogleGsonFunctionalMapTest_MapClass;LComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest = { "MapTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1, 44, 1, -1, 4, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMapTest;
}

@end

void ComGoogleGsonFunctionalMapTest_init(ComGoogleGsonFunctionalMapTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonFunctionalMapTest *new_ComGoogleGsonFunctionalMapTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest, init)
}

ComGoogleGsonFunctionalMapTest *create_ComGoogleGsonFunctionalMapTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest, init)
}

id<JavaUtilMap> ComGoogleGsonFunctionalMapTest_newMapWithId_withId_withId_withId_(ComGoogleGsonFunctionalMapTest *self, id key1, id value1, id key2, id value2) {
  id<JavaUtilMap> result = create_JavaUtilLinkedHashMap_init();
  [result putWithId:key1 withId:value1];
  [result putWithId:key2 withId:value2];
  return result;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMapTest)

@implementation ComGoogleGsonFunctionalMapTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapSerialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_1 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_1;
}

@end

void ComGoogleGsonFunctionalMapTest_1_init(ComGoogleGsonFunctionalMapTest_1 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_1 *new_ComGoogleGsonFunctionalMapTest_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_1, init)
}

ComGoogleGsonFunctionalMapTest_1 *create_ComGoogleGsonFunctionalMapTest_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_1, init)
}

@implementation ComGoogleGsonFunctionalMapTest_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_2 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_2;
}

@end

void ComGoogleGsonFunctionalMapTest_2_init(ComGoogleGsonFunctionalMapTest_2 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_2 *new_ComGoogleGsonFunctionalMapTest_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_2, init)
}

ComGoogleGsonFunctionalMapTest_2 *create_ComGoogleGsonFunctionalMapTest_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_2, init)
}

@implementation ComGoogleGsonFunctionalMapTest_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapSerializationEmpty", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_3 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_3;
}

@end

void ComGoogleGsonFunctionalMapTest_3_init(ComGoogleGsonFunctionalMapTest_3 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_3 *new_ComGoogleGsonFunctionalMapTest_3_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_3, init)
}

ComGoogleGsonFunctionalMapTest_3 *create_ComGoogleGsonFunctionalMapTest_3_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_3, init)
}

@implementation ComGoogleGsonFunctionalMapTest_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapDeserializationEmpty", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_4 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_4;
}

@end

void ComGoogleGsonFunctionalMapTest_4_init(ComGoogleGsonFunctionalMapTest_4 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_4 *new_ComGoogleGsonFunctionalMapTest_4_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_4, init)
}

ComGoogleGsonFunctionalMapTest_4 *create_ComGoogleGsonFunctionalMapTest_4_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_4, init)
}

@implementation ComGoogleGsonFunctionalMapTest_5

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapSerializationWithNullValue", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_5 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_5;
}

@end

void ComGoogleGsonFunctionalMapTest_5_init(ComGoogleGsonFunctionalMapTest_5 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_5 *new_ComGoogleGsonFunctionalMapTest_5_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_5, init)
}

ComGoogleGsonFunctionalMapTest_5 *create_ComGoogleGsonFunctionalMapTest_5_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_5, init)
}

@implementation ComGoogleGsonFunctionalMapTest_6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapDeserializationWithNullValue", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_6 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_6;
}

@end

void ComGoogleGsonFunctionalMapTest_6_init(ComGoogleGsonFunctionalMapTest_6 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_6 *new_ComGoogleGsonFunctionalMapTest_6_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_6, init)
}

ComGoogleGsonFunctionalMapTest_6 *create_ComGoogleGsonFunctionalMapTest_6_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_6, init)
}

@implementation ComGoogleGsonFunctionalMapTest_7

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapSerializationWithNullValueButSerializeNulls", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_7 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_7;
}

@end

void ComGoogleGsonFunctionalMapTest_7_init(ComGoogleGsonFunctionalMapTest_7 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_7 *new_ComGoogleGsonFunctionalMapTest_7_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_7, init)
}

ComGoogleGsonFunctionalMapTest_7 *create_ComGoogleGsonFunctionalMapTest_7_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_7, init)
}

@implementation ComGoogleGsonFunctionalMapTest_8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapSerializationWithNullKey", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_8 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_8;
}

@end

void ComGoogleGsonFunctionalMapTest_8_init(ComGoogleGsonFunctionalMapTest_8 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_8 *new_ComGoogleGsonFunctionalMapTest_8_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_8, init)
}

ComGoogleGsonFunctionalMapTest_8 *create_ComGoogleGsonFunctionalMapTest_8_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_8, init)
}

@implementation ComGoogleGsonFunctionalMapTest_9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapDeserializationWithNullKey", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_9 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_9;
}

@end

void ComGoogleGsonFunctionalMapTest_9_init(ComGoogleGsonFunctionalMapTest_9 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_9 *new_ComGoogleGsonFunctionalMapTest_9_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_9, init)
}

ComGoogleGsonFunctionalMapTest_9 *create_ComGoogleGsonFunctionalMapTest_9_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_9, init)
}

@implementation ComGoogleGsonFunctionalMapTest_10

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapSerializationWithIntegerKeys", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_10 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_10;
}

@end

void ComGoogleGsonFunctionalMapTest_10_init(ComGoogleGsonFunctionalMapTest_10 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_10 *new_ComGoogleGsonFunctionalMapTest_10_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_10, init)
}

ComGoogleGsonFunctionalMapTest_10 *create_ComGoogleGsonFunctionalMapTest_10_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_10, init)
}

@implementation ComGoogleGsonFunctionalMapTest_11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapDeserializationWithIntegerKeys", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/Integer;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_11 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_11;
}

@end

void ComGoogleGsonFunctionalMapTest_11_init(ComGoogleGsonFunctionalMapTest_11 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_11 *new_ComGoogleGsonFunctionalMapTest_11_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_11, init)
}

ComGoogleGsonFunctionalMapTest_11 *create_ComGoogleGsonFunctionalMapTest_11_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_11, init)
}

@implementation ComGoogleGsonFunctionalMapTest_12

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testHashMapDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/HashMap<Ljava/lang/Integer;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_12 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_12;
}

@end

void ComGoogleGsonFunctionalMapTest_12_init(ComGoogleGsonFunctionalMapTest_12 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_12 *new_ComGoogleGsonFunctionalMapTest_12_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_12, init)
}

ComGoogleGsonFunctionalMapTest_12 *create_ComGoogleGsonFunctionalMapTest_12_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_12, init)
}

@implementation ComGoogleGsonFunctionalMapTest_13

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testSortedMap", "Lcom/google/gson/reflect/TypeToken<Ljava/util/SortedMap<Ljava/lang/Integer;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_13 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_13;
}

@end

void ComGoogleGsonFunctionalMapTest_13_init(ComGoogleGsonFunctionalMapTest_13 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_13 *new_ComGoogleGsonFunctionalMapTest_13_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_13, init)
}

ComGoogleGsonFunctionalMapTest_13 *create_ComGoogleGsonFunctionalMapTest_13_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_13, init)
}

@implementation ComGoogleGsonFunctionalMapTest_14

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testParameterizedMapSubclassSerialization", "Lcom/google/gson/reflect/TypeToken<Lcom/google/gson/functional/MapTest$MyParameterizedMap<Ljava/lang/String;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_14 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_14;
}

@end

void ComGoogleGsonFunctionalMapTest_14_init(ComGoogleGsonFunctionalMapTest_14 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_14 *new_ComGoogleGsonFunctionalMapTest_14_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_14, init)
}

ComGoogleGsonFunctionalMapTest_14 *create_ComGoogleGsonFunctionalMapTest_14_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_14, init)
}

@implementation ComGoogleGsonFunctionalMapTest_MyParameterizedMap

- (instancetype __nonnull)initWithInt:(jint)foo {
  ComGoogleGsonFunctionalMapTest_MyParameterizedMap_initWithInt_(self, foo);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "foo_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LComGoogleGsonFunctionalMapTest;", "<K:Ljava/lang/Object;V:Ljava/lang/Object;>Ljava/util/LinkedHashMap<TK;TV;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_MyParameterizedMap = { "MyParameterizedMap", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_MyParameterizedMap;
}

@end

void ComGoogleGsonFunctionalMapTest_MyParameterizedMap_initWithInt_(ComGoogleGsonFunctionalMapTest_MyParameterizedMap *self, jint foo) {
  JavaUtilLinkedHashMap_init(self);
  self->foo_ = foo;
}

ComGoogleGsonFunctionalMapTest_MyParameterizedMap *new_ComGoogleGsonFunctionalMapTest_MyParameterizedMap_initWithInt_(jint foo) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_MyParameterizedMap, initWithInt_, foo)
}

ComGoogleGsonFunctionalMapTest_MyParameterizedMap *create_ComGoogleGsonFunctionalMapTest_MyParameterizedMap_initWithInt_(jint foo) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_MyParameterizedMap, initWithInt_, foo)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMapTest_MyParameterizedMap)

@implementation ComGoogleGsonFunctionalMapTest_15

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapStandardSubclassDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/LinkedHashMap<Ljava/lang/String;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_15 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_15;
}

@end

void ComGoogleGsonFunctionalMapTest_15_init(ComGoogleGsonFunctionalMapTest_15 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_15 *new_ComGoogleGsonFunctionalMapTest_15_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_15, init)
}

ComGoogleGsonFunctionalMapTest_15 *create_ComGoogleGsonFunctionalMapTest_15_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_15, init)
}

@implementation ComGoogleGsonFunctionalMapTest_16

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonFunctionalMapTest_MyMap *)createInstanceWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return create_ComGoogleGsonFunctionalMapTest_MyMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonFunctionalMapTest_MyMap;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createInstanceWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createInstance", "LJavaLangReflectType;", "LComGoogleGsonFunctionalMapTest;", "testMapSubclassDeserialization", "Ljava/lang/Object;Lcom/google/gson/InstanceCreator<Lcom/google/gson/functional/MapTest$MyMap;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_16 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_ComGoogleGsonFunctionalMapTest_16;
}

@end

void ComGoogleGsonFunctionalMapTest_16_init(ComGoogleGsonFunctionalMapTest_16 *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalMapTest_16 *new_ComGoogleGsonFunctionalMapTest_16_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_16, init)
}

ComGoogleGsonFunctionalMapTest_16 *create_ComGoogleGsonFunctionalMapTest_16_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_16, init)
}

@implementation ComGoogleGsonFunctionalMapTest_17

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)serializeWithId:(id<JavaUtilMap>)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  ComGoogleGsonJsonArray *array = create_ComGoogleGsonJsonArray_init();
  for (JavaLangLong *boxed__ in nil_chk([((id<JavaUtilMap>) nil_chk(src)) values])) {
    jlong value = [((JavaLangLong *) nil_chk(boxed__)) longLongValue];
    [array addWithComGoogleGsonJsonElement:create_ComGoogleGsonJsonPrimitive_initWithNSNumber_(JavaLangLong_valueOfWithLong_(value))];
  }
  return array;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "serialize", "LJavaUtilMap;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Long;>;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;", "LComGoogleGsonFunctionalMapTest;", "testCustomSerializerForSpecificMapType", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_17 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_ComGoogleGsonFunctionalMapTest_17;
}

@end

void ComGoogleGsonFunctionalMapTest_17_init(ComGoogleGsonFunctionalMapTest_17 *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalMapTest_17 *new_ComGoogleGsonFunctionalMapTest_17_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_17, init)
}

ComGoogleGsonFunctionalMapTest_17 *create_ComGoogleGsonFunctionalMapTest_17_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_17, init)
}

@implementation ComGoogleGsonFunctionalMapTest_ClassWithAMap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_ClassWithAMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x0, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "LComGoogleGsonFunctionalMapTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_ClassWithAMap = { "ClassWithAMap", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMapTest_ClassWithAMap;
}

@end

void ComGoogleGsonFunctionalMapTest_ClassWithAMap_init(ComGoogleGsonFunctionalMapTest_ClassWithAMap *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->map_, new_JavaUtilTreeMap_init());
}

ComGoogleGsonFunctionalMapTest_ClassWithAMap *new_ComGoogleGsonFunctionalMapTest_ClassWithAMap_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_ClassWithAMap, init)
}

ComGoogleGsonFunctionalMapTest_ClassWithAMap *create_ComGoogleGsonFunctionalMapTest_ClassWithAMap_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_ClassWithAMap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMapTest_ClassWithAMap)

@implementation ComGoogleGsonFunctionalMapTest_18

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_18_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapSerializationWithWildcardValues", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;+Ljava/util/Collection<+Ljava/lang/Integer;>;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_18 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_18;
}

@end

void ComGoogleGsonFunctionalMapTest_18_init(ComGoogleGsonFunctionalMapTest_18 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_18 *new_ComGoogleGsonFunctionalMapTest_18_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_18, init)
}

ComGoogleGsonFunctionalMapTest_18 *create_ComGoogleGsonFunctionalMapTest_18_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_18, init)
}

@implementation ComGoogleGsonFunctionalMapTest_19

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_19_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapDeserializationWithWildcardValues", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;+Ljava/lang/Long;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_19 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_19;
}

@end

void ComGoogleGsonFunctionalMapTest_19_init(ComGoogleGsonFunctionalMapTest_19 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_19 *new_ComGoogleGsonFunctionalMapTest_19_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_19, init)
}

ComGoogleGsonFunctionalMapTest_19 *create_ComGoogleGsonFunctionalMapTest_19_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_19, init)
}

@implementation ComGoogleGsonFunctionalMapTest_MyMap

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_MyMap_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComGoogleGsonFunctionalMapTest_MyMap_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "foo_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "Ljava/util/LinkedHashMap<Ljava/lang/String;Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_MyMap = { "MyMap", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 2, 0, -1, -1, 1, -1 };
  return &_ComGoogleGsonFunctionalMapTest_MyMap;
}

@end

void ComGoogleGsonFunctionalMapTest_MyMap_init(ComGoogleGsonFunctionalMapTest_MyMap *self) {
  JavaUtilLinkedHashMap_init(self);
  self->foo_ = 10;
}

ComGoogleGsonFunctionalMapTest_MyMap *new_ComGoogleGsonFunctionalMapTest_MyMap_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_MyMap, init)
}

ComGoogleGsonFunctionalMapTest_MyMap *create_ComGoogleGsonFunctionalMapTest_MyMap_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_MyMap, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMapTest_MyMap)

@implementation ComGoogleGsonFunctionalMapTest_20

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_20_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapOfMapDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_20 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_20;
}

@end

void ComGoogleGsonFunctionalMapTest_20_init(ComGoogleGsonFunctionalMapTest_20 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_20 *new_ComGoogleGsonFunctionalMapTest_20_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_20, init)
}

ComGoogleGsonFunctionalMapTest_20 *create_ComGoogleGsonFunctionalMapTest_20_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_20, init)
}

@implementation ComGoogleGsonFunctionalMapTest_21

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_21_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testReadMapsWithEmptyStringKey", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Boolean;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_21 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_21;
}

@end

void ComGoogleGsonFunctionalMapTest_21_init(ComGoogleGsonFunctionalMapTest_21 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_21 *new_ComGoogleGsonFunctionalMapTest_21_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_21, init)
}

ComGoogleGsonFunctionalMapTest_21 *create_ComGoogleGsonFunctionalMapTest_21_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_21, init)
}

@implementation ComGoogleGsonFunctionalMapTest_22

- (instancetype __nonnull)initWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)capture$0 {
  ComGoogleGsonFunctionalMapTest_22_initWithComGoogleGsonJsonElement_(self, capture$0);
  return self;
}

- (ComGoogleGsonJsonElement *)serializeWithId:(ComGoogleGsonCommonTestTypes_Base *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  return val$baseTypeJsonElement_;
}

- (void)dealloc {
  RELEASE_(val$baseTypeJsonElement_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonJsonElement:);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$baseTypeJsonElement_", "LComGoogleGsonJsonElement;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LComGoogleGsonCommonTestTypes_Base;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "LComGoogleGsonFunctionalMapTest;", "testInterfaceTypeMapWithSerializer", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Lcom/google/gson/common/TestTypes$Base;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_22 = { "", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, 4, -1 };
  return &_ComGoogleGsonFunctionalMapTest_22;
}

@end

void ComGoogleGsonFunctionalMapTest_22_initWithComGoogleGsonJsonElement_(ComGoogleGsonFunctionalMapTest_22 *self, ComGoogleGsonJsonElement *capture$0) {
  JreStrongAssign(&self->val$baseTypeJsonElement_, capture$0);
  NSObject_init(self);
}

ComGoogleGsonFunctionalMapTest_22 *new_ComGoogleGsonFunctionalMapTest_22_initWithComGoogleGsonJsonElement_(ComGoogleGsonJsonElement *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_22, initWithComGoogleGsonJsonElement_, capture$0)
}

ComGoogleGsonFunctionalMapTest_22 *create_ComGoogleGsonFunctionalMapTest_22_initWithComGoogleGsonJsonElement_(ComGoogleGsonJsonElement *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_22, initWithComGoogleGsonJsonElement_, capture$0)
}

@implementation ComGoogleGsonFunctionalMapTest_23

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_23_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testComplexKeysSerialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Lcom/google/gson/functional/MapTest$Point;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_23 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_23;
}

@end

void ComGoogleGsonFunctionalMapTest_23_init(ComGoogleGsonFunctionalMapTest_23 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_23 *new_ComGoogleGsonFunctionalMapTest_23_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_23, init)
}

ComGoogleGsonFunctionalMapTest_23 *create_ComGoogleGsonFunctionalMapTest_23_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_23, init)
}

@implementation ComGoogleGsonFunctionalMapTest_24

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_24_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testComplexKeysDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Lcom/google/gson/functional/MapTest$Point;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_24 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_24;
}

@end

void ComGoogleGsonFunctionalMapTest_24_init(ComGoogleGsonFunctionalMapTest_24 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_24 *new_ComGoogleGsonFunctionalMapTest_24_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_24, init)
}

ComGoogleGsonFunctionalMapTest_24 *create_ComGoogleGsonFunctionalMapTest_24_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_24, init)
}

@implementation ComGoogleGsonFunctionalMapTest_25

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_25_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testStringKeyDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_25 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_25;
}

@end

void ComGoogleGsonFunctionalMapTest_25_init(ComGoogleGsonFunctionalMapTest_25 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_25 *new_ComGoogleGsonFunctionalMapTest_25_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_25, init)
}

ComGoogleGsonFunctionalMapTest_25 *create_ComGoogleGsonFunctionalMapTest_25_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_25, init)
}

@implementation ComGoogleGsonFunctionalMapTest_26

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_26_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testNumberKeyDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/Double;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_26 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_26;
}

@end

void ComGoogleGsonFunctionalMapTest_26_init(ComGoogleGsonFunctionalMapTest_26 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_26 *new_ComGoogleGsonFunctionalMapTest_26_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_26, init)
}

ComGoogleGsonFunctionalMapTest_26 *create_ComGoogleGsonFunctionalMapTest_26_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_26, init)
}

@implementation ComGoogleGsonFunctionalMapTest_27

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_27_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testBooleanKeyDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/Boolean;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_27 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_27;
}

@end

void ComGoogleGsonFunctionalMapTest_27_init(ComGoogleGsonFunctionalMapTest_27 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_27 *new_ComGoogleGsonFunctionalMapTest_27_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_27, init)
}

ComGoogleGsonFunctionalMapTest_27 *create_ComGoogleGsonFunctionalMapTest_27_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_27, init)
}

@implementation ComGoogleGsonFunctionalMapTest_28

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_28_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapDeserializationWithDuplicateKeys", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_28 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_28;
}

@end

void ComGoogleGsonFunctionalMapTest_28_init(ComGoogleGsonFunctionalMapTest_28 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_28 *new_ComGoogleGsonFunctionalMapTest_28_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_28, init)
}

ComGoogleGsonFunctionalMapTest_28 *create_ComGoogleGsonFunctionalMapTest_28_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_28, init)
}

@implementation ComGoogleGsonFunctionalMapTest_29

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_29_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testSerializeMapOfMaps", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_29 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_29;
}

@end

void ComGoogleGsonFunctionalMapTest_29_init(ComGoogleGsonFunctionalMapTest_29 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_29 *new_ComGoogleGsonFunctionalMapTest_29_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_29, init)
}

ComGoogleGsonFunctionalMapTest_29 *create_ComGoogleGsonFunctionalMapTest_29_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_29, init)
}

@implementation ComGoogleGsonFunctionalMapTest_30

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_30_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testDeerializeMapOfMaps", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_30 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_30;
}

@end

void ComGoogleGsonFunctionalMapTest_30_init(ComGoogleGsonFunctionalMapTest_30 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_30 *new_ComGoogleGsonFunctionalMapTest_30_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_30, init)
}

ComGoogleGsonFunctionalMapTest_30 *create_ComGoogleGsonFunctionalMapTest_30_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_30, init)
}

@implementation ComGoogleGsonFunctionalMapTest_31

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_31_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalMapTest;", "testMapNamePromotionWithJsonElementReader", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/Double;Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_31 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalMapTest_31;
}

@end

void ComGoogleGsonFunctionalMapTest_31_init(ComGoogleGsonFunctionalMapTest_31 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalMapTest_31 *new_ComGoogleGsonFunctionalMapTest_31_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_31, init)
}

ComGoogleGsonFunctionalMapTest_31 *create_ComGoogleGsonFunctionalMapTest_31_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_31, init)
}

@implementation ComGoogleGsonFunctionalMapTest_Point

- (instancetype __nonnull)initWithInt:(jint)x
                              withInt:(jint)y {
  ComGoogleGsonFunctionalMapTest_Point_initWithInt_withInt_(self, x, y);
  return self;
}

- (jboolean)isEqual:(id)o {
  return [o isKindOfClass:[ComGoogleGsonFunctionalMapTest_Point class]] && x_ == ((ComGoogleGsonFunctionalMapTest_Point *) nil_chk(((ComGoogleGsonFunctionalMapTest_Point *) cast_chk(o, [ComGoogleGsonFunctionalMapTest_Point class]))))->x_ && y_ == ((ComGoogleGsonFunctionalMapTest_Point *) nil_chk(((ComGoogleGsonFunctionalMapTest_Point *) cast_chk(o, [ComGoogleGsonFunctionalMapTest_Point class]))))->y_;
}

- (NSUInteger)hash {
  return x_ * 37 + y_;
}

- (NSString *)description {
  return JreStrcat("ICI", x_, ',', y_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "x_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "y_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "equals", "LNSObject;", "hashCode", "toString", "LComGoogleGsonFunctionalMapTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_Point = { "Point", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8, 4, 2, 5, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMapTest_Point;
}

@end

void ComGoogleGsonFunctionalMapTest_Point_initWithInt_withInt_(ComGoogleGsonFunctionalMapTest_Point *self, jint x, jint y) {
  NSObject_init(self);
  self->x_ = x;
  self->y_ = y;
}

ComGoogleGsonFunctionalMapTest_Point *new_ComGoogleGsonFunctionalMapTest_Point_initWithInt_withInt_(jint x, jint y) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_Point, initWithInt_withInt_, x, y)
}

ComGoogleGsonFunctionalMapTest_Point *create_ComGoogleGsonFunctionalMapTest_Point_initWithInt_withInt_(jint x, jint y) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_Point, initWithInt_withInt_, x, y)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMapTest_Point)

@implementation ComGoogleGsonFunctionalMapTest_MapClass

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_MapClass_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addBaseWithNSString:(NSString *)name
withComGoogleGsonCommonTestTypes_Base:(ComGoogleGsonCommonTestTypes_Base *)value {
  ComGoogleGsonFunctionalMapTest_MapClass_addBaseWithNSString_withComGoogleGsonCommonTestTypes_Base_(self, name, value);
}

- (void)addSubWithNSString:(NSString *)name
withComGoogleGsonCommonTestTypes_Sub:(ComGoogleGsonCommonTestTypes_Sub *)value {
  ComGoogleGsonFunctionalMapTest_MapClass_addSubWithNSString_withComGoogleGsonCommonTestTypes_Sub_(self, name, value);
}

- (void)dealloc {
  RELEASE_(bases_);
  RELEASE_(subs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addBaseWithNSString:withComGoogleGsonCommonTestTypes_Base:);
  methods[2].selector = @selector(addSubWithNSString:withComGoogleGsonCommonTestTypes_Sub:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bases_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
    { "subs_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "addBase", "LNSString;LComGoogleGsonCommonTestTypes_Base;", "addSub", "LNSString;LComGoogleGsonCommonTestTypes_Sub;", "Ljava/util/Map<Ljava/lang/String;Lcom/google/gson/common/TestTypes$Base;>;", "Ljava/util/Map<Ljava/lang/String;Lcom/google/gson/common/TestTypes$Sub;>;", "LComGoogleGsonFunctionalMapTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_MapClass = { "MapClass", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x18, 3, 2, 6, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMapTest_MapClass;
}

@end

void ComGoogleGsonFunctionalMapTest_MapClass_init(ComGoogleGsonFunctionalMapTest_MapClass *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->bases_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->subs_, new_JavaUtilHashMap_init());
}

ComGoogleGsonFunctionalMapTest_MapClass *new_ComGoogleGsonFunctionalMapTest_MapClass_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_MapClass, init)
}

ComGoogleGsonFunctionalMapTest_MapClass *create_ComGoogleGsonFunctionalMapTest_MapClass_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_MapClass, init)
}

void ComGoogleGsonFunctionalMapTest_MapClass_addBaseWithNSString_withComGoogleGsonCommonTestTypes_Base_(ComGoogleGsonFunctionalMapTest_MapClass *self, NSString *name, ComGoogleGsonCommonTestTypes_Base *value) {
  [((id<JavaUtilMap>) nil_chk(self->bases_)) putWithId:name withId:value];
}

void ComGoogleGsonFunctionalMapTest_MapClass_addSubWithNSString_withComGoogleGsonCommonTestTypes_Sub_(ComGoogleGsonFunctionalMapTest_MapClass *self, NSString *name, ComGoogleGsonCommonTestTypes_Sub *value) {
  [((id<JavaUtilMap>) nil_chk(self->subs_)) putWithId:name withId:value];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMapTest_MapClass)

@implementation ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x10, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "LComGoogleGsonFunctionalMapTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters = { "MapWithGeneralMapParameters", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x18, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters;
}

@end

void ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_init(ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->map_, new_JavaUtilLinkedHashMap_init());
}

ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters *new_ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters, init)
}

ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters *create_ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalMapTest_MapWithGeneralMapParameters)
