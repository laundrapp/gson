//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonObject.h"
#include "com/google/gson/JsonParseException.h"
#include "com/google/gson/JsonPrimitive.h"
#include "com/google/gson/TypeAdapter.h"
#include "com/google/gson/annotations/JsonAdapter.h"
#include "com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.h"
#include "com/google/gson/internal/Streams.h"
#include "com/google/gson/reflect/TypeToken.h"
#include "com/google/gson/stream/JsonReader.h"
#include "com/google/gson/stream/JsonWriter.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest () {
 @public
  ComGoogleGsonGson *gson_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest, gson_, ComGoogleGsonGson *)

__attribute__((unused)) static IOSObjectArray *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape__Annotations$0(void);

@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory () {
 @public
  IOSClass *baseType_;
  NSString *typeFieldName_;
  id<JavaUtilMap> labelToSubtype_;
  id<JavaUtilMap> subtypeToLabel_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory, baseType_, IOSClass *)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory, typeFieldName_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory, labelToSubtype_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory, subtypeToLabel_, id<JavaUtilMap>)

@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory : ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory)

__attribute__((unused)) static void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory_init(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory *self);

__attribute__((unused)) static ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory)

__attribute__((unused)) static void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_initWithNSString_withInt_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *self, NSString *__name, jint __ordinal);

@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle : ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape {
 @public
  jint radius_;
}

- (instancetype)initWithInt:(jint)radius;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle)

__attribute__((unused)) static void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle_initWithInt_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle *self, jint radius);

__attribute__((unused)) static ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle_initWithInt_(jint radius) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle_initWithInt_(jint radius);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle)

@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square : ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape {
 @public
  jint side_;
}

- (instancetype)initWithInt:(jint)side;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square)

__attribute__((unused)) static void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square_initWithInt_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square *self, jint side);

__attribute__((unused)) static ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square_initWithInt_(jint side) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square_initWithInt_(jint side);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square)

@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1 : ComGoogleGsonTypeAdapter {
 @public
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *this$0_;
  id<JavaUtilMap> val$labelToDelegate_;
  id<JavaUtilMap> val$subtypeToDelegate_;
}

- (instancetype)initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory:(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)outer$
                                                                                                 withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                                                 withJavaUtilMap:(id<JavaUtilMap>)capture$1;

- (id)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1)

__attribute__((unused)) static void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1 *self, ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *outer$, id<JavaUtilMap> capture$0, id<JavaUtilMap> capture$1);

__attribute__((unused)) static ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1 *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *outer$, id<JavaUtilMap> capture$0, id<JavaUtilMap> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1 *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *outer$, id<JavaUtilMap> capture$0, id<JavaUtilMap> capture$1);

@implementation ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testSubclassesAutomaticallySerialzed {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape *shape = create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle_initWithInt_(25);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:shape];
  shape = [gson_ fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_class_()];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(25, ((ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle *) nil_chk(((ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle *) cast_chk(shape, [ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle class]))))->radius_);
  shape = create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square_initWithInt_(15);
  json = [gson_ toJsonWithId:shape];
  shape = [gson_ fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_class_()];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(15, ((ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square *) nil_chk(((ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square *) cast_chk(shape, [ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square class]))))->side_);
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testSubclassesAutomaticallySerialzed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape;LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType;LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle;LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square;LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest = { "RuntimeTypeAdapterFactoryFunctionalTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x11, 2, 1, -1, 1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest;
}

@end

void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_init(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest *self) {
  JunitFrameworkTestCase_init(self);
  JreStrongAssignAndConsume(&self->gson_, new_ComGoogleGsonGson_init());
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest, init)
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest)

@implementation ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape

- (instancetype)initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType:(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *)type {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_(self, type);
  return self;
}

- (void)dealloc {
  RELEASE_(type_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "type_", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType;", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest;", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory;", (void *)&ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape__Annotations$0 };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape = { "Shape", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8, 1, 1, 1, 2, -1, -1, 3 };
  return &_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape;
}

@end

void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape *self, ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *type) {
  NSObject_init(self);
  JreStrongAssign(&self->type_, type);
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *type) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape, initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_, type)
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *type) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape, initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_, type)
}

IOSObjectArray *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComGoogleGsonAnnotationsJsonAdapter(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory_class_()) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape)

@implementation ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory

- (instancetype)initWithIOSClass:(IOSClass *)baseType
                    withNSString:(NSString *)typeFieldName {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(self, baseType, typeFieldName);
  return self;
}

+ (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)ofWithIOSClass:(IOSClass *)baseType
                                                                                                withNSString:(NSString *)typeFieldName {
  return ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_ofWithIOSClass_withNSString_(baseType, typeFieldName);
}

+ (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)ofWithIOSClass:(IOSClass *)baseType {
  return ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_ofWithIOSClass_(baseType);
}

- (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)registerSubtypeWithIOSClass:(IOSClass *)type
                                                                                                             withNSString:(NSString *)label {
  if (type == nil || label == nil) {
    @throw create_JavaLangNullPointerException_init();
  }
  if ([((id<JavaUtilMap>) nil_chk(subtypeToLabel_)) containsKeyWithId:type] || [((id<JavaUtilMap>) nil_chk(labelToSubtype_)) containsKeyWithId:label]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"types and labels must be unique");
  }
  [((id<JavaUtilMap>) nil_chk(labelToSubtype_)) putWithId:label withId:type];
  [subtypeToLabel_ putWithId:type withId:label];
  return self;
}

- (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)registerSubtypeWithIOSClass:(IOSClass *)type {
  return [self registerSubtypeWithIOSClass:type withNSString:[((IOSClass *) nil_chk(type)) getSimpleName]];
}

- (ComGoogleGsonTypeAdapter *)createWithComGoogleGsonGson:(ComGoogleGsonGson *)gson
                        withComGoogleGsonReflectTypeToken:(ComGoogleGsonReflectTypeToken *)type {
  if ([((ComGoogleGsonReflectTypeToken *) nil_chk(type)) getRawType] != baseType_) {
    return nil;
  }
  id<JavaUtilMap> labelToDelegate = create_JavaUtilLinkedHashMap_init();
  id<JavaUtilMap> subtypeToDelegate = create_JavaUtilLinkedHashMap_init();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(labelToSubtype_)) entrySet])) {
    ComGoogleGsonTypeAdapter *delegate = [((ComGoogleGsonGson *) nil_chk(gson)) getDelegateAdapterWithComGoogleGsonTypeAdapterFactory:self withComGoogleGsonReflectTypeToken:ComGoogleGsonReflectTypeToken_getWithIOSClass_([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue])];
    [labelToDelegate putWithId:[entry_ getKey] withId:delegate];
    [subtypeToDelegate putWithId:[entry_ getValue] withId:delegate];
  }
  return create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_(self, labelToDelegate, subtypeToDelegate);
}

- (void)dealloc {
  RELEASE_(baseType_);
  RELEASE_(typeFieldName_);
  RELEASE_(labelToSubtype_);
  RELEASE_(subtypeToLabel_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory;", 0x9, 2, 0, -1, 3, -1, -1 },
    { NULL, "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory;", 0x9, 2, 4, -1, 5, -1, -1 },
    { NULL, "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory;", 0x1, 6, 0, -1, 7, -1, -1 },
    { NULL, "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory;", 0x1, 6, 4, -1, 8, -1, -1 },
    { NULL, "LComGoogleGsonTypeAdapter;", 0x1, 9, 10, -1, 11, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:withNSString:);
  methods[1].selector = @selector(ofWithIOSClass:withNSString:);
  methods[2].selector = @selector(ofWithIOSClass:);
  methods[3].selector = @selector(registerSubtypeWithIOSClass:withNSString:);
  methods[4].selector = @selector(registerSubtypeWithIOSClass:);
  methods[5].selector = @selector(createWithComGoogleGsonGson:withComGoogleGsonReflectTypeToken:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "baseType_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 12, -1 },
    { "typeFieldName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "labelToSubtype_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "subtypeToLabel_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 14, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;LNSString;", "(Ljava/lang/Class<*>;Ljava/lang/String;)V", "of", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;Ljava/lang/String;)Lcom/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory<TT;>;", "LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)Lcom/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory<TT;>;", "registerSubtype", "(Ljava/lang/Class<+TT;>;Ljava/lang/String;)Lcom/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory<TT;>;", "(Ljava/lang/Class<+TT;>;)Lcom/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory<TT;>;", "create", "LComGoogleGsonGson;LComGoogleGsonReflectTypeToken;", "<R:Ljava/lang/Object;>(Lcom/google/gson/Gson;Lcom/google/gson/reflect/TypeToken<TR;>;)Lcom/google/gson/TypeAdapter<TR;>;", "Ljava/lang/Class<*>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Class<*>;>;", "Ljava/util/Map<Ljava/lang/Class<*>;Ljava/lang/String;>;", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lcom/google/gson/TypeAdapterFactory;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory = { "RuntimeTypeAdapterFactory", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8, 6, 4, 15, -1, -1, 16, -1 };
  return &_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory;
}

@end

void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *self, IOSClass *baseType, NSString *typeFieldName) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->labelToSubtype_, new_JavaUtilLinkedHashMap_init());
  JreStrongAssignAndConsume(&self->subtypeToLabel_, new_JavaUtilLinkedHashMap_init());
  if (typeFieldName == nil || baseType == nil) {
    @throw create_JavaLangNullPointerException_init();
  }
  JreStrongAssign(&self->baseType_, baseType);
  JreStrongAssign(&self->typeFieldName_, typeFieldName);
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(IOSClass *baseType, NSString *typeFieldName) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory, initWithIOSClass_withNSString_, baseType, typeFieldName)
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(IOSClass *baseType, NSString *typeFieldName) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory, initWithIOSClass_withNSString_, baseType, typeFieldName)
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_ofWithIOSClass_withNSString_(IOSClass *baseType, NSString *typeFieldName) {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initialize();
  return create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(baseType, typeFieldName);
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_ofWithIOSClass_(IOSClass *baseType) {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initialize();
  return create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(baseType, @"type");
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory)

@implementation ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape;", "Lcom/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory<Lcom/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest$Shape;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory = { "JsonAdapterFactory", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x1a, 1, 0, 0, -1, -1, 1, -1 };
  return &_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory;
}

@end

void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory_init(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory *self) {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(self, ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_class_(), @"type");
  [self registerSubtypeWithIOSClass:ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle_class_() withNSString:[((ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *) nil_chk(JreLoadEnum(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType, CIRCLE))) description]];
  [self registerSubtypeWithIOSClass:ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square_class_() withNSString:[((ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *) nil_chk(JreLoadEnum(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType, SQUARE))) description]];
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory, init)
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_JsonAdapterFactory)

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType)

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_values_[2];

@implementation ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType

+ (IOSObjectArray *)values {
  return ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_values();
}

+ (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *)valueOfWithNSString:(NSString *)name {
  return ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SQUARE", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "CIRCLE", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType, SQUARE), &JreEnum(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType, CIRCLE), "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest;", "Ljava/lang/Enum<Lcom/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest$ShapeType;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType = { "ShapeType", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x4019, 2, 2, 4, -1, -1, 5, -1 };
  return &_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType;
}

+ (void)initialize {
  if (self == [ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 2 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 2; i++) {
      (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_values_[i] = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
      ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_initWithNSString_withInt_(e, JreEnumConstantName(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType)
  }
}

@end

void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_initWithNSString_withInt_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_values() {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_initialize();
  return [IOSObjectArray arrayWithObjects:ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_values_ count:2 type:ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_class_()];
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_valueOfWithNSString_(NSString *name) {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_initialize();
  for (int i = 0; i < 2; i++) {
    ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *e = ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_fromOrdinal(NSUInteger ordinal) {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType)

@implementation ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle

- (instancetype)initWithInt:(jint)radius {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle_initWithInt_(self, radius);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "radius_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle = { "Circle", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1a, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle;
}

@end

void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle_initWithInt_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle *self, jint radius) {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_(self, JreLoadEnum(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType, CIRCLE));
  self->radius_ = radius;
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle_initWithInt_(jint radius) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle, initWithInt_, radius)
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle_initWithInt_(jint radius) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle, initWithInt_, radius)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Circle)

@implementation ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square

- (instancetype)initWithInt:(jint)side {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square_initWithInt_(self, side);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "side_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square = { "Square", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1a, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square;
}

@end

void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square_initWithInt_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square *self, jint side) {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_(self, JreLoadEnum(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType, SQUARE));
  self->side_ = side;
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square_initWithInt_(jint side) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square, initWithInt_, side)
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square_initWithInt_(jint side) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square, initWithInt_, side)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Square)

@implementation ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1

- (instancetype)initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory:(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)outer$
                                                                                                 withJavaUtilMap:(id<JavaUtilMap>)capture$0
                                                                                                 withJavaUtilMap:(id<JavaUtilMap>)capture$1 {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_(self, outer$, capture$0, capture$1);
  return self;
}

- (id)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg {
  ComGoogleGsonJsonElement *jsonElement = ComGoogleGsonInternalStreams_parseWithComGoogleGsonStreamJsonReader_(inArg);
  ComGoogleGsonJsonElement *labelJsonElement = [((ComGoogleGsonJsonObject *) nil_chk([((ComGoogleGsonJsonElement *) nil_chk(jsonElement)) getAsJsonObject])) removeWithNSString:this$0_->typeFieldName_];
  if (labelJsonElement == nil) {
    @throw create_ComGoogleGsonJsonParseException_initWithNSString_(JreStrcat("$@$$", @"cannot deserialize ", this$0_->baseType_, @" because it does not define a field named ", this$0_->typeFieldName_));
  }
  NSString *label = [labelJsonElement getAsString];
  ComGoogleGsonTypeAdapter *delegate = [((id<JavaUtilMap>) nil_chk(val$labelToDelegate_)) getWithId:label];
  if (delegate == nil) {
    @throw create_ComGoogleGsonJsonParseException_initWithNSString_(JreStrcat("$@$$$", @"cannot deserialize ", this$0_->baseType_, @" subtype named ", label, @"; did you forget to register a subtype?"));
  }
  return [delegate fromJsonTreeWithComGoogleGsonJsonElement:jsonElement];
}

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(id)value {
  IOSClass *srcType = [nil_chk(value) java_getClass];
  NSString *label = [((id<JavaUtilMap>) nil_chk(this$0_->subtypeToLabel_)) getWithId:srcType];
  ComGoogleGsonTypeAdapter *delegate = [((id<JavaUtilMap>) nil_chk(val$subtypeToDelegate_)) getWithId:srcType];
  if (delegate == nil) {
    @throw create_ComGoogleGsonJsonParseException_initWithNSString_(JreStrcat("$$$", @"cannot serialize ", [srcType getName], @"; did you forget to register a subtype?"));
  }
  ComGoogleGsonJsonObject *jsonObject = [((ComGoogleGsonJsonElement *) nil_chk([delegate toJsonTreeWithId:value])) getAsJsonObject];
  if (![((ComGoogleGsonJsonObject *) nil_chk(jsonObject)) hasWithNSString:this$0_->typeFieldName_]) {
    ComGoogleGsonJsonObject *clone = create_ComGoogleGsonJsonObject_init();
    [clone addWithNSString:this$0_->typeFieldName_ withComGoogleGsonJsonElement:create_ComGoogleGsonJsonPrimitive_initWithNSString_(label)];
    for (id<JavaUtilMap_Entry> __strong e in nil_chk([jsonObject entrySet])) {
      [clone addWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey] withComGoogleGsonJsonElement:[e getValue]];
    }
    jsonObject = clone;
  }
  ComGoogleGsonInternalStreams_writeWithComGoogleGsonJsonElement_withComGoogleGsonStreamJsonWriter_(jsonObject, outArg);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$labelToDelegate_);
  RELEASE_(val$subtypeToDelegate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 0, 1, 2, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 2, 6, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory:withJavaUtilMap:withJavaUtilMap:);
  methods[1].selector = @selector(readWithComGoogleGsonStreamJsonReader:);
  methods[2].selector = @selector(writeWithComGoogleGsonStreamJsonWriter:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "val$labelToDelegate_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 8, -1 },
    { "val$subtypeToDelegate_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "read", "LComGoogleGsonStreamJsonReader;", "LJavaIoIOException;", "(Lcom/google/gson/stream/JsonReader;)TR;", "write", "LComGoogleGsonStreamJsonWriter;LNSObject;", "(Lcom/google/gson/stream/JsonWriter;TR;)V", "Lcom/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest$RuntimeTypeAdapterFactory<TT;>;", "Ljava/util/Map<Ljava/lang/String;Lcom/google/gson/TypeAdapter<*>;>;", "Ljava/util/Map<Ljava/lang/Class<*>;Lcom/google/gson/TypeAdapter<*>;>;", "LComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory;", "createWithComGoogleGsonGson:withComGoogleGsonReflectTypeToken:", "Lcom/google/gson/TypeAdapter<TR;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1 = { "", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8018, 3, 3, 10, -1, 11, 12, -1 };
  return &_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1;
}

@end

void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1 *self, ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *outer$, id<JavaUtilMap> capture$0, id<JavaUtilMap> capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$labelToDelegate_, capture$0);
  JreStrongAssign(&self->val$subtypeToDelegate_, capture$1);
  ComGoogleGsonTypeAdapter_init(self);
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1 *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *outer$, id<JavaUtilMap> capture$0, id<JavaUtilMap> capture$1) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1, initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_, outer$, capture$0, capture$1)
}

ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1 *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *outer$, id<JavaUtilMap> capture$0, id<JavaUtilMap> capture$1) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_1, initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_withJavaUtilMap_withJavaUtilMap_, outer$, capture$0, capture$1)
}
