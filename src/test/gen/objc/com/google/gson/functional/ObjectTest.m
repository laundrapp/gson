//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/ObjectTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/GsonBuilder.h"
#include "com/google/gson/InstanceCreator.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonObject.h"
#include "com/google/gson/JsonParseException.h"
#include "com/google/gson/JsonSerializationContext.h"
#include "com/google/gson/JsonSerializer.h"
#include "com/google/gson/common/TestTypes.h"
#include "com/google/gson/functional/ObjectTest.h"
#include "com/google/gson/reflect/TypeToken.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/reflect/Type.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Date.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/TimeZone.h"
#include "junit/framework/TestCase.h"

@class ComGoogleGsonFunctionalObjectTest_Parent;
@class ComGoogleGsonFunctionalObjectTest_Parent_Child;

@interface ComGoogleGsonFunctionalObjectTest () {
 @public
  ComGoogleGsonGson *gson_;
  JavaUtilTimeZone *oldTimeZone_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest, gson_, ComGoogleGsonGson *)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest, oldTimeZone_, JavaUtilTimeZone *)

@interface ComGoogleGsonFunctionalObjectTest_1 : ComGoogleGsonReflectTypeToken

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_1)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_1_init(ComGoogleGsonFunctionalObjectTest_1 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_1 *new_ComGoogleGsonFunctionalObjectTest_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_1 *create_ComGoogleGsonFunctionalObjectTest_1_init(void);

@interface ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField : NSObject {
 @public
  id<JavaUtilCollection> children_;
}

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField, children_, id<JavaUtilCollection>)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField_init(ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField *new_ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField *create_ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField)

@interface ComGoogleGsonFunctionalObjectTest_2 : ComGoogleGsonCommonTestTypes_ClassWithNoFields

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_2)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_2_init(ComGoogleGsonFunctionalObjectTest_2 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_2 *new_ComGoogleGsonFunctionalObjectTest_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_2 *create_ComGoogleGsonFunctionalObjectTest_2_init(void);

@interface ComGoogleGsonFunctionalObjectTest_3 : NSObject < ComGoogleGsonJsonSerializer >

- (instancetype __nonnull)init;

- (ComGoogleGsonJsonElement *)serializeWithId:(ComGoogleGsonCommonTestTypes_ClassWithNoFields *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_3)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_3_init(ComGoogleGsonFunctionalObjectTest_3 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_3 *new_ComGoogleGsonFunctionalObjectTest_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_3 *create_ComGoogleGsonFunctionalObjectTest_3_init(void);

@interface ComGoogleGsonFunctionalObjectTest_4 : ComGoogleGsonCommonTestTypes_ClassWithNoFields

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_4)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_4_init(ComGoogleGsonFunctionalObjectTest_4 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_4 *new_ComGoogleGsonFunctionalObjectTest_4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_4 *create_ComGoogleGsonFunctionalObjectTest_4_init(void);

@interface ComGoogleGsonFunctionalObjectTest_ClassWithObjectField : NSObject {
 @public
  id member_;
}

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_ClassWithObjectField)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest_ClassWithObjectField, member_, id)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_ClassWithObjectField_init(ComGoogleGsonFunctionalObjectTest_ClassWithObjectField *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ClassWithObjectField *new_ComGoogleGsonFunctionalObjectTest_ClassWithObjectField_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ClassWithObjectField *create_ComGoogleGsonFunctionalObjectTest_ClassWithObjectField_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalObjectTest_ClassWithObjectField)

@interface ComGoogleGsonFunctionalObjectTest_5 : NSObject < ComGoogleGsonInstanceCreator > {
 @public
  ComGoogleGsonFunctionalObjectTest_Parent *val$p_;
}

- (instancetype __nonnull)initWithComGoogleGsonFunctionalObjectTest_Parent:(ComGoogleGsonFunctionalObjectTest_Parent *)capture$0;

- (ComGoogleGsonFunctionalObjectTest_Parent_Child *)createInstanceWithJavaLangReflectType:(id<JavaLangReflectType>)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_5)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_5_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_5 *self, ComGoogleGsonFunctionalObjectTest_Parent *capture$0);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_5 *new_ComGoogleGsonFunctionalObjectTest_5_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_5 *create_ComGoogleGsonFunctionalObjectTest_5_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent *capture$0);

@interface ComGoogleGsonFunctionalObjectTest_Parent : NSObject {
 @public
  jint value1_;
}

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_Parent)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_Parent_init(ComGoogleGsonFunctionalObjectTest_Parent *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_Parent *new_ComGoogleGsonFunctionalObjectTest_Parent_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_Parent *create_ComGoogleGsonFunctionalObjectTest_Parent_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalObjectTest_Parent)

@interface ComGoogleGsonFunctionalObjectTest_Parent_Child : NSObject {
 @public
  jint value2_;
}

- (instancetype __nonnull)initWithComGoogleGsonFunctionalObjectTest_Parent:(ComGoogleGsonFunctionalObjectTest_Parent *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_Parent_Child)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_Parent_Child_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent_Child *self, ComGoogleGsonFunctionalObjectTest_Parent *outer$);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_Parent_Child *new_ComGoogleGsonFunctionalObjectTest_Parent_Child_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_Parent_Child *create_ComGoogleGsonFunctionalObjectTest_Parent_Child_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalObjectTest_Parent_Child)

@interface ComGoogleGsonFunctionalObjectTest_ArrayOfArrays : NSObject {
 @public
  IOSObjectArray *elements_;
}

- (instancetype __nonnull)init;

- (NSString *)getExpectedJson;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_ArrayOfArrays)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest_ArrayOfArrays, elements_, IOSObjectArray *)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_init(ComGoogleGsonFunctionalObjectTest_ArrayOfArrays *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ArrayOfArrays *new_ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ArrayOfArrays *create_ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalObjectTest_ArrayOfArrays)

@interface ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor : NSObject {
 @public
  jint a_;
}

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor_init(ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor *new_ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor *create_ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor)

@interface ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields : NSObject {
 @public
  NSString *a_;
  NSString *b_;
  NSString *c_;
}

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields, a_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields, b_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields, c_, NSString *)

__attribute__((unused)) static void ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields_init(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields *self);

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields *new_ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields *create_ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields)

@interface ComGoogleGsonFunctionalObjectTest_Product () {
 @public
  id<JavaUtilList> attributes_;
  id<JavaUtilList> departments_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest_Product, attributes_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalObjectTest_Product, departments_, id<JavaUtilList>)

@implementation ComGoogleGsonFunctionalObjectTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssignAndConsume(&gson_, new_ComGoogleGsonGson_init());
  JavaUtilTimeZone_setDefaultWithJavaUtilTimeZone_(JavaUtilTimeZone_getTimeZoneWithNSString_(@"America/Los_Angeles"));
  JavaUtilLocale_setDefaultWithJavaUtilLocale_(JreLoadStatic(JavaUtilLocale, US));
}

- (void)tearDown {
  JavaUtilTimeZone_setDefaultWithJavaUtilTimeZone_(oldTimeZone_);
  [super tearDown];
}

- (void)testJsonInSingleQuotesDeserialization {
  NSString *json = @"{'stringValue':'no message','intValue':10,'longValue':20}";
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"no message", ((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(target))->stringValue_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(10, target->intValue_);
  JunitFrameworkTestCase_assertEqualsWithLong_withLong_(20, target->longValue_);
}

- (void)testJsonInMixedQuotesDeserialization {
  NSString *json = @"{\"stringValue\":'no message','intValue':10,'longValue':20}";
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"no message", ((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(target))->stringValue_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(10, target->intValue_);
  JunitFrameworkTestCase_assertEqualsWithLong_withLong_(20, target->longValue_);
}

- (void)testBagOfPrimitivesSerialization {
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *target = create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(10, 20, false, @"stringValue");
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testBagOfPrimitivesDeserialization {
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *src = create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(10, 20, false, @"stringValue");
  NSString *json = [src getExpectedJson];
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(target)) getExpectedJson]);
}

- (void)testBagOfPrimitiveWrappersSerialization {
  ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers *target = create_ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers_initWithJavaLangLong_withJavaLangInteger_withJavaLangBoolean_(JavaLangLong_valueOfWithLong_(10LL), JavaLangInteger_valueOfWithInt_(20), JavaLangBoolean_valueOfWithBoolean_(false));
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testBagOfPrimitiveWrappersDeserialization {
  ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers *target = create_ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers_initWithJavaLangLong_withJavaLangInteger_withJavaLangBoolean_(JavaLangLong_valueOfWithLong_(10LL), JavaLangInteger_valueOfWithInt_(20), JavaLangBoolean_valueOfWithBoolean_(false));
  NSString *jsonString = [target getExpectedJson];
  target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:jsonString withIOSClass:ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(jsonString, [((ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers *) nil_chk(target)) getExpectedJson]);
}

- (void)testClassWithTransientFieldsSerialization {
  ComGoogleGsonCommonTestTypes_ClassWithTransientFields *target = create_ComGoogleGsonCommonTestTypes_ClassWithTransientFields_initWithLong_(1LL);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testClassWithTransientFieldsDeserialization {
  NSString *json = @"{\"longValue\":[1]}";
  ComGoogleGsonCommonTestTypes_ClassWithTransientFields *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_ClassWithTransientFields_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [((ComGoogleGsonCommonTestTypes_ClassWithTransientFields *) nil_chk(target)) getExpectedJson]);
}

- (void)testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored {
  NSString *json = @"{\"transientLongValue\":1,\"longValue\":[1]}";
  ComGoogleGsonCommonTestTypes_ClassWithTransientFields *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_ClassWithTransientFields_class_()];
  JunitFrameworkTestCase_assertFalseWithBoolean_(((ComGoogleGsonCommonTestTypes_ClassWithTransientFields *) nil_chk(target))->transientLongValue_ != 1);
}

- (void)testClassWithNoFieldsSerialization {
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{}", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:create_ComGoogleGsonCommonTestTypes_ClassWithNoFields_init()]);
}

- (void)testClassWithNoFieldsDeserialization {
  NSString *json = @"{}";
  ComGoogleGsonCommonTestTypes_ClassWithNoFields *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_ClassWithNoFields_class_()];
  ComGoogleGsonCommonTestTypes_ClassWithNoFields *expected = create_ComGoogleGsonCommonTestTypes_ClassWithNoFields_init();
  JunitFrameworkTestCase_assertEqualsWithId_withId_(expected, target);
}

- (void)testNestedSerialization {
  ComGoogleGsonCommonTestTypes_Nested *target = create_ComGoogleGsonCommonTestTypes_Nested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(10, 20, false, @"stringValue"), create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(30, 40, true, @"stringValue"));
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testNestedDeserialization {
  NSString *json = @"{\"primitive1\":{\"longValue\":10,\"intValue\":20,\"booleanValue\":false,\"stringValue\":\"stringValue\"},\"primitive2\":{\"longValue\":30,\"intValue\":40,\"booleanValue\":true,\"stringValue\":\"stringValue\"}}";
  ComGoogleGsonCommonTestTypes_Nested *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_Nested_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [((ComGoogleGsonCommonTestTypes_Nested *) nil_chk(target)) getExpectedJson]);
}

- (void)testNullSerialization {
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"null", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithComGoogleGsonJsonElement:nil]);
}

- (void)testEmptyStringDeserialization {
  id object = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"" withIOSClass:NSObject_class_()];
  JunitFrameworkTestCase_assertNullWithId_(object);
}

- (void)testTruncatedDeserialization {
  @try {
    [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"[\"a\", \"b\"," withJavaLangReflectType:[create_ComGoogleGsonFunctionalObjectTest_1_init() getType]];
    JunitFrameworkTestCase_fail();
  }
  @catch (ComGoogleGsonJsonParseException *expected) {
  }
}

- (void)testNullDeserialization {
  NSString *myNullObject = nil;
  id object = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:myNullObject withIOSClass:NSObject_class_()];
  JunitFrameworkTestCase_assertNullWithId_(object);
}

- (void)testNullFieldsSerialization {
  ComGoogleGsonCommonTestTypes_Nested *target = create_ComGoogleGsonCommonTestTypes_Nested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(10, 20, false, @"stringValue"), nil);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testNullFieldsDeserialization {
  NSString *json = @"{\"primitive1\":{\"longValue\":10,\"intValue\":20,\"booleanValue\":false,\"stringValue\":\"stringValue\"}}";
  ComGoogleGsonCommonTestTypes_Nested *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_Nested_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [((ComGoogleGsonCommonTestTypes_Nested *) nil_chk(target)) getExpectedJson]);
}

- (void)testArrayOfObjectsSerialization {
  ComGoogleGsonCommonTestTypes_ArrayOfObjects *target = create_ComGoogleGsonCommonTestTypes_ArrayOfObjects_init();
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testArrayOfObjectsDeserialization {
  NSString *json = [create_ComGoogleGsonCommonTestTypes_ArrayOfObjects_init() getExpectedJson];
  ComGoogleGsonCommonTestTypes_ArrayOfObjects *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_ArrayOfObjects_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [((ComGoogleGsonCommonTestTypes_ArrayOfObjects *) nil_chk(target)) getExpectedJson]);
}

- (void)testArrayOfArraysSerialization {
  ComGoogleGsonFunctionalObjectTest_ArrayOfArrays *target = create_ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_init();
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testArrayOfArraysDeserialization {
  NSString *json = [create_ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_init() getExpectedJson];
  ComGoogleGsonFunctionalObjectTest_ArrayOfArrays *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [((ComGoogleGsonFunctionalObjectTest_ArrayOfArrays *) nil_chk(target)) getExpectedJson]);
}

- (void)testArrayOfObjectsAsFields {
  ComGoogleGsonCommonTestTypes_ClassWithObjects *classWithObjects = create_ComGoogleGsonCommonTestTypes_ClassWithObjects_init();
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *bagOfPrimitives = create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_init();
  NSString *stringValue = @"someStringValueInArray";
  NSString *classWithObjectsJson = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:classWithObjects];
  NSString *bagOfPrimitivesJson = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:bagOfPrimitives];
  ComGoogleGsonCommonTestTypes_ClassWithArray *classWithArray = create_ComGoogleGsonCommonTestTypes_ClassWithArray_initWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ stringValue, classWithObjects, bagOfPrimitives } count:3 type:NSObject_class_()]);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:classWithArray];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:classWithObjectsJson]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:bagOfPrimitivesJson]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:JreStrcat("C$C", '"', stringValue, '"')]);
}

- (void)testNullArraysDeserialization {
  NSString *json = @"{\"array\": null}";
  ComGoogleGsonCommonTestTypes_ClassWithArray *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_ClassWithArray_class_()];
  JunitFrameworkTestCase_assertNullWithId_(((ComGoogleGsonCommonTestTypes_ClassWithArray *) nil_chk(target))->array_);
}

- (void)testNullObjectFieldsDeserialization {
  NSString *json = @"{\"bag\": null}";
  ComGoogleGsonCommonTestTypes_ClassWithObjects *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_ClassWithObjects_class_()];
  JunitFrameworkTestCase_assertNullWithId_(((ComGoogleGsonCommonTestTypes_ClassWithObjects *) nil_chk(target))->bag_);
}

- (void)testEmptyCollectionInAnObjectDeserialization {
  NSString *json = @"{\"children\":[]}";
  ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField_class_()];
  JunitFrameworkTestCase_assertNotNullWithId_(target);
  JunitFrameworkTestCase_assertTrueWithBoolean_([((id<JavaUtilCollection>) nil_chk(((ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField *) nil_chk(target))->children_)) isEmpty]);
}

- (void)testPrimitiveArrayInAnObjectDeserialization {
  NSString *json = @"{\"longArray\":[0,1,2,3,4,5,6,7,8,9]}";
  ComGoogleGsonCommonTestTypes_PrimitiveArray *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_PrimitiveArray_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [((ComGoogleGsonCommonTestTypes_PrimitiveArray *) nil_chk(target)) getExpectedJson]);
}

- (void)testNullPrimitiveFieldsDeserialization {
  NSString *json = @"{\"longValue\":null}";
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()];
  JunitFrameworkTestCase_assertEqualsWithLong_withLong_(ComGoogleGsonCommonTestTypes_BagOfPrimitives_DEFAULT_VALUE, ((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(target))->longValue_);
}

- (void)testEmptyCollectionInAnObjectSerialization {
  ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField *target = create_ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField_init();
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"children\":[]}", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testPrivateNoArgConstructorDeserialization {
  ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"a\":20}" withIOSClass:ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor_class_()];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(20, ((ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor *) nil_chk(target))->a_);
}

- (void)testAnonymousLocalClassesSerialization {
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"null", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:create_ComGoogleGsonFunctionalObjectTest_2_init()]);
}

- (void)testAnonymousLocalClassesCustomSerialization {
  JreStrongAssign(&gson_, [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeHierarchyAdapterWithIOSClass:ComGoogleGsonCommonTestTypes_ClassWithNoFields_class_() withId:create_ComGoogleGsonFunctionalObjectTest_3_init()])) create]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"null", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:create_ComGoogleGsonFunctionalObjectTest_4_init()]);
}

- (void)testPrimitiveArrayFieldSerialization {
  ComGoogleGsonCommonTestTypes_PrimitiveArray *target = create_ComGoogleGsonCommonTestTypes_PrimitiveArray_initWithLongArray_([IOSLongArray arrayWithLongs:(jlong[]){ 1LL, 2LL, 3LL } count:3]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_([target getExpectedJson], [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testClassWithObjectFieldSerialization {
  ComGoogleGsonFunctionalObjectTest_ClassWithObjectField *obj = create_ComGoogleGsonFunctionalObjectTest_ClassWithObjectField_init();
  JreStrongAssign(&obj->member_, @"abc");
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:obj];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"abc"]);
}

- (void)testInnerClassSerialization {
  ComGoogleGsonFunctionalObjectTest_Parent *p = create_ComGoogleGsonFunctionalObjectTest_Parent_init();
  ComGoogleGsonFunctionalObjectTest_Parent_Child *c = create_ComGoogleGsonFunctionalObjectTest_Parent_Child_initWithComGoogleGsonFunctionalObjectTest_Parent_(p);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:c];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"value2"]);
  JunitFrameworkTestCase_assertFalseWithBoolean_([json java_contains:@"value1"]);
}

- (void)testInnerClassDeserialization {
  ComGoogleGsonFunctionalObjectTest_Parent *p = create_ComGoogleGsonFunctionalObjectTest_Parent_init();
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:ComGoogleGsonFunctionalObjectTest_Parent_Child_class_() withId:create_ComGoogleGsonFunctionalObjectTest_5_initWithComGoogleGsonFunctionalObjectTest_Parent_(p)])) create];
  NSString *json = @"{'value2':3}";
  ComGoogleGsonFunctionalObjectTest_Parent_Child *c = [((ComGoogleGsonGson *) nil_chk(gson)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalObjectTest_Parent_Child_class_()];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(3, ((ComGoogleGsonFunctionalObjectTest_Parent_Child *) nil_chk(c))->value2_);
}

- (void)testObjectFieldNamesWithoutQuotesDeserialization {
  NSString *json = @"{longValue:1,'booleanValue':true,\"stringValue\":'bar'}";
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()];
  JunitFrameworkTestCase_assertEqualsWithLong_withLong_(1, ((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(bag))->longValue_);
  JunitFrameworkTestCase_assertTrueWithBoolean_(bag->booleanValue_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"bar", bag->stringValue_);
}

- (void)testStringFieldWithNumberValueDeserialization {
  NSString *json = @"{\"stringValue\":1}";
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"1", ((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(bag))->stringValue_);
  json = @"{\"stringValue\":1.5E+6}";
  bag = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"1.5E+6", ((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(bag))->stringValue_);
  json = @"{\"stringValue\":true}";
  bag = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"true", ((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(bag))->stringValue_);
}

- (void)testStringFieldWithEmptyValueSerialization {
  ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields *target = create_ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields_init();
  JreStrongAssign(&target->a_, @"5794749");
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"\"a\":\"5794749\""]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"\"b\":\"\""]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"\"c\":\"\""]);
}

- (void)testStringFieldWithEmptyValueDeserialization {
  NSString *json = @"{a:\"5794749\",b:\"\",c:\"\"}";
  ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields *target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"5794749", ((ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields *) nil_chk(target))->a_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"", target->b_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"", target->c_);
}

- (void)testJsonObjectSerialization {
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() serializeNulls])) create];
  ComGoogleGsonJsonObject *obj = create_ComGoogleGsonJsonObject_init();
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithComGoogleGsonJsonElement:obj];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{}", json);
}

- (void)testSingletonLists {
  ComGoogleGsonGson *gson = create_ComGoogleGsonGson_init();
  ComGoogleGsonFunctionalObjectTest_Product *product = create_ComGoogleGsonFunctionalObjectTest_Product_init();
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"attributes\":[],\"departments\":[]}", [gson toJsonWithId:product]);
  [gson fromJsonWithNSString:[gson toJsonWithId:product] withIOSClass:ComGoogleGsonFunctionalObjectTest_Product_class_()];
  [((id<JavaUtilList>) nil_chk(product->departments_)) addWithId:create_ComGoogleGsonFunctionalObjectTest_Department_init()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"attributes\":[],\"departments\":[{\"name\":\"abc\",\"code\":\"123\"}]}", [gson toJsonWithId:product]);
  [gson fromJsonWithNSString:[gson toJsonWithId:product] withIOSClass:ComGoogleGsonFunctionalObjectTest_Product_class_()];
  [((id<JavaUtilList>) nil_chk(product->attributes_)) addWithId:@"456"];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"attributes\":[\"456\"],\"departments\":[{\"name\":\"abc\",\"code\":\"123\"}]}", [gson toJsonWithId:product]);
  [gson fromJsonWithNSString:[gson toJsonWithId:product] withIOSClass:ComGoogleGsonFunctionalObjectTest_Product_class_()];
}

- (void)testDateAsMapObjectField {
  ComGoogleGsonFunctionalObjectTest_HasObjectMap *a = create_ComGoogleGsonFunctionalObjectTest_HasObjectMap_initWithComGoogleGsonFunctionalObjectTest_(self);
  [((id<JavaUtilMap>) nil_chk(a->map_)) putWithId:@"date" withId:create_JavaUtilDate_initWithLong_(0)];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"map\":{\"date\":\"Dec 31, 1969 4:00:00 PM\"}}", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:a]);
}

- (void)dealloc {
  RELEASE_(gson_);
  RELEASE_(oldTimeZone_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(tearDown);
  methods[3].selector = @selector(testJsonInSingleQuotesDeserialization);
  methods[4].selector = @selector(testJsonInMixedQuotesDeserialization);
  methods[5].selector = @selector(testBagOfPrimitivesSerialization);
  methods[6].selector = @selector(testBagOfPrimitivesDeserialization);
  methods[7].selector = @selector(testBagOfPrimitiveWrappersSerialization);
  methods[8].selector = @selector(testBagOfPrimitiveWrappersDeserialization);
  methods[9].selector = @selector(testClassWithTransientFieldsSerialization);
  methods[10].selector = @selector(testClassWithTransientFieldsDeserialization);
  methods[11].selector = @selector(testClassWithTransientFieldsDeserializationTransientFieldsPassedInJsonAreIgnored);
  methods[12].selector = @selector(testClassWithNoFieldsSerialization);
  methods[13].selector = @selector(testClassWithNoFieldsDeserialization);
  methods[14].selector = @selector(testNestedSerialization);
  methods[15].selector = @selector(testNestedDeserialization);
  methods[16].selector = @selector(testNullSerialization);
  methods[17].selector = @selector(testEmptyStringDeserialization);
  methods[18].selector = @selector(testTruncatedDeserialization);
  methods[19].selector = @selector(testNullDeserialization);
  methods[20].selector = @selector(testNullFieldsSerialization);
  methods[21].selector = @selector(testNullFieldsDeserialization);
  methods[22].selector = @selector(testArrayOfObjectsSerialization);
  methods[23].selector = @selector(testArrayOfObjectsDeserialization);
  methods[24].selector = @selector(testArrayOfArraysSerialization);
  methods[25].selector = @selector(testArrayOfArraysDeserialization);
  methods[26].selector = @selector(testArrayOfObjectsAsFields);
  methods[27].selector = @selector(testNullArraysDeserialization);
  methods[28].selector = @selector(testNullObjectFieldsDeserialization);
  methods[29].selector = @selector(testEmptyCollectionInAnObjectDeserialization);
  methods[30].selector = @selector(testPrimitiveArrayInAnObjectDeserialization);
  methods[31].selector = @selector(testNullPrimitiveFieldsDeserialization);
  methods[32].selector = @selector(testEmptyCollectionInAnObjectSerialization);
  methods[33].selector = @selector(testPrivateNoArgConstructorDeserialization);
  methods[34].selector = @selector(testAnonymousLocalClassesSerialization);
  methods[35].selector = @selector(testAnonymousLocalClassesCustomSerialization);
  methods[36].selector = @selector(testPrimitiveArrayFieldSerialization);
  methods[37].selector = @selector(testClassWithObjectFieldSerialization);
  methods[38].selector = @selector(testInnerClassSerialization);
  methods[39].selector = @selector(testInnerClassDeserialization);
  methods[40].selector = @selector(testObjectFieldNamesWithoutQuotesDeserialization);
  methods[41].selector = @selector(testStringFieldWithNumberValueDeserialization);
  methods[42].selector = @selector(testStringFieldWithEmptyValueSerialization);
  methods[43].selector = @selector(testStringFieldWithEmptyValueDeserialization);
  methods[44].selector = @selector(testJsonObjectSerialization);
  methods[45].selector = @selector(testSingletonLists);
  methods[46].selector = @selector(testDateAsMapObjectField);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "oldTimeZone_", "LJavaUtilTimeZone;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "LComGoogleGsonFunctionalObjectTest_ClassWithCollectionField;LComGoogleGsonFunctionalObjectTest_ClassWithObjectField;LComGoogleGsonFunctionalObjectTest_Parent;LComGoogleGsonFunctionalObjectTest_ArrayOfArrays;LComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor;LComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields;LComGoogleGsonFunctionalObjectTest_HasObjectMap;LComGoogleGsonFunctionalObjectTest_Department;LComGoogleGsonFunctionalObjectTest_Product;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest = { "ObjectTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1, 47, 2, -1, 1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest;
}

@end

void ComGoogleGsonFunctionalObjectTest_init(ComGoogleGsonFunctionalObjectTest *self) {
  JunitFrameworkTestCase_init(self);
  JreStrongAssign(&self->oldTimeZone_, JavaUtilTimeZone_getDefault());
}

ComGoogleGsonFunctionalObjectTest *new_ComGoogleGsonFunctionalObjectTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest, init)
}

ComGoogleGsonFunctionalObjectTest *create_ComGoogleGsonFunctionalObjectTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest)

@implementation ComGoogleGsonFunctionalObjectTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest;", "testTruncatedDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_1 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_1;
}

@end

void ComGoogleGsonFunctionalObjectTest_1_init(ComGoogleGsonFunctionalObjectTest_1 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalObjectTest_1 *new_ComGoogleGsonFunctionalObjectTest_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_1, init)
}

ComGoogleGsonFunctionalObjectTest_1 *create_ComGoogleGsonFunctionalObjectTest_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_1, init)
}

@implementation ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(children_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "children_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x0, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/Collection<Ljava/lang/String;>;", "LComGoogleGsonFunctionalObjectTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField = { "ClassWithCollectionField", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField;
}

@end

void ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField_init(ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->children_, new_JavaUtilArrayList_init());
}

ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField *new_ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField, init)
}

ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField *create_ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_ClassWithCollectionField)

@implementation ComGoogleGsonFunctionalObjectTest_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest;", "testAnonymousLocalClassesSerialization" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_2 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_2;
}

@end

void ComGoogleGsonFunctionalObjectTest_2_init(ComGoogleGsonFunctionalObjectTest_2 *self) {
  ComGoogleGsonCommonTestTypes_ClassWithNoFields_init(self);
}

ComGoogleGsonFunctionalObjectTest_2 *new_ComGoogleGsonFunctionalObjectTest_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_2, init)
}

ComGoogleGsonFunctionalObjectTest_2 *create_ComGoogleGsonFunctionalObjectTest_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_2, init)
}

@implementation ComGoogleGsonFunctionalObjectTest_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)serializeWithId:(ComGoogleGsonCommonTestTypes_ClassWithNoFields *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  return create_ComGoogleGsonJsonObject_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "serialize", "LComGoogleGsonCommonTestTypes_ClassWithNoFields;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "LComGoogleGsonFunctionalObjectTest;", "testAnonymousLocalClassesCustomSerialization", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Lcom/google/gson/common/TestTypes$ClassWithNoFields;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_3 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, 3, 4, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_3;
}

@end

void ComGoogleGsonFunctionalObjectTest_3_init(ComGoogleGsonFunctionalObjectTest_3 *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalObjectTest_3 *new_ComGoogleGsonFunctionalObjectTest_3_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_3, init)
}

ComGoogleGsonFunctionalObjectTest_3 *create_ComGoogleGsonFunctionalObjectTest_3_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_3, init)
}

@implementation ComGoogleGsonFunctionalObjectTest_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest;", "testAnonymousLocalClassesCustomSerialization" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_4 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_4;
}

@end

void ComGoogleGsonFunctionalObjectTest_4_init(ComGoogleGsonFunctionalObjectTest_4 *self) {
  ComGoogleGsonCommonTestTypes_ClassWithNoFields_init(self);
}

ComGoogleGsonFunctionalObjectTest_4 *new_ComGoogleGsonFunctionalObjectTest_4_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_4, init)
}

ComGoogleGsonFunctionalObjectTest_4 *create_ComGoogleGsonFunctionalObjectTest_4_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_4, init)
}

@implementation ComGoogleGsonFunctionalObjectTest_ClassWithObjectField

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_ClassWithObjectField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(member_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "member_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_ClassWithObjectField = { "ClassWithObjectField", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_ClassWithObjectField;
}

@end

void ComGoogleGsonFunctionalObjectTest_ClassWithObjectField_init(ComGoogleGsonFunctionalObjectTest_ClassWithObjectField *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalObjectTest_ClassWithObjectField *new_ComGoogleGsonFunctionalObjectTest_ClassWithObjectField_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_ClassWithObjectField, init)
}

ComGoogleGsonFunctionalObjectTest_ClassWithObjectField *create_ComGoogleGsonFunctionalObjectTest_ClassWithObjectField_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_ClassWithObjectField, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_ClassWithObjectField)

@implementation ComGoogleGsonFunctionalObjectTest_5

- (instancetype __nonnull)initWithComGoogleGsonFunctionalObjectTest_Parent:(ComGoogleGsonFunctionalObjectTest_Parent *)capture$0 {
  ComGoogleGsonFunctionalObjectTest_5_initWithComGoogleGsonFunctionalObjectTest_Parent_(self, capture$0);
  return self;
}

- (ComGoogleGsonFunctionalObjectTest_Parent_Child *)createInstanceWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return create_ComGoogleGsonFunctionalObjectTest_Parent_Child_initWithComGoogleGsonFunctionalObjectTest_Parent_(nil_chk(val$p_));
}

- (void)dealloc {
  RELEASE_(val$p_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonFunctionalObjectTest_Parent_Child;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonFunctionalObjectTest_Parent:);
  methods[1].selector = @selector(createInstanceWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$p_", "LComGoogleGsonFunctionalObjectTest_Parent;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "createInstance", "LJavaLangReflectType;", "LComGoogleGsonFunctionalObjectTest;", "testInnerClassDeserialization", "Ljava/lang/Object;Lcom/google/gson/InstanceCreator<Lcom/google/gson/functional/ObjectTest$Parent$Child;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_5 = { "", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, 4, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_5;
}

@end

void ComGoogleGsonFunctionalObjectTest_5_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_5 *self, ComGoogleGsonFunctionalObjectTest_Parent *capture$0) {
  JreStrongAssign(&self->val$p_, capture$0);
  NSObject_init(self);
}

ComGoogleGsonFunctionalObjectTest_5 *new_ComGoogleGsonFunctionalObjectTest_5_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent *capture$0) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_5, initWithComGoogleGsonFunctionalObjectTest_Parent_, capture$0)
}

ComGoogleGsonFunctionalObjectTest_5 *create_ComGoogleGsonFunctionalObjectTest_5_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent *capture$0) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_5, initWithComGoogleGsonFunctionalObjectTest_Parent_, capture$0)
}

@implementation ComGoogleGsonFunctionalObjectTest_Parent

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_Parent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value1_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest;", "LComGoogleGsonFunctionalObjectTest_Parent_Child;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_Parent = { "Parent", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 0, 1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_Parent;
}

@end

void ComGoogleGsonFunctionalObjectTest_Parent_init(ComGoogleGsonFunctionalObjectTest_Parent *self) {
  NSObject_init(self);
  self->value1_ = 1;
}

ComGoogleGsonFunctionalObjectTest_Parent *new_ComGoogleGsonFunctionalObjectTest_Parent_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_Parent, init)
}

ComGoogleGsonFunctionalObjectTest_Parent *create_ComGoogleGsonFunctionalObjectTest_Parent_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_Parent, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_Parent)

@implementation ComGoogleGsonFunctionalObjectTest_Parent_Child

- (instancetype __nonnull)initWithComGoogleGsonFunctionalObjectTest_Parent:(ComGoogleGsonFunctionalObjectTest_Parent *)outer$ {
  ComGoogleGsonFunctionalObjectTest_Parent_Child_initWithComGoogleGsonFunctionalObjectTest_Parent_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonFunctionalObjectTest_Parent:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value2_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest_Parent;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_Parent_Child = { "Child", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x2, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_Parent_Child;
}

@end

void ComGoogleGsonFunctionalObjectTest_Parent_Child_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent_Child *self, ComGoogleGsonFunctionalObjectTest_Parent *outer$) {
  NSObject_init(self);
  self->value2_ = 2;
}

ComGoogleGsonFunctionalObjectTest_Parent_Child *new_ComGoogleGsonFunctionalObjectTest_Parent_Child_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_Parent_Child, initWithComGoogleGsonFunctionalObjectTest_Parent_, outer$)
}

ComGoogleGsonFunctionalObjectTest_Parent_Child *create_ComGoogleGsonFunctionalObjectTest_Parent_Child_initWithComGoogleGsonFunctionalObjectTest_Parent_(ComGoogleGsonFunctionalObjectTest_Parent *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_Parent_Child, initWithComGoogleGsonFunctionalObjectTest_Parent_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_Parent_Child)

@implementation ComGoogleGsonFunctionalObjectTest_ArrayOfArrays

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getExpectedJson {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_(@"{\"elements\":[");
  jboolean first = true;
  {
    IOSObjectArray *a__ = elements_;
    IOSObjectArray * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSObjectArray * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSObjectArray *row = *b__++;
      if (first) {
        first = false;
      }
      else {
        [sb appendWithNSString:@","];
      }
      jboolean firstOfRow = true;
      [sb appendWithNSString:@"["];
      {
        IOSObjectArray *a__ = row;
        ComGoogleGsonCommonTestTypes_BagOfPrimitives * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        ComGoogleGsonCommonTestTypes_BagOfPrimitives * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          ComGoogleGsonCommonTestTypes_BagOfPrimitives *element = *b__++;
          if (firstOfRow) {
            firstOfRow = false;
          }
          else {
            [sb appendWithNSString:@","];
          }
          [sb appendWithNSString:[((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(element)) getExpectedJson]];
        }
      }
      [sb appendWithNSString:@"]"];
    }
  }
  [sb appendWithNSString:@"]}"];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(elements_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getExpectedJson);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "elements_", "[[LComGoogleGsonCommonTestTypes_BagOfPrimitives;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_ArrayOfArrays = { "ArrayOfArrays", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 2, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_ArrayOfArrays;
}

@end

void ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_init(ComGoogleGsonFunctionalObjectTest_ArrayOfArrays *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->elements_, [IOSObjectArray newArrayWithDimensions:2 lengths:(jint[]){ 3, 2 } type:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()]);
  for (jint i = 0; i < self->elements_->size_; ++i) {
    IOSObjectArray *row = IOSObjectArray_Get(self->elements_, i);
    for (jint j = 0; j < ((IOSObjectArray *) nil_chk(row))->size_; ++j) {
      IOSObjectArray_SetAndConsume(row, j, new_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(i + j, i * j, false, JreStrcat("ICI", i, '_', j)));
    }
  }
}

ComGoogleGsonFunctionalObjectTest_ArrayOfArrays *new_ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_ArrayOfArrays, init)
}

ComGoogleGsonFunctionalObjectTest_ArrayOfArrays *create_ComGoogleGsonFunctionalObjectTest_ArrayOfArrays_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_ArrayOfArrays, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_ArrayOfArrays)

@implementation ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "a_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor = { "ClassWithPrivateNoArgsConstructor", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor;
}

@end

void ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor_init(ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor *self) {
  NSObject_init(self);
  self->a_ = 10;
}

ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor *new_ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor, init)
}

ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor *create_ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_ClassWithPrivateNoArgsConstructor)

@implementation ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(a_);
  RELEASE_(b_);
  RELEASE_(c_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "a_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "b_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "c_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields = { "ClassWithEmptyStringFields", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 3, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields;
}

@end

void ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields_init(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields *self) {
  NSObject_init(self);
  JreStrongAssign(&self->a_, @"");
  JreStrongAssign(&self->b_, @"");
  JreStrongAssign(&self->c_, @"");
}

ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields *new_ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields, init)
}

ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields *create_ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_ClassWithEmptyStringFields)

@implementation ComGoogleGsonFunctionalObjectTest_HasObjectMap

- (instancetype __nonnull)initWithComGoogleGsonFunctionalObjectTest:(ComGoogleGsonFunctionalObjectTest *)outer$ {
  ComGoogleGsonFunctionalObjectTest_HasObjectMap_initWithComGoogleGsonFunctionalObjectTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonFunctionalObjectTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "map_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x0, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;", "LComGoogleGsonFunctionalObjectTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_HasObjectMap = { "HasObjectMap", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_HasObjectMap;
}

@end

void ComGoogleGsonFunctionalObjectTest_HasObjectMap_initWithComGoogleGsonFunctionalObjectTest_(ComGoogleGsonFunctionalObjectTest_HasObjectMap *self, ComGoogleGsonFunctionalObjectTest *outer$) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->map_, new_JavaUtilHashMap_init());
}

ComGoogleGsonFunctionalObjectTest_HasObjectMap *new_ComGoogleGsonFunctionalObjectTest_HasObjectMap_initWithComGoogleGsonFunctionalObjectTest_(ComGoogleGsonFunctionalObjectTest *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_HasObjectMap, initWithComGoogleGsonFunctionalObjectTest_, outer$)
}

ComGoogleGsonFunctionalObjectTest_HasObjectMap *create_ComGoogleGsonFunctionalObjectTest_HasObjectMap_initWithComGoogleGsonFunctionalObjectTest_(ComGoogleGsonFunctionalObjectTest *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_HasObjectMap, initWithComGoogleGsonFunctionalObjectTest_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_HasObjectMap)

@implementation ComGoogleGsonFunctionalObjectTest_Department

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_Department_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(code_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "code_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalObjectTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_Department = { "Department", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x18, 1, 2, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_Department;
}

@end

void ComGoogleGsonFunctionalObjectTest_Department_init(ComGoogleGsonFunctionalObjectTest_Department *self) {
  NSObject_init(self);
  JreStrongAssign(&self->name_, @"abc");
  JreStrongAssign(&self->code_, @"123");
}

ComGoogleGsonFunctionalObjectTest_Department *new_ComGoogleGsonFunctionalObjectTest_Department_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_Department, init)
}

ComGoogleGsonFunctionalObjectTest_Department *create_ComGoogleGsonFunctionalObjectTest_Department_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_Department, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_Department)

@implementation ComGoogleGsonFunctionalObjectTest_Product

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalObjectTest_Product_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(attributes_);
  RELEASE_(departments_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "attributes_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 0, -1 },
    { "departments_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/List<Ljava/lang/String;>;", "Ljava/util/List<Lcom/google/gson/functional/ObjectTest$Department;>;", "LComGoogleGsonFunctionalObjectTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalObjectTest_Product = { "Product", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x18, 1, 2, 2, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalObjectTest_Product;
}

@end

void ComGoogleGsonFunctionalObjectTest_Product_init(ComGoogleGsonFunctionalObjectTest_Product *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->attributes_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->departments_, new_JavaUtilArrayList_init());
}

ComGoogleGsonFunctionalObjectTest_Product *new_ComGoogleGsonFunctionalObjectTest_Product_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalObjectTest_Product, init)
}

ComGoogleGsonFunctionalObjectTest_Product *create_ComGoogleGsonFunctionalObjectTest_Product_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalObjectTest_Product, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalObjectTest_Product)
