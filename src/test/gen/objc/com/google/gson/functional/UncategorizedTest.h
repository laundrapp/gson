//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/UncategorizedTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalUncategorizedTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalUncategorizedTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalUncategorizedTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalUncategorizedTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalUncategorizedTest

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonFunctionalUncategorizedTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalUncategorizedTest || defined(INCLUDE_ComGoogleGsonFunctionalUncategorizedTest))
#define ComGoogleGsonFunctionalUncategorizedTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Functional tests that do not fall neatly into any of the existing classification.
 @author Inderjeet Singh
 @author Joel Leitch
 */
@interface ComGoogleGsonFunctionalUncategorizedTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype __nonnull)init;

- (void)testGsonInstanceReusableForSerializationAndDeserialization;

- (void)testInvalidJsonDeserializationFails;

- (void)testObjectEqualButNotSameSerialization;

/*!
 @brief This test ensures that a custom deserializer is able to return a derived class instance for a
  base class object.For a motivation for this test, see Issue 37 and
  http://groups.google.com/group/google-gson/browse_thread/thread/677d56e9976d7761
 */
- (void)testReturningDerivedClassesDuringDeserialization;

- (void)testStaticFieldsAreNotSerialized;

/*!
 @brief Test that trailing whitespace is ignored.
 http://code.google.com/p/google-gson/issues/detail?id=302
 */
- (void)testTrailingWhitespace;

#pragma mark Protected

- (void)setUp;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalUncategorizedTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalUncategorizedTest_init(ComGoogleGsonFunctionalUncategorizedTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalUncategorizedTest *new_ComGoogleGsonFunctionalUncategorizedTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalUncategorizedTest *create_ComGoogleGsonFunctionalUncategorizedTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalUncategorizedTest)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalUncategorizedTest")
