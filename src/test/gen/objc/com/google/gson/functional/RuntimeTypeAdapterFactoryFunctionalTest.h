//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/RuntimeTypeAdapterFactoryFunctionalTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest || defined(INCLUDE_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest))
#define ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Functional tests for the RuntimeTypeAdapterFactory feature in extras.
 */
@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype)init;

/*!
 @brief This test also ensures that <code>TypeAdapterFactory</code> registered through <code>JsonAdapter</code>
  work correctly for <code>TypeToken)</code>.
 */
- (void)testSubclassesAutomaticallySerialzed;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_init(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest)

#endif

#if !defined (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_) && (INCLUDE_ALL_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest || defined(INCLUDE_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape))
#define ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_

@class ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType;

@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape : NSObject {
 @public
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *type_;
}

#pragma mark Package-Private

- (instancetype)initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType:(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *)type;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape, type_, ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape *self, ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *type);

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape_initWithComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *type);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_Shape)

#endif

#if !defined (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_) && (INCLUDE_ALL_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest || defined(INCLUDE_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory))
#define ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_

#define RESTRICT_ComGoogleGsonTypeAdapterFactory 1
#define INCLUDE_ComGoogleGsonTypeAdapterFactory 1
#include "com/google/gson/TypeAdapterFactory.h"

@class ComGoogleGsonGson;
@class ComGoogleGsonReflectTypeToken;
@class ComGoogleGsonTypeAdapter;
@class IOSClass;

@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory : NSObject < ComGoogleGsonTypeAdapterFactory >

#pragma mark Public

- (ComGoogleGsonTypeAdapter *)createWithComGoogleGsonGson:(ComGoogleGsonGson *)gson
                        withComGoogleGsonReflectTypeToken:(ComGoogleGsonReflectTypeToken *)type;

/*!
 @brief Creates a new runtime type adapter for <code>baseType</code> using <code>"type"</code> as
  the type field name.
 */
+ (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)ofWithIOSClass:(IOSClass *)baseType;

/*!
 @brief Creates a new runtime type adapter using for <code>baseType</code> using <code>typeFieldName</code>
  as the type field name.Type field names are case sensitive.
 */
+ (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)ofWithIOSClass:(IOSClass *)baseType
                                                                                                withNSString:(NSString *)typeFieldName;

/*!
 @brief Registers <code>type</code> identified by its <code>name</code>
 .Labels are case sensitive.
 @throw IllegalArgumentExceptionif either <code>type</code> or its simple name
      have already been registered on this type adapter.
 */
- (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)registerSubtypeWithIOSClass:(IOSClass *)type;

/*!
 @brief Registers <code>type</code> identified by <code>label</code>.Labels are case
  sensitive.
 @throw IllegalArgumentExceptionif either <code>type</code> or <code>label</code>
      have already been registered on this type adapter.
 */
- (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *)registerSubtypeWithIOSClass:(IOSClass *)type
                                                                                                             withNSString:(NSString *)label;

#pragma mark Protected

- (instancetype)initWithIOSClass:(IOSClass *)baseType
                    withNSString:(NSString *)typeFieldName;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *self, IOSClass *baseType, NSString *typeFieldName);

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *new_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(IOSClass *baseType, NSString *typeFieldName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *create_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_initWithIOSClass_withNSString_(IOSClass *baseType, NSString *typeFieldName);

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_ofWithIOSClass_withNSString_(IOSClass *baseType, NSString *typeFieldName);

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory_ofWithIOSClass_(IOSClass *baseType);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_RuntimeTypeAdapterFactory)

#endif

#if !defined (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_) && (INCLUDE_ALL_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest || defined(INCLUDE_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType))
#define ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_Enum) {
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_Enum_SQUARE = 0,
  ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_Enum_CIRCLE = 1,
};

@interface ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType : JavaLangEnum

#pragma mark Public

+ (ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_values_[];

inline ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_get_SQUARE(void);
J2OBJC_ENUM_CONSTANT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType, SQUARE)

inline ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_get_CIRCLE(void);
J2OBJC_ENUM_CONSTANT(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType, CIRCLE)

FOUNDATION_EXPORT IOSObjectArray *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_values(void);

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType *ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest_ShapeType)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalRuntimeTypeAdapterFactoryFunctionalTest")
