//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/CollectionTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/GsonBuilder.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonPrimitive.h"
#include "com/google/gson/JsonSerializationContext.h"
#include "com/google/gson/JsonSerializer.h"
#include "com/google/gson/common/MoreAsserts.h"
#include "com/google/gson/common/TestTypes.h"
#include "com/google/gson/functional/CollectionTest.h"
#include "com/google/gson/reflect/TypeToken.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/reflect/Type.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Queue.h"
#include "java/util/Set.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonFunctionalCollectionTest () {
 @public
  ComGoogleGsonGson *gson_;
}

+ (IOSIntArray *)toIntArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalCollectionTest, gson_, ComGoogleGsonGson *)

__attribute__((unused)) static IOSIntArray *ComGoogleGsonFunctionalCollectionTest_toIntArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection);

@interface ComGoogleGsonFunctionalCollectionTest_1 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_1)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_1_init(ComGoogleGsonFunctionalCollectionTest_1 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_1 *new_ComGoogleGsonFunctionalCollectionTest_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_1 *create_ComGoogleGsonFunctionalCollectionTest_1_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_2 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_2)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_2_init(ComGoogleGsonFunctionalCollectionTest_2 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_2 *new_ComGoogleGsonFunctionalCollectionTest_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_2 *create_ComGoogleGsonFunctionalCollectionTest_2_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_3 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_3)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_3_init(ComGoogleGsonFunctionalCollectionTest_3 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_3 *new_ComGoogleGsonFunctionalCollectionTest_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_3 *create_ComGoogleGsonFunctionalCollectionTest_3_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_4 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_4)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_4_init(ComGoogleGsonFunctionalCollectionTest_4 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_4 *new_ComGoogleGsonFunctionalCollectionTest_4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_4 *create_ComGoogleGsonFunctionalCollectionTest_4_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_5 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_5)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_5_init(ComGoogleGsonFunctionalCollectionTest_5 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_5 *new_ComGoogleGsonFunctionalCollectionTest_5_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_5 *create_ComGoogleGsonFunctionalCollectionTest_5_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_6 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_6)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_6_init(ComGoogleGsonFunctionalCollectionTest_6 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_6 *new_ComGoogleGsonFunctionalCollectionTest_6_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_6 *create_ComGoogleGsonFunctionalCollectionTest_6_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_7 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_7)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_7_init(ComGoogleGsonFunctionalCollectionTest_7 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_7 *new_ComGoogleGsonFunctionalCollectionTest_7_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_7 *create_ComGoogleGsonFunctionalCollectionTest_7_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_8 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_8)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_8_init(ComGoogleGsonFunctionalCollectionTest_8 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_8 *new_ComGoogleGsonFunctionalCollectionTest_8_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_8 *create_ComGoogleGsonFunctionalCollectionTest_8_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_9 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_9)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_9_init(ComGoogleGsonFunctionalCollectionTest_9 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_9 *new_ComGoogleGsonFunctionalCollectionTest_9_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_9 *create_ComGoogleGsonFunctionalCollectionTest_9_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_10 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_10)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_10_init(ComGoogleGsonFunctionalCollectionTest_10 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_10 *new_ComGoogleGsonFunctionalCollectionTest_10_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_10 *create_ComGoogleGsonFunctionalCollectionTest_10_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_11 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_11)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_11_init(ComGoogleGsonFunctionalCollectionTest_11 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_11 *new_ComGoogleGsonFunctionalCollectionTest_11_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_11 *create_ComGoogleGsonFunctionalCollectionTest_11_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_12 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_12)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_12_init(ComGoogleGsonFunctionalCollectionTest_12 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_12 *new_ComGoogleGsonFunctionalCollectionTest_12_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_12 *create_ComGoogleGsonFunctionalCollectionTest_12_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_13 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_13)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_13_init(ComGoogleGsonFunctionalCollectionTest_13 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_13 *new_ComGoogleGsonFunctionalCollectionTest_13_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_13 *create_ComGoogleGsonFunctionalCollectionTest_13_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_14 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_14)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_14_init(ComGoogleGsonFunctionalCollectionTest_14 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_14 *new_ComGoogleGsonFunctionalCollectionTest_14_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_14 *create_ComGoogleGsonFunctionalCollectionTest_14_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_15 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_15)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_15_init(ComGoogleGsonFunctionalCollectionTest_15 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_15 *new_ComGoogleGsonFunctionalCollectionTest_15_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_15 *create_ComGoogleGsonFunctionalCollectionTest_15_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_16 : NSObject < ComGoogleGsonJsonSerializer >

- (instancetype)init;

- (ComGoogleGsonJsonElement *)serializeWithId:(id<JavaUtilList>)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_16)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_16_init(ComGoogleGsonFunctionalCollectionTest_16 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_16 *new_ComGoogleGsonFunctionalCollectionTest_16_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_16 *create_ComGoogleGsonFunctionalCollectionTest_16_init(void);

@interface ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection : NSObject {
 @public
  id<JavaUtilCollection> collection_;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (id<JavaUtilCollection>)getCollection;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection, collection_, id<JavaUtilCollection>)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection_initWithJavaUtilCollection_(ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection *self, id<JavaUtilCollection> collection);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection *new_ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection *create_ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection_initWithJavaUtilCollection_(id<JavaUtilCollection> collection);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection)

@interface ComGoogleGsonFunctionalCollectionTest_Entry : NSObject {
 @public
  jint value_;
}

- (instancetype)initWithInt:(jint)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_Entry)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_Entry_initWithInt_(ComGoogleGsonFunctionalCollectionTest_Entry *self, jint value);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_Entry *new_ComGoogleGsonFunctionalCollectionTest_Entry_initWithInt_(jint value) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_Entry *create_ComGoogleGsonFunctionalCollectionTest_Entry_initWithInt_(jint value);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalCollectionTest_Entry)

@interface ComGoogleGsonFunctionalCollectionTest_17 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalCollectionTest_17)

__attribute__((unused)) static void ComGoogleGsonFunctionalCollectionTest_17_init(ComGoogleGsonFunctionalCollectionTest_17 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_17 *new_ComGoogleGsonFunctionalCollectionTest_17_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalCollectionTest_17 *create_ComGoogleGsonFunctionalCollectionTest_17_init(void);

@implementation ComGoogleGsonFunctionalCollectionTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssignAndConsume(&gson_, new_ComGoogleGsonGson_init());
}

- (void)testTopLevelCollectionOfIntegersSerialization {
  id<JavaUtilCollection> target = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9) } count:9 type:JavaLangInteger_class_()]);
  id<JavaLangReflectType> targetType = [create_ComGoogleGsonFunctionalCollectionTest_1_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target withJavaLangReflectType:targetType];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[1,2,3,4,5,6,7,8,9]", json);
}

- (void)testTopLevelCollectionOfIntegersDeserialization {
  NSString *json = @"[0,1,2,3,4,5,6,7,8,9]";
  id<JavaLangReflectType> collectionType = [create_ComGoogleGsonFunctionalCollectionTest_2_init() getType];
  id<JavaUtilCollection> target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:collectionType];
  IOSIntArray *expected = [IOSIntArray arrayWithInts:(jint[]){ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 } count:10];
  ComGoogleGsonCommonMoreAsserts_assertEqualsWithIntArray_withIntArray_(expected, ComGoogleGsonFunctionalCollectionTest_toIntArrayWithJavaUtilCollection_(target));
}

- (void)testTopLevelListOfIntegerCollectionsDeserialization {
  NSString *json = @"[[1,2,3],[4,5,6],[7,8,9]]";
  id<JavaLangReflectType> collectionType = [create_ComGoogleGsonFunctionalCollectionTest_3_init() getType];
  id<JavaUtilList> target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:collectionType];
  IOSObjectArray *expected = [IOSIntArray arrayWithDimensions:2 lengths:(jint[]){ 3, 3 }];
  for (jint i = 0; i < 3; ++i) {
    jint start = (3 * i) + 1;
    for (jint j = 0; j < 3; ++j) {
      *IOSIntArray_GetRef(nil_chk(IOSObjectArray_Get(expected, i)), j) = start + j;
    }
  }
  for (jint i = 0; i < 3; i++) {
    ComGoogleGsonCommonMoreAsserts_assertEqualsWithIntArray_withIntArray_(IOSObjectArray_Get(expected, i), ComGoogleGsonFunctionalCollectionTest_toIntArrayWithJavaUtilCollection_([((id<JavaUtilList>) nil_chk(target)) getWithInt:i]));
  }
}

- (void)testLinkedListSerialization {
  id<JavaUtilList> list = create_JavaUtilLinkedList_init();
  [list addWithId:@"a1"];
  [list addWithId:@"a2"];
  id<JavaLangReflectType> linkedListType = [create_ComGoogleGsonFunctionalCollectionTest_4_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:list withJavaLangReflectType:linkedListType];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"a1"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"a2"]);
}

- (void)testLinkedListDeserialization {
  NSString *json = @"['a1','a2']";
  id<JavaLangReflectType> linkedListType = [create_ComGoogleGsonFunctionalCollectionTest_5_init() getType];
  id<JavaUtilList> list = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:linkedListType];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"a1", [((id<JavaUtilList>) nil_chk(list)) getWithInt:0]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"a2", [list getWithInt:1]);
}

- (void)testQueueSerialization {
  id<JavaUtilQueue> queue = create_JavaUtilLinkedList_init();
  [queue addWithId:@"a1"];
  [queue addWithId:@"a2"];
  id<JavaLangReflectType> queueType = [create_ComGoogleGsonFunctionalCollectionTest_6_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:queue withJavaLangReflectType:queueType];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"a1"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"a2"]);
}

- (void)testQueueDeserialization {
  NSString *json = @"['a1','a2']";
  id<JavaLangReflectType> queueType = [create_ComGoogleGsonFunctionalCollectionTest_7_init() getType];
  id<JavaUtilQueue> queue = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:queueType];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"a1", [((id<JavaUtilQueue>) nil_chk(queue)) element]);
  [queue remove];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"a2", [queue element]);
}

- (void)testNullsInListSerialization {
  id<JavaUtilList> list = create_JavaUtilArrayList_init();
  [list addWithId:@"foo"];
  [list addWithId:nil];
  [list addWithId:@"bar"];
  NSString *expected = @"[\"foo\",null,\"bar\"]";
  id<JavaLangReflectType> typeOfList = [create_ComGoogleGsonFunctionalCollectionTest_8_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:list withJavaLangReflectType:typeOfList];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expected, json);
}

- (void)testNullsInListDeserialization {
  id<JavaUtilList> expected = create_JavaUtilArrayList_init();
  [expected addWithId:@"foo"];
  [expected addWithId:nil];
  [expected addWithId:@"bar"];
  NSString *json = @"[\"foo\",null,\"bar\"]";
  id<JavaLangReflectType> expectedType = [create_ComGoogleGsonFunctionalCollectionTest_9_init() getType];
  id<JavaUtilList> target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:expectedType];
  for (jint i = 0; i < [expected size]; ++i) {
    JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_([expected getWithInt:i], [((id<JavaUtilList>) nil_chk(target)) getWithInt:i]);
  }
}

- (void)testCollectionOfObjectSerialization {
  id<JavaUtilList> target = create_JavaUtilArrayList_init();
  [target addWithId:@"Hello"];
  [target addWithId:@"World"];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[\"Hello\",\"World\"]", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
  id<JavaLangReflectType> type = [create_ComGoogleGsonFunctionalCollectionTest_10_init() getType];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[\"Hello\",\"World\"]", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target withJavaLangReflectType:type]);
}

- (void)testCollectionOfObjectWithNullSerialization {
  id<JavaUtilList> target = create_JavaUtilArrayList_init();
  [target addWithId:@"Hello"];
  [target addWithId:nil];
  [target addWithId:@"World"];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[\"Hello\",null,\"World\"]", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
  id<JavaLangReflectType> type = [create_ComGoogleGsonFunctionalCollectionTest_11_init() getType];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[\"Hello\",null,\"World\"]", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target withJavaLangReflectType:type]);
}

- (void)testCollectionOfStringsSerialization {
  id<JavaUtilList> target = create_JavaUtilArrayList_init();
  [target addWithId:@"Hello"];
  [target addWithId:@"World"];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[\"Hello\",\"World\"]", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testCollectionOfBagOfPrimitivesSerialization {
  id<JavaUtilList> target = create_JavaUtilArrayList_init();
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *objA = create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(3LL, 1, true, @"blah");
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *objB = create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(2LL, 6, false, @"blahB");
  [target addWithId:objA];
  [target addWithId:objB];
  NSString *result = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(result)) java_hasPrefix:@"["]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([result java_hasSuffix:@"]"]);
  for (ComGoogleGsonCommonTestTypes_BagOfPrimitives * __strong obj in target) {
    JunitFrameworkTestCase_assertTrueWithBoolean_([result java_contains:[((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(obj)) getExpectedJson]]);
  }
}

- (void)testCollectionOfStringsDeserialization {
  NSString *json = @"[\"Hello\",\"World\"]";
  id<JavaLangReflectType> collectionType = [create_ComGoogleGsonFunctionalCollectionTest_12_init() getType];
  id<JavaUtilCollection> target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:collectionType];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((id<JavaUtilCollection>) nil_chk(target)) containsWithId:@"Hello"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([target containsWithId:@"World"]);
}

- (void)testRawCollectionOfIntegersSerialization {
  id<JavaUtilCollection> target = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9) } count:9 type:JavaLangInteger_class_()]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[1,2,3,4,5,6,7,8,9]", [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target]);
}

- (void)testRawCollectionSerialization {
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag1 = create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_init();
  id<JavaUtilCollection> target = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ bag1, bag1 } count:2 type:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()]);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:[bag1 getExpectedJson]]);
}

- (void)testRawCollectionDeserializationNotAlllowed {
  NSString *json = @"[0,1,2,3,4,5,6,7,8,9]";
  id<JavaUtilCollection> integers = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:JavaUtilCollection_class_()];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(0.0), JavaLangDouble_valueOfWithDouble_(1.0), JavaLangDouble_valueOfWithDouble_(2.0), JavaLangDouble_valueOfWithDouble_(3.0), JavaLangDouble_valueOfWithDouble_(4.0), JavaLangDouble_valueOfWithDouble_(5.0), JavaLangDouble_valueOfWithDouble_(6.0), JavaLangDouble_valueOfWithDouble_(7.0), JavaLangDouble_valueOfWithDouble_(8.0), JavaLangDouble_valueOfWithDouble_(9.0) } count:10 type:JavaLangDouble_class_()]), integers);
  json = @"[\"Hello\", \"World\"]";
  id<JavaUtilCollection> strings = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:JavaUtilCollection_class_()];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((id<JavaUtilCollection>) nil_chk(strings)) containsWithId:@"Hello"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([strings containsWithId:@"World"]);
}

- (void)testRawCollectionOfBagOfPrimitivesNotAllowed {
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag = create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(10, 20, false, @"stringValue");
  NSString *json = JreStrcat("C$C$C", '[', [bag getExpectedJson], ',', [bag getExpectedJson], ']');
  id<JavaUtilCollection> target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:JavaUtilCollection_class_()];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(2, [((id<JavaUtilCollection>) nil_chk(target)) size]);
  for (id __strong bag1 in target) {
    id<JavaUtilMap> values = (id<JavaUtilMap>) cast_check(bag1, JavaUtilMap_class_());
    JunitFrameworkTestCase_assertTrueWithBoolean_([((id<JavaUtilMap>) nil_chk(values)) containsValueWithId:JavaLangDouble_valueOfWithDouble_(10.0)]);
    JunitFrameworkTestCase_assertTrueWithBoolean_([values containsValueWithId:JavaLangDouble_valueOfWithDouble_(20.0)]);
    JunitFrameworkTestCase_assertTrueWithBoolean_([values containsValueWithId:@"stringValue"]);
  }
}

- (void)testWildcardPrimitiveCollectionSerilaization {
  id<JavaUtilCollection> target = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5), JavaLangInteger_valueOfWithInt_(6), JavaLangInteger_valueOfWithInt_(7), JavaLangInteger_valueOfWithInt_(8), JavaLangInteger_valueOfWithInt_(9) } count:9 type:JavaLangInteger_class_()]);
  id<JavaLangReflectType> collectionType = [create_ComGoogleGsonFunctionalCollectionTest_13_init() getType];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target withJavaLangReflectType:collectionType];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[1,2,3,4,5,6,7,8,9]", json);
  json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[1,2,3,4,5,6,7,8,9]", json);
}

- (void)testWildcardPrimitiveCollectionDeserilaization {
  NSString *json = @"[1,2,3,4,5,6,7,8,9]";
  id<JavaLangReflectType> collectionType = [create_ComGoogleGsonFunctionalCollectionTest_14_init() getType];
  id<JavaUtilCollection> target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:collectionType];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(9, [((id<JavaUtilCollection>) nil_chk(target)) size]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([target containsWithId:JavaLangInteger_valueOfWithInt_(1)]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([target containsWithId:JavaLangInteger_valueOfWithInt_(9)]);
}

- (void)testWildcardCollectionField {
  id<JavaUtilCollection> collection = create_JavaUtilArrayList_init();
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *objA = create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(3LL, 1, true, @"blah");
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *objB = create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(2LL, 6, false, @"blahB");
  [collection addWithId:objA];
  [collection addWithId:objB];
  ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection *target = create_ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection_initWithJavaUtilCollection_(collection);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:target];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:[objA getExpectedJson]]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:[objB getExpectedJson]]);
  target = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection_class_()];
  id<JavaUtilCollection> deserializedCollection = [((ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection *) nil_chk(target)) getCollection];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(2, [((id<JavaUtilCollection>) nil_chk(deserializedCollection)) size]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([deserializedCollection containsWithId:objA]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([deserializedCollection containsWithId:objB]);
}

- (void)testFieldIsArrayList {
  ComGoogleGsonFunctionalCollectionTest_HasArrayListField *object = create_ComGoogleGsonFunctionalCollectionTest_HasArrayListField_init();
  [((JavaUtilArrayList *) nil_chk(object->longs_)) addWithId:JavaLangLong_valueOfWithLong_(1LL)];
  [((JavaUtilArrayList *) nil_chk(object->longs_)) addWithId:JavaLangLong_valueOfWithLong_(3LL)];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:object withJavaLangReflectType:ComGoogleGsonFunctionalCollectionTest_HasArrayListField_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"longs\":[1,3]}", json);
  ComGoogleGsonFunctionalCollectionTest_HasArrayListField *copy_ = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"longs\":[1,3]}" withIOSClass:ComGoogleGsonFunctionalCollectionTest_HasArrayListField_class_()];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(1LL), JavaLangLong_valueOfWithLong_(3LL) } count:2 type:JavaLangLong_class_()]), ((ComGoogleGsonFunctionalCollectionTest_HasArrayListField *) nil_chk(copy_))->longs_);
}

- (void)testUserCollectionTypeAdapter {
  id<JavaLangReflectType> listOfString = [create_ComGoogleGsonFunctionalCollectionTest_15_init() getType];
  id stringListSerializer = create_ComGoogleGsonFunctionalCollectionTest_16_init();
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:listOfString withId:stringListSerializer])) create];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"\"ab;cd\"", [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"ab", @"cd" } count:2 type:NSString_class_()]) withJavaLangReflectType:listOfString]);
}

+ (IOSIntArray *)toIntArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return ComGoogleGsonFunctionalCollectionTest_toIntArrayWithJavaUtilCollection_(collection);
}

- (void)testSetSerialization {
  id<JavaUtilSet> set = create_JavaUtilHashSet_init();
  [set addWithId:create_ComGoogleGsonFunctionalCollectionTest_Entry_initWithInt_(1)];
  [set addWithId:create_ComGoogleGsonFunctionalCollectionTest_Entry_initWithInt_(2)];
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:set];
  JunitFrameworkTestCase_assertTrueWithBoolean_([((NSString *) nil_chk(json)) java_contains:@"1"]);
  JunitFrameworkTestCase_assertTrueWithBoolean_([json java_contains:@"2"]);
}

- (void)testSetDeserialization {
  NSString *json = @"[{value:1},{value:2}]";
  id<JavaLangReflectType> type = [create_ComGoogleGsonFunctionalCollectionTest_17_init() getType];
  id<JavaUtilSet> set = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withJavaLangReflectType:type];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(2, [((id<JavaUtilSet>) nil_chk(set)) size]);
  for (ComGoogleGsonFunctionalCollectionTest_Entry * __strong entry_ in set) {
    JunitFrameworkTestCase_assertTrueWithBoolean_(((ComGoogleGsonFunctionalCollectionTest_Entry *) nil_chk(entry_))->value_ == 1 || entry_->value_ == 2);
  }
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0xa, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testTopLevelCollectionOfIntegersSerialization);
  methods[3].selector = @selector(testTopLevelCollectionOfIntegersDeserialization);
  methods[4].selector = @selector(testTopLevelListOfIntegerCollectionsDeserialization);
  methods[5].selector = @selector(testLinkedListSerialization);
  methods[6].selector = @selector(testLinkedListDeserialization);
  methods[7].selector = @selector(testQueueSerialization);
  methods[8].selector = @selector(testQueueDeserialization);
  methods[9].selector = @selector(testNullsInListSerialization);
  methods[10].selector = @selector(testNullsInListDeserialization);
  methods[11].selector = @selector(testCollectionOfObjectSerialization);
  methods[12].selector = @selector(testCollectionOfObjectWithNullSerialization);
  methods[13].selector = @selector(testCollectionOfStringsSerialization);
  methods[14].selector = @selector(testCollectionOfBagOfPrimitivesSerialization);
  methods[15].selector = @selector(testCollectionOfStringsDeserialization);
  methods[16].selector = @selector(testRawCollectionOfIntegersSerialization);
  methods[17].selector = @selector(testRawCollectionSerialization);
  methods[18].selector = @selector(testRawCollectionDeserializationNotAlllowed);
  methods[19].selector = @selector(testRawCollectionOfBagOfPrimitivesNotAllowed);
  methods[20].selector = @selector(testWildcardPrimitiveCollectionSerilaization);
  methods[21].selector = @selector(testWildcardPrimitiveCollectionDeserilaization);
  methods[22].selector = @selector(testWildcardCollectionField);
  methods[23].selector = @selector(testFieldIsArrayList);
  methods[24].selector = @selector(testUserCollectionTypeAdapter);
  methods[25].selector = @selector(toIntArrayWithJavaUtilCollection:);
  methods[26].selector = @selector(testSetSerialization);
  methods[27].selector = @selector(testSetDeserialization);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "toIntArray", "LJavaUtilCollection;", "LComGoogleGsonFunctionalCollectionTest_HasArrayListField;LComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection;LComGoogleGsonFunctionalCollectionTest_Entry;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest = { "CollectionTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1, 28, 1, -1, 3, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest;
}

@end

void ComGoogleGsonFunctionalCollectionTest_init(ComGoogleGsonFunctionalCollectionTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonFunctionalCollectionTest *new_ComGoogleGsonFunctionalCollectionTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest, init)
}

ComGoogleGsonFunctionalCollectionTest *create_ComGoogleGsonFunctionalCollectionTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest, init)
}

IOSIntArray *ComGoogleGsonFunctionalCollectionTest_toIntArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  ComGoogleGsonFunctionalCollectionTest_initialize();
  IOSIntArray *ints = [IOSIntArray arrayWithLength:[((id<JavaUtilCollection>) nil_chk(collection)) size]];
  jint i = 0;
  for (id<JavaUtilIterator> iterator = [collection iterator]; [((id<JavaUtilIterator>) nil_chk(iterator)) hasNext]; ++i) {
    id obj = [iterator next];
    if ([obj isKindOfClass:[JavaLangInteger class]]) {
      *IOSIntArray_GetRef(ints, i) = [((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(obj, [JavaLangInteger class])))) intValue];
    }
    else if ([obj isKindOfClass:[JavaLangLong class]]) {
      *IOSIntArray_GetRef(ints, i) = [((JavaLangLong *) nil_chk(((JavaLangLong *) cast_chk(obj, [JavaLangLong class])))) intValue];
    }
  }
  return ints;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalCollectionTest)

@implementation ComGoogleGsonFunctionalCollectionTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testTopLevelCollectionOfIntegersSerialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Collection<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_1 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_1;
}

@end

void ComGoogleGsonFunctionalCollectionTest_1_init(ComGoogleGsonFunctionalCollectionTest_1 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_1 *new_ComGoogleGsonFunctionalCollectionTest_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_1, init)
}

ComGoogleGsonFunctionalCollectionTest_1 *create_ComGoogleGsonFunctionalCollectionTest_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_1, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testTopLevelCollectionOfIntegersDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Collection<Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_2 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_2;
}

@end

void ComGoogleGsonFunctionalCollectionTest_2_init(ComGoogleGsonFunctionalCollectionTest_2 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_2 *new_ComGoogleGsonFunctionalCollectionTest_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_2, init)
}

ComGoogleGsonFunctionalCollectionTest_2 *create_ComGoogleGsonFunctionalCollectionTest_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_2, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testTopLevelListOfIntegerCollectionsDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Collection<Ljava/util/Collection<Ljava/lang/Integer;>;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_3 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_3;
}

@end

void ComGoogleGsonFunctionalCollectionTest_3_init(ComGoogleGsonFunctionalCollectionTest_3 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_3 *new_ComGoogleGsonFunctionalCollectionTest_3_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_3, init)
}

ComGoogleGsonFunctionalCollectionTest_3 *create_ComGoogleGsonFunctionalCollectionTest_3_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_3, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testLinkedListSerialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/LinkedList<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_4 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_4;
}

@end

void ComGoogleGsonFunctionalCollectionTest_4_init(ComGoogleGsonFunctionalCollectionTest_4 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_4 *new_ComGoogleGsonFunctionalCollectionTest_4_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_4, init)
}

ComGoogleGsonFunctionalCollectionTest_4 *create_ComGoogleGsonFunctionalCollectionTest_4_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_4, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_5

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_5_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testLinkedListDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/LinkedList<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_5 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_5;
}

@end

void ComGoogleGsonFunctionalCollectionTest_5_init(ComGoogleGsonFunctionalCollectionTest_5 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_5 *new_ComGoogleGsonFunctionalCollectionTest_5_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_5, init)
}

ComGoogleGsonFunctionalCollectionTest_5 *create_ComGoogleGsonFunctionalCollectionTest_5_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_5, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testQueueSerialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Queue<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_6 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_6;
}

@end

void ComGoogleGsonFunctionalCollectionTest_6_init(ComGoogleGsonFunctionalCollectionTest_6 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_6 *new_ComGoogleGsonFunctionalCollectionTest_6_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_6, init)
}

ComGoogleGsonFunctionalCollectionTest_6 *create_ComGoogleGsonFunctionalCollectionTest_6_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_6, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_7

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testQueueDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Queue<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_7 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_7;
}

@end

void ComGoogleGsonFunctionalCollectionTest_7_init(ComGoogleGsonFunctionalCollectionTest_7 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_7 *new_ComGoogleGsonFunctionalCollectionTest_7_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_7, init)
}

ComGoogleGsonFunctionalCollectionTest_7 *create_ComGoogleGsonFunctionalCollectionTest_7_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_7, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testNullsInListSerialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_8 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_8;
}

@end

void ComGoogleGsonFunctionalCollectionTest_8_init(ComGoogleGsonFunctionalCollectionTest_8 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_8 *new_ComGoogleGsonFunctionalCollectionTest_8_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_8, init)
}

ComGoogleGsonFunctionalCollectionTest_8 *create_ComGoogleGsonFunctionalCollectionTest_8_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_8, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testNullsInListDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_9 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_9;
}

@end

void ComGoogleGsonFunctionalCollectionTest_9_init(ComGoogleGsonFunctionalCollectionTest_9 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_9 *new_ComGoogleGsonFunctionalCollectionTest_9_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_9, init)
}

ComGoogleGsonFunctionalCollectionTest_9 *create_ComGoogleGsonFunctionalCollectionTest_9_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_9, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_10

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testCollectionOfObjectSerialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/List<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_10 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_10;
}

@end

void ComGoogleGsonFunctionalCollectionTest_10_init(ComGoogleGsonFunctionalCollectionTest_10 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_10 *new_ComGoogleGsonFunctionalCollectionTest_10_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_10, init)
}

ComGoogleGsonFunctionalCollectionTest_10 *create_ComGoogleGsonFunctionalCollectionTest_10_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_10, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testCollectionOfObjectWithNullSerialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/List<Ljava/lang/Object;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_11 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_11;
}

@end

void ComGoogleGsonFunctionalCollectionTest_11_init(ComGoogleGsonFunctionalCollectionTest_11 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_11 *new_ComGoogleGsonFunctionalCollectionTest_11_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_11, init)
}

ComGoogleGsonFunctionalCollectionTest_11 *create_ComGoogleGsonFunctionalCollectionTest_11_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_11, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_12

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testCollectionOfStringsDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Collection<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_12 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_12;
}

@end

void ComGoogleGsonFunctionalCollectionTest_12_init(ComGoogleGsonFunctionalCollectionTest_12 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_12 *new_ComGoogleGsonFunctionalCollectionTest_12_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_12, init)
}

ComGoogleGsonFunctionalCollectionTest_12 *create_ComGoogleGsonFunctionalCollectionTest_12_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_12, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_13

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testWildcardPrimitiveCollectionSerilaization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Collection<+Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_13 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_13;
}

@end

void ComGoogleGsonFunctionalCollectionTest_13_init(ComGoogleGsonFunctionalCollectionTest_13 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_13 *new_ComGoogleGsonFunctionalCollectionTest_13_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_13, init)
}

ComGoogleGsonFunctionalCollectionTest_13 *create_ComGoogleGsonFunctionalCollectionTest_13_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_13, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_14

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_14_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testWildcardPrimitiveCollectionDeserilaization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Collection<+Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_14 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_14;
}

@end

void ComGoogleGsonFunctionalCollectionTest_14_init(ComGoogleGsonFunctionalCollectionTest_14 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_14 *new_ComGoogleGsonFunctionalCollectionTest_14_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_14, init)
}

ComGoogleGsonFunctionalCollectionTest_14 *create_ComGoogleGsonFunctionalCollectionTest_14_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_14, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_15

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_15_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testUserCollectionTypeAdapter", "Lcom/google/gson/reflect/TypeToken<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_15 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_15;
}

@end

void ComGoogleGsonFunctionalCollectionTest_15_init(ComGoogleGsonFunctionalCollectionTest_15 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_15 *new_ComGoogleGsonFunctionalCollectionTest_15_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_15, init)
}

ComGoogleGsonFunctionalCollectionTest_15 *create_ComGoogleGsonFunctionalCollectionTest_15_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_15, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_16

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)serializeWithId:(id<JavaUtilList>)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  return create_ComGoogleGsonJsonPrimitive_initWithNSString_(JreStrcat("$C$", [((id<JavaUtilList>) nil_chk(src)) getWithInt:0], ';', [src getWithInt:1]));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "serialize", "LJavaUtilList;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "(Ljava/util/List<Ljava/lang/String;>;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement;", "LComGoogleGsonFunctionalCollectionTest;", "testUserCollectionTypeAdapter", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_16 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_16;
}

@end

void ComGoogleGsonFunctionalCollectionTest_16_init(ComGoogleGsonFunctionalCollectionTest_16 *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalCollectionTest_16 *new_ComGoogleGsonFunctionalCollectionTest_16_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_16, init)
}

ComGoogleGsonFunctionalCollectionTest_16 *create_ComGoogleGsonFunctionalCollectionTest_16_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_16, init)
}

@implementation ComGoogleGsonFunctionalCollectionTest_HasArrayListField

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_HasArrayListField_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(longs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "longs_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x0, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "Ljava/util/ArrayList<Ljava/lang/Long;>;", "LComGoogleGsonFunctionalCollectionTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_HasArrayListField = { "HasArrayListField", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_HasArrayListField;
}

@end

void ComGoogleGsonFunctionalCollectionTest_HasArrayListField_init(ComGoogleGsonFunctionalCollectionTest_HasArrayListField *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->longs_, new_JavaUtilArrayList_init());
}

ComGoogleGsonFunctionalCollectionTest_HasArrayListField *new_ComGoogleGsonFunctionalCollectionTest_HasArrayListField_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_HasArrayListField, init)
}

ComGoogleGsonFunctionalCollectionTest_HasArrayListField *create_ComGoogleGsonFunctionalCollectionTest_HasArrayListField_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_HasArrayListField, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalCollectionTest_HasArrayListField)

@implementation ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection_initWithJavaUtilCollection_(self, collection);
  return self;
}

- (id<JavaUtilCollection>)getCollection {
  return collection_;
}

- (void)dealloc {
  RELEASE_(collection_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilCollection:);
  methods[1].selector = @selector(getCollection);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "collection_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x12, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;", "(Ljava/util/Collection<+Lcom/google/gson/common/TestTypes$BagOfPrimitives;>;)V", "()Ljava/util/Collection<+Lcom/google/gson/common/TestTypes$BagOfPrimitives;>;", "Ljava/util/Collection<+Lcom/google/gson/common/TestTypes$BagOfPrimitives;>;", "LComGoogleGsonFunctionalCollectionTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection = { "ObjectWithWildcardCollection", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 2, 1, 4, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection;
}

@end

void ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection_initWithJavaUtilCollection_(ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection *self, id<JavaUtilCollection> collection) {
  NSObject_init(self);
  JreStrongAssign(&self->collection_, collection);
}

ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection *new_ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection, initWithJavaUtilCollection_, collection)
}

ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection *create_ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection_initWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection, initWithJavaUtilCollection_, collection)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalCollectionTest_ObjectWithWildcardCollection)

@implementation ComGoogleGsonFunctionalCollectionTest_Entry

- (instancetype)initWithInt:(jint)value {
  ComGoogleGsonFunctionalCollectionTest_Entry_initWithInt_(self, value);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LComGoogleGsonFunctionalCollectionTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_Entry = { "Entry", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_Entry;
}

@end

void ComGoogleGsonFunctionalCollectionTest_Entry_initWithInt_(ComGoogleGsonFunctionalCollectionTest_Entry *self, jint value) {
  NSObject_init(self);
  self->value_ = value;
}

ComGoogleGsonFunctionalCollectionTest_Entry *new_ComGoogleGsonFunctionalCollectionTest_Entry_initWithInt_(jint value) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_Entry, initWithInt_, value)
}

ComGoogleGsonFunctionalCollectionTest_Entry *create_ComGoogleGsonFunctionalCollectionTest_Entry_initWithInt_(jint value) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_Entry, initWithInt_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalCollectionTest_Entry)

@implementation ComGoogleGsonFunctionalCollectionTest_17

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalCollectionTest_17_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalCollectionTest;", "testSetDeserialization", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Set<Lcom/google/gson/functional/CollectionTest$Entry;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalCollectionTest_17 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalCollectionTest_17;
}

@end

void ComGoogleGsonFunctionalCollectionTest_17_init(ComGoogleGsonFunctionalCollectionTest_17 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalCollectionTest_17 *new_ComGoogleGsonFunctionalCollectionTest_17_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalCollectionTest_17, init)
}

ComGoogleGsonFunctionalCollectionTest_17 *create_ComGoogleGsonFunctionalCollectionTest_17_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalCollectionTest_17, init)
}
