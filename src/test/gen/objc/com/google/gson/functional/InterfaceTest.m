//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/InterfaceTest.java
//

#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/functional/InterfaceTest.h"
#include "junit/framework/TestCase.h"

@class ComGoogleGsonFunctionalInterfaceTest_TestObject;

@interface ComGoogleGsonFunctionalInterfaceTest () {
 @public
  ComGoogleGsonGson *gson_;
  ComGoogleGsonFunctionalInterfaceTest_TestObject *obj_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInterfaceTest, gson_, ComGoogleGsonGson *)
J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInterfaceTest, obj_, ComGoogleGsonFunctionalInterfaceTest_TestObject *)

inline NSString *ComGoogleGsonFunctionalInterfaceTest_get_OBJ_JSON(void);
static NSString *ComGoogleGsonFunctionalInterfaceTest_OBJ_JSON = @"{\"someStringValue\":\"StringValue\"}";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleGsonFunctionalInterfaceTest, OBJ_JSON, NSString *)

@protocol ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface < JavaObject >

@end

@interface ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface : NSObject

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface)

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface)

@interface ComGoogleGsonFunctionalInterfaceTest_TestObject : NSObject < ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface > {
 @public
  NSString *someStringValue_;
}

- (instancetype __nonnull)initWithNSString:(NSString *)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalInterfaceTest_TestObject)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInterfaceTest_TestObject, someStringValue_, NSString *)

__attribute__((unused)) static void ComGoogleGsonFunctionalInterfaceTest_TestObject_initWithNSString_(ComGoogleGsonFunctionalInterfaceTest_TestObject *self, NSString *value);

__attribute__((unused)) static ComGoogleGsonFunctionalInterfaceTest_TestObject *new_ComGoogleGsonFunctionalInterfaceTest_TestObject_initWithNSString_(NSString *value) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalInterfaceTest_TestObject *create_ComGoogleGsonFunctionalInterfaceTest_TestObject_initWithNSString_(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalInterfaceTest_TestObject)

@interface ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper : NSObject {
 @public
  id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface> obj_;
}

- (instancetype __nonnull)initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface:(id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface>)obj;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper, obj_, id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface>)

__attribute__((unused)) static void ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper_initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_(ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper *self, id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface> obj);

__attribute__((unused)) static ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper *new_ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper_initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_(id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface> obj) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper *create_ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper_initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_(id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface> obj);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper)

@implementation ComGoogleGsonFunctionalInterfaceTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonFunctionalInterfaceTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssignAndConsume(&gson_, new_ComGoogleGsonGson_init());
  JreStrongAssignAndConsume(&obj_, new_ComGoogleGsonFunctionalInterfaceTest_TestObject_initWithNSString_(@"StringValue"));
}

- (void)testSerializingObjectImplementingInterface {
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(ComGoogleGsonFunctionalInterfaceTest_OBJ_JSON, [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:obj_]);
}

- (void)testSerializingInterfaceObjectField {
  ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper *objWrapper = create_ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper_initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_(obj_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(JreStrcat("$$C", @"{\"obj\":", ComGoogleGsonFunctionalInterfaceTest_OBJ_JSON, '}'), [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:objWrapper]);
}

- (void)dealloc {
  RELEASE_(gson_);
  RELEASE_(obj_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testSerializingObjectImplementingInterface);
  methods[3].selector = @selector(testSerializingInterfaceObjectField);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "OBJ_JSON", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 1, -1, -1 },
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "obj_", "LComGoogleGsonFunctionalInterfaceTest_TestObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", &ComGoogleGsonFunctionalInterfaceTest_OBJ_JSON, "LComGoogleGsonFunctionalInterfaceTest_TestObjectInterface;LComGoogleGsonFunctionalInterfaceTest_TestObject;LComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInterfaceTest = { "InterfaceTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, 2, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInterfaceTest;
}

@end

void ComGoogleGsonFunctionalInterfaceTest_init(ComGoogleGsonFunctionalInterfaceTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonFunctionalInterfaceTest *new_ComGoogleGsonFunctionalInterfaceTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalInterfaceTest, init)
}

ComGoogleGsonFunctionalInterfaceTest *create_ComGoogleGsonFunctionalInterfaceTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalInterfaceTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInterfaceTest)

@implementation ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface

+ (const J2ObjcClassInfo *)__metadata {
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalInterfaceTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface = { "TestObjectInterface", "com.google.gson.functional", ptrTable, NULL, NULL, 7, 0x60a, 0, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface)

@implementation ComGoogleGsonFunctionalInterfaceTest_TestObject

- (instancetype __nonnull)initWithNSString:(NSString *)value {
  ComGoogleGsonFunctionalInterfaceTest_TestObject_initWithNSString_(self, value);
  return self;
}

- (void)dealloc {
  RELEASE_(someStringValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "someStringValue_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LComGoogleGsonFunctionalInterfaceTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInterfaceTest_TestObject = { "TestObject", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInterfaceTest_TestObject;
}

@end

void ComGoogleGsonFunctionalInterfaceTest_TestObject_initWithNSString_(ComGoogleGsonFunctionalInterfaceTest_TestObject *self, NSString *value) {
  NSObject_init(self);
  JreStrongAssign(&self->someStringValue_, value);
}

ComGoogleGsonFunctionalInterfaceTest_TestObject *new_ComGoogleGsonFunctionalInterfaceTest_TestObject_initWithNSString_(NSString *value) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalInterfaceTest_TestObject, initWithNSString_, value)
}

ComGoogleGsonFunctionalInterfaceTest_TestObject *create_ComGoogleGsonFunctionalInterfaceTest_TestObject_initWithNSString_(NSString *value) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalInterfaceTest_TestObject, initWithNSString_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInterfaceTest_TestObject)

@implementation ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper

- (instancetype __nonnull)initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface:(id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface>)obj {
  ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper_initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_(self, obj);
  return self;
}

- (void)dealloc {
  RELEASE_(obj_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "obj_", "LComGoogleGsonFunctionalInterfaceTest_TestObjectInterface;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalInterfaceTest_TestObjectInterface;", "LComGoogleGsonFunctionalInterfaceTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper = { "TestObjectWrapper", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper;
}

@end

void ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper_initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_(ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper *self, id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface> obj) {
  NSObject_init(self);
  JreStrongAssign(&self->obj_, obj);
}

ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper *new_ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper_initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_(id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface> obj) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper, initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_, obj)
}

ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper *create_ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper_initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_(id<ComGoogleGsonFunctionalInterfaceTest_TestObjectInterface> obj) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper, initWithComGoogleGsonFunctionalInterfaceTest_TestObjectInterface_, obj)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalInterfaceTest_TestObjectWrapper)
