//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/TypeHierarchyAdapterTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/GsonBuilder.h"
#include "com/google/gson/JsonDeserializationContext.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonObject.h"
#include "com/google/gson/JsonPrimitive.h"
#include "com/google/gson/JsonSerializationContext.h"
#include "com/google/gson/functional/TypeHierarchyAdapterTest.h"
#include "java/lang/Long.h"
#include "java/lang/reflect/Type.h"
#include "junit/framework/TestCase.h"

@implementation ComGoogleGsonFunctionalTypeHierarchyAdapterTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testTypeHierarchy {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *andy = create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_init();
  JreStrongAssign(&andy->userid_, @"andy");
  andy->startDate_ = 2005;
  JreStrongAssignAndConsume(&andy->minions_, [IOSObjectArray newArrayWithObjects:(id[]){ create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(@"inder", 2007), create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(@"joel", 2006), create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(@"jesse", 2006) } count:3 type:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_class_()]);
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *eric = create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO_init();
  JreStrongAssign(&eric->userid_, @"eric");
  eric->startDate_ = 2001;
  JreStrongAssignAndConsume(&eric->assistant_, new_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(@"jerome", 2006));
  JreStrongAssignAndConsume(&eric->minions_, [IOSObjectArray newArrayWithObjects:(id[]){ create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(@"larry", 1998), create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(@"sergey", 1998), andy } count:3 type:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_class_()]);
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeHierarchyAdapterWithIOSClass:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_class_() withId:create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter_init()])) setPrettyPrinting])) create];
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company *company = create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company_init();
  JreStrongAssign(&company->ceo_, eric);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:company withJavaLangReflectType:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\n  \"ceo\": {\n    \"userid\": \"eric\",\n    \"startDate\": 2001,\n    \"minions\": [\n      {\n        \"userid\": \"larry\",\n        \"startDate\": 1998\n      },\n      {\n        \"userid\": \"sergey\",\n        \"startDate\": 1998\n      },\n      {\n        \"userid\": \"andy\",\n        \"startDate\": 2005,\n        \"minions\": [\n          {\n            \"userid\": \"inder\",\n            \"startDate\": 2007\n          },\n          {\n            \"userid\": \"joel\",\n            \"startDate\": 2006\n          },\n          {\n            \"userid\": \"jesse\",\n            \"startDate\": 2006\n          }\n        ]\n      }\n    ],\n    \"assistant\": {\n      \"userid\": \"jerome\",\n      \"startDate\": 2006\n    }\n  }\n}", json);
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company *copied = [gson fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(json, [gson toJsonWithId:copied withJavaLangReflectType:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company_class_()]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *) nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company *) nil_chk(copied))->ceo_))->userid_, company->ceo_->userid_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *) nil_chk(copied->ceo_))->assistant_))->userid_, company->ceo_->assistant_->userid_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *) nil_chk(copied->ceo_))->minions_), 0)))->userid_, ((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(company->ceo_->minions_, 0)))->userid_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *) nil_chk(copied->ceo_))->minions_), 1)))->userid_, ((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(company->ceo_->minions_, 1)))->userid_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *) nil_chk(copied->ceo_))->minions_), 2)))->userid_, ((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(company->ceo_->minions_, 2)))->userid_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) cast_chk(IOSObjectArray_Get(nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *) nil_chk(copied->ceo_))->minions_), 2), [ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager class]))))->minions_, 0)))->userid_, ((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) cast_chk(IOSObjectArray_Get(company->ceo_->minions_, 2), [ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager class]))))->minions_, 0)))->userid_);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) cast_chk(IOSObjectArray_Get(nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *) nil_chk(copied->ceo_))->minions_), 2), [ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager class]))))->minions_, 1)))->userid_, ((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(IOSObjectArray_Get(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) nil_chk(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) cast_chk(IOSObjectArray_Get(company->ceo_->minions_, 2), [ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager class]))))->minions_, 1)))->userid_);
}

- (void)testRegisterSuperTypeFirst {
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeHierarchyAdapterWithIOSClass:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_class_() withId:create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter_init()])) registerTypeHierarchyAdapterWithIOSClass:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_class_() withId:create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter_init()])) create];
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *manager = create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_init();
  JreStrongAssign(&manager->userid_, @"inder");
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:manager withJavaLangReflectType:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"\"inder\"", json);
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *copied = [gson fromJsonWithNSString:json withIOSClass:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(manager->userid_, ((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) nil_chk(copied))->userid_);
}

- (void)testRegisterSubTypeFirstAllowed {
  [((ComGoogleGsonGsonBuilder *) nil_chk([((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeHierarchyAdapterWithIOSClass:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_class_() withId:create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter_init()])) registerTypeHierarchyAdapterWithIOSClass:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_class_() withId:create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter_init()])) create];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testTypeHierarchy);
  methods[2].selector = @selector(testRegisterSuperTypeFirst);
  methods[3].selector = @selector(testRegisterSubTypeFirstAllowed);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter;LComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter;LComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee;LComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager;LComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO;LComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalTypeHierarchyAdapterTest = { "TypeHierarchyAdapterTest", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x11, 4, 0, -1, 0, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalTypeHierarchyAdapterTest;
}

@end

void ComGoogleGsonFunctionalTypeHierarchyAdapterTest_init(ComGoogleGsonFunctionalTypeHierarchyAdapterTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest *new_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest, init)
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest *create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalTypeHierarchyAdapterTest)

@implementation ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                                                             withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
                                                         withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *result = create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_init();
  JreStrongAssign(&result->userid_, [((ComGoogleGsonJsonElement *) nil_chk(json)) getAsString]);
  return result;
}

- (ComGoogleGsonJsonElement *)serializeWithId:(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  return create_ComGoogleGsonJsonPrimitive_initWithNSString_(((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) nil_chk(src))->userid_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(deserializeWithComGoogleGsonJsonElement:withJavaLangReflectType:withComGoogleGsonJsonDeserializationContext:);
  methods[2].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "deserialize", "LComGoogleGsonJsonElement;LJavaLangReflectType;LComGoogleGsonJsonDeserializationContext;", "serialize", "LComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "LComGoogleGsonFunctionalTypeHierarchyAdapterTest;", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Lcom/google/gson/functional/TypeHierarchyAdapterTest$Manager;>;Lcom/google/gson/JsonDeserializer<Lcom/google/gson/functional/TypeHierarchyAdapterTest$Manager;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter = { "ManagerAdapter", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8, 3, 0, 4, -1, -1, 5, -1 };
  return &_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter;
}

@end

void ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter_init(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter *new_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter, init)
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter *create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_ManagerAdapter)

@implementation ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)serializeWithId:(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *)employee
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  ComGoogleGsonJsonObject *result = create_ComGoogleGsonJsonObject_init();
  [result addWithNSString:@"userid" withComGoogleGsonJsonElement:[((id<ComGoogleGsonJsonSerializationContext>) nil_chk(context)) serializeWithId:((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *) nil_chk(employee))->userid_ withJavaLangReflectType:NSString_class_()]];
  [result addWithNSString:@"startDate" withComGoogleGsonJsonElement:[context serializeWithId:JavaLangLong_valueOfWithLong_(employee->startDate_) withJavaLangReflectType:[IOSClass longClass]]];
  if ([employee isKindOfClass:[ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager class]]) {
    [result addWithNSString:@"minions" withComGoogleGsonJsonElement:[context serializeWithId:((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) cast_chk(employee, [ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager class]))->minions_ withJavaLangReflectType:IOSClass_arrayType(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_class_(), 1)]];
    if ([employee isKindOfClass:[ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO class]]) {
      [result addWithNSString:@"assistant" withComGoogleGsonJsonElement:[context serializeWithId:((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *) cast_chk(employee, [ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO class]))->assistant_ withJavaLangReflectType:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_class_()]];
    }
  }
  return result;
}

- (ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                                                              withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
                                                          withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context {
  ComGoogleGsonJsonObject *object = [((ComGoogleGsonJsonElement *) nil_chk(json)) getAsJsonObject];
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *result = nil;
  ComGoogleGsonJsonElement *assistant = [((ComGoogleGsonJsonObject *) nil_chk(object)) getWithNSString:@"assistant"];
  if (assistant != nil) {
    result = create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO_init();
    JreStrongAssign(&((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *) cast_chk(result, [ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO class]))->assistant_, [((id<ComGoogleGsonJsonDeserializationContext>) nil_chk(context)) deserializeWithComGoogleGsonJsonElement:assistant withJavaLangReflectType:ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_class_()]);
  }
  ComGoogleGsonJsonElement *minons = [object getWithNSString:@"minions"];
  if (minons != nil) {
    if (result == nil) {
      result = create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_init();
    }
    JreStrongAssign(&((ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *) cast_chk(result, [ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager class]))->minions_, [((id<ComGoogleGsonJsonDeserializationContext>) nil_chk(context)) deserializeWithComGoogleGsonJsonElement:minons withJavaLangReflectType:IOSClass_arrayType(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_class_(), 1)]);
  }
  if (result == nil) {
    result = create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_init();
  }
  JreStrongAssign(&result->userid_, [((id<ComGoogleGsonJsonDeserializationContext>) nil_chk(context)) deserializeWithComGoogleGsonJsonElement:[object getWithNSString:@"userid"] withJavaLangReflectType:NSString_class_()]);
  result->startDate_ = [((JavaLangLong *) nil_chk([context deserializeWithComGoogleGsonJsonElement:[object getWithNSString:@"startDate"] withJavaLangReflectType:[IOSClass longClass]])) longLongValue];
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee;", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  methods[2].selector = @selector(deserializeWithComGoogleGsonJsonElement:withJavaLangReflectType:withComGoogleGsonJsonDeserializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "serialize", "LComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "deserialize", "LComGoogleGsonJsonElement;LJavaLangReflectType;LComGoogleGsonJsonDeserializationContext;", "LComGoogleGsonJsonParseException;", "LComGoogleGsonFunctionalTypeHierarchyAdapterTest;", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Lcom/google/gson/functional/TypeHierarchyAdapterTest$Employee;>;Lcom/google/gson/JsonDeserializer<Lcom/google/gson/functional/TypeHierarchyAdapterTest$Employee;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter = { "EmployeeAdapter", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8, 3, 0, 5, -1, -1, 6, -1 };
  return &_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter;
}

@end

void ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter_init(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter *new_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter, init)
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter *create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_EmployeeAdapter)

@implementation ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee

- (instancetype)initWithNSString:(NSString *)userid
                        withLong:(jlong)startDate {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(self, userid, startDate);
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(userid_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withLong:);
  methods[1].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "userid_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "startDate_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;J", "LComGoogleGsonFunctionalTypeHierarchyAdapterTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee = { "Employee", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8, 2, 2, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee;
}

@end

void ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *self, NSString *userid, jlong startDate) {
  NSObject_init(self);
  JreStrongAssign(&self->userid_, userid);
  self->startDate_ = startDate;
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *new_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(NSString *userid, jlong startDate) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee, initWithNSString_withLong_, userid, startDate)
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_initWithNSString_withLong_(NSString *userid, jlong startDate) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee, initWithNSString_withLong_, userid, startDate)
}

void ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_init(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *new_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee, init)
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee *create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee)

@implementation ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(minions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "minions_", "[LComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalTypeHierarchyAdapterTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager = { "Manager", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager;
}

@end

void ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_init(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *self) {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee_init(self);
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *new_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager, init)
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager *create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager)

@implementation ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(assistant_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "assistant_", "LComGoogleGsonFunctionalTypeHierarchyAdapterTest_Employee;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalTypeHierarchyAdapterTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO = { "CEO", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO;
}

@end

void ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO_init(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *self) {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Manager_init(self);
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *new_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO, init)
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO *create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO)

@implementation ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(ceo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ceo_", "LComGoogleGsonFunctionalTypeHierarchyAdapterTest_CEO;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalTypeHierarchyAdapterTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company = { "Company", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x8, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company;
}

@end

void ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company_init(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company *self) {
  NSObject_init(self);
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company *new_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company, init)
}

ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company *create_ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalTypeHierarchyAdapterTest_Company)
