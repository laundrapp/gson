//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/ConcurrencyTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalConcurrencyTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalConcurrencyTest

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonFunctionalConcurrencyTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest || defined(INCLUDE_ComGoogleGsonFunctionalConcurrencyTest))
#define ComGoogleGsonFunctionalConcurrencyTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Tests for ensuring Gson thread-safety.
 @author Inderjeet Singh
 @author Joel Leitch
 */
@interface ComGoogleGsonFunctionalConcurrencyTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Source-code based on
  http://groups.google.com/group/google-gson/browse_thread/thread/563bb51ee2495081
 */
- (void)testMultiThreadDeserialization;

/*!
 @brief Source-code based on
  http://groups.google.com/group/google-gson/browse_thread/thread/563bb51ee2495081
 */
- (void)testMultiThreadSerialization;

/*!
 @brief Source-code based on
  http://groups.google.com/group/google-gson/browse_thread/thread/563bb51ee2495081
 */
- (void)testSingleThreadDeserialization;

/*!
 @brief Source-code based on
  http://groups.google.com/group/google-gson/browse_thread/thread/563bb51ee2495081
 */
- (void)testSingleThreadSerialization;

#pragma mark Protected

- (void)setUp;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalConcurrencyTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalConcurrencyTest_init(ComGoogleGsonFunctionalConcurrencyTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalConcurrencyTest *new_ComGoogleGsonFunctionalConcurrencyTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalConcurrencyTest *create_ComGoogleGsonFunctionalConcurrencyTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalConcurrencyTest)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalConcurrencyTest")
