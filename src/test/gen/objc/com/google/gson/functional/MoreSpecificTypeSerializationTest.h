//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/MoreSpecificTypeSerializationTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest || defined(INCLUDE_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest))
#define ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Tests for Gson serialization of a sub-class object while encountering a base-class type
 @author Inderjeet Singh
 */
@interface ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief For parameterized type in a List, Gson ignores the more-specific type and sticks to
  the declared type
 */
- (void)testListOfParameterizedSubclassFields;

- (void)testListOfSubclassFields;

/*!
 @brief For parameterized type in a map, Gson ignores the more-specific type and sticks to the
  declared type
 */
- (void)testMapOfParameterizedSubclassFields;

- (void)testMapOfSubclassFields;

/*!
 @brief For parameterized type, Gson ignores the more-specific type and sticks to the declared type
 */
- (void)testParameterizedSubclassFields;

- (void)testSubclassFields;

#pragma mark Protected

- (void)setUp;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_init(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest *new_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest *create_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalMoreSpecificTypeSerializationTest")
