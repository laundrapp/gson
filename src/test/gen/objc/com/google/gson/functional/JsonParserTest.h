//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/JsonParserTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalJsonParserTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalJsonParserTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalJsonParserTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalJsonParserTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalJsonParserTest

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonFunctionalJsonParserTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalJsonParserTest || defined(INCLUDE_ComGoogleGsonFunctionalJsonParserTest))
#define ComGoogleGsonFunctionalJsonParserTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Functional tests for that use JsonParser and related Gson methods
 @author Inderjeet Singh
 @author Joel Leitch
 */
@interface ComGoogleGsonFunctionalJsonParserTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype __nonnull)init;

- (void)testBadFieldTypeForCustomDeserializerCustomTree;

- (void)testBadFieldTypeForDeserializingCustomTree;

- (void)testBadTypeForDeserializingCustomTree;

- (void)testChangingCustomTreeAndDeserializing;

- (void)testDeserializingCustomTree;

- (void)testExtraCommasInArrays;

- (void)testExtraCommasInMaps;

- (void)testParseInvalidJson;

#pragma mark Protected

- (void)setUp;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalJsonParserTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalJsonParserTest_init(ComGoogleGsonFunctionalJsonParserTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalJsonParserTest *new_ComGoogleGsonFunctionalJsonParserTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalJsonParserTest *create_ComGoogleGsonFunctionalJsonParserTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalJsonParserTest)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalJsonParserTest")
