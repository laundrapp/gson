//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/RawSerializationTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/functional/RawSerializationTest.h"
#include "com/google/gson/reflect/TypeToken.h"
#include "java/lang/Integer.h"
#include "java/lang/reflect/Type.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonFunctionalRawSerializationTest () {
 @public
  ComGoogleGsonGson *gson_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalRawSerializationTest, gson_, ComGoogleGsonGson *)

@interface ComGoogleGsonFunctionalRawSerializationTest_1 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRawSerializationTest_1)

__attribute__((unused)) static void ComGoogleGsonFunctionalRawSerializationTest_1_init(ComGoogleGsonFunctionalRawSerializationTest_1 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_1 *new_ComGoogleGsonFunctionalRawSerializationTest_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_1 *create_ComGoogleGsonFunctionalRawSerializationTest_1_init(void);

@interface ComGoogleGsonFunctionalRawSerializationTest_2 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRawSerializationTest_2)

__attribute__((unused)) static void ComGoogleGsonFunctionalRawSerializationTest_2_init(ComGoogleGsonFunctionalRawSerializationTest_2 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_2 *new_ComGoogleGsonFunctionalRawSerializationTest_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_2 *create_ComGoogleGsonFunctionalRawSerializationTest_2_init(void);

@interface ComGoogleGsonFunctionalRawSerializationTest_3 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRawSerializationTest_3)

__attribute__((unused)) static void ComGoogleGsonFunctionalRawSerializationTest_3_init(ComGoogleGsonFunctionalRawSerializationTest_3 *self);

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_3 *new_ComGoogleGsonFunctionalRawSerializationTest_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_3 *create_ComGoogleGsonFunctionalRawSerializationTest_3_init(void);

@interface ComGoogleGsonFunctionalRawSerializationTest_Foo : NSObject {
 @public
  jint b_;
}

- (instancetype)initWithInt:(jint)b;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRawSerializationTest_Foo)

__attribute__((unused)) static void ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(ComGoogleGsonFunctionalRawSerializationTest_Foo *self, jint b);

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_Foo *new_ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(jint b) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_Foo *create_ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(jint b);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalRawSerializationTest_Foo)

@interface ComGoogleGsonFunctionalRawSerializationTest_Bar : NSObject {
 @public
  id t_;
}

- (instancetype)initWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalRawSerializationTest_Bar)

J2OBJC_FIELD_SETTER(ComGoogleGsonFunctionalRawSerializationTest_Bar, t_, id)

__attribute__((unused)) static void ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(ComGoogleGsonFunctionalRawSerializationTest_Bar *self, id t);

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_Bar *new_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(id t) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonFunctionalRawSerializationTest_Bar *create_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(id t);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalRawSerializationTest_Bar)

@implementation ComGoogleGsonFunctionalRawSerializationTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalRawSerializationTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssignAndConsume(&gson_, new_ComGoogleGsonGson_init());
}

- (void)testCollectionOfPrimitives {
  id<JavaUtilCollection> ints = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), JavaLangInteger_valueOfWithInt_(3), JavaLangInteger_valueOfWithInt_(4), JavaLangInteger_valueOfWithInt_(5) } count:5 type:JavaLangInteger_class_()]);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:ints];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[1,2,3,4,5]", json);
}

- (void)testCollectionOfObjects {
  id<JavaUtilCollection> foos = JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ create_ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(1), create_ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(2) } count:2 type:ComGoogleGsonFunctionalRawSerializationTest_Foo_class_()]);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:foos];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"[{\"b\":1},{\"b\":2}]", json);
}

- (void)testParameterizedObject {
  ComGoogleGsonFunctionalRawSerializationTest_Bar *bar = create_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(create_ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(1));
  NSString *expectedJson = @"{\"t\":{\"b\":1}}";
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:bar];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expectedJson, json);
  json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:bar withJavaLangReflectType:[create_ComGoogleGsonFunctionalRawSerializationTest_1_init() getType]];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expectedJson, json);
}

- (void)testTwoLevelParameterizedObject {
  ComGoogleGsonFunctionalRawSerializationTest_Bar *bar = create_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(create_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(create_ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(1)));
  NSString *expectedJson = @"{\"t\":{\"t\":{\"b\":1}}}";
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:bar];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expectedJson, json);
  json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:bar withJavaLangReflectType:[create_ComGoogleGsonFunctionalRawSerializationTest_2_init() getType]];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expectedJson, json);
}

- (void)testThreeLevelParameterizedObject {
  ComGoogleGsonFunctionalRawSerializationTest_Bar *bar = create_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(create_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(create_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(create_ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(1))));
  NSString *expectedJson = @"{\"t\":{\"t\":{\"t\":{\"b\":1}}}}";
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:bar];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expectedJson, json);
  json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:bar withJavaLangReflectType:[create_ComGoogleGsonFunctionalRawSerializationTest_3_init() getType]];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expectedJson, json);
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testCollectionOfPrimitives);
  methods[3].selector = @selector(testCollectionOfObjects);
  methods[4].selector = @selector(testParameterizedObject);
  methods[5].selector = @selector(testTwoLevelParameterizedObject);
  methods[6].selector = @selector(testThreeLevelParameterizedObject);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "LComGoogleGsonFunctionalRawSerializationTest_Foo;LComGoogleGsonFunctionalRawSerializationTest_Bar;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRawSerializationTest = { "RawSerializationTest", "com.google.gson.functional", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, 1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalRawSerializationTest;
}

@end

void ComGoogleGsonFunctionalRawSerializationTest_init(ComGoogleGsonFunctionalRawSerializationTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonFunctionalRawSerializationTest *new_ComGoogleGsonFunctionalRawSerializationTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRawSerializationTest, init)
}

ComGoogleGsonFunctionalRawSerializationTest *create_ComGoogleGsonFunctionalRawSerializationTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRawSerializationTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRawSerializationTest)

@implementation ComGoogleGsonFunctionalRawSerializationTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalRawSerializationTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalRawSerializationTest;", "testParameterizedObject", "Lcom/google/gson/reflect/TypeToken<Lcom/google/gson/functional/RawSerializationTest$Bar<Lcom/google/gson/functional/RawSerializationTest$Foo;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRawSerializationTest_1 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalRawSerializationTest_1;
}

@end

void ComGoogleGsonFunctionalRawSerializationTest_1_init(ComGoogleGsonFunctionalRawSerializationTest_1 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalRawSerializationTest_1 *new_ComGoogleGsonFunctionalRawSerializationTest_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRawSerializationTest_1, init)
}

ComGoogleGsonFunctionalRawSerializationTest_1 *create_ComGoogleGsonFunctionalRawSerializationTest_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRawSerializationTest_1, init)
}

@implementation ComGoogleGsonFunctionalRawSerializationTest_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalRawSerializationTest_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalRawSerializationTest;", "testTwoLevelParameterizedObject", "Lcom/google/gson/reflect/TypeToken<Lcom/google/gson/functional/RawSerializationTest$Bar<Lcom/google/gson/functional/RawSerializationTest$Bar<Lcom/google/gson/functional/RawSerializationTest$Foo;>;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRawSerializationTest_2 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalRawSerializationTest_2;
}

@end

void ComGoogleGsonFunctionalRawSerializationTest_2_init(ComGoogleGsonFunctionalRawSerializationTest_2 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalRawSerializationTest_2 *new_ComGoogleGsonFunctionalRawSerializationTest_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRawSerializationTest_2, init)
}

ComGoogleGsonFunctionalRawSerializationTest_2 *create_ComGoogleGsonFunctionalRawSerializationTest_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRawSerializationTest_2, init)
}

@implementation ComGoogleGsonFunctionalRawSerializationTest_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonFunctionalRawSerializationTest_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonFunctionalRawSerializationTest;", "testThreeLevelParameterizedObject", "Lcom/google/gson/reflect/TypeToken<Lcom/google/gson/functional/RawSerializationTest$Bar<Lcom/google/gson/functional/RawSerializationTest$Bar<Lcom/google/gson/functional/RawSerializationTest$Bar<Lcom/google/gson/functional/RawSerializationTest$Foo;>;>;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRawSerializationTest_3 = { "", "com.google.gson.functional", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonFunctionalRawSerializationTest_3;
}

@end

void ComGoogleGsonFunctionalRawSerializationTest_3_init(ComGoogleGsonFunctionalRawSerializationTest_3 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonFunctionalRawSerializationTest_3 *new_ComGoogleGsonFunctionalRawSerializationTest_3_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRawSerializationTest_3, init)
}

ComGoogleGsonFunctionalRawSerializationTest_3 *create_ComGoogleGsonFunctionalRawSerializationTest_3_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRawSerializationTest_3, init)
}

@implementation ComGoogleGsonFunctionalRawSerializationTest_Foo

- (instancetype)initWithInt:(jint)b {
  ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(self, b);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "b_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LComGoogleGsonFunctionalRawSerializationTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRawSerializationTest_Foo = { "Foo", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonFunctionalRawSerializationTest_Foo;
}

@end

void ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(ComGoogleGsonFunctionalRawSerializationTest_Foo *self, jint b) {
  NSObject_init(self);
  self->b_ = b;
}

ComGoogleGsonFunctionalRawSerializationTest_Foo *new_ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(jint b) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRawSerializationTest_Foo, initWithInt_, b)
}

ComGoogleGsonFunctionalRawSerializationTest_Foo *create_ComGoogleGsonFunctionalRawSerializationTest_Foo_initWithInt_(jint b) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRawSerializationTest_Foo, initWithInt_, b)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRawSerializationTest_Foo)

@implementation ComGoogleGsonFunctionalRawSerializationTest_Bar

- (instancetype)initWithId:(id)t {
  ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(self, t);
  return self;
}

- (void)dealloc {
  RELEASE_(t_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "t_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "(TT;)V", "TT;", "LComGoogleGsonFunctionalRawSerializationTest;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleGsonFunctionalRawSerializationTest_Bar = { "Bar", "com.google.gson.functional", ptrTable, methods, fields, 7, 0xa, 1, 1, 3, -1, -1, 4, -1 };
  return &_ComGoogleGsonFunctionalRawSerializationTest_Bar;
}

@end

void ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(ComGoogleGsonFunctionalRawSerializationTest_Bar *self, id t) {
  NSObject_init(self);
  JreStrongAssign(&self->t_, t);
}

ComGoogleGsonFunctionalRawSerializationTest_Bar *new_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(id t) {
  J2OBJC_NEW_IMPL(ComGoogleGsonFunctionalRawSerializationTest_Bar, initWithId_, t)
}

ComGoogleGsonFunctionalRawSerializationTest_Bar *create_ComGoogleGsonFunctionalRawSerializationTest_Bar_initWithId_(id t) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonFunctionalRawSerializationTest_Bar, initWithId_, t)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonFunctionalRawSerializationTest_Bar)
