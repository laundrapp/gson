//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/functional/FieldExclusionTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonFunctionalFieldExclusionTest")
#ifdef RESTRICT_ComGoogleGsonFunctionalFieldExclusionTest
#define INCLUDE_ALL_ComGoogleGsonFunctionalFieldExclusionTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonFunctionalFieldExclusionTest 1
#endif
#undef RESTRICT_ComGoogleGsonFunctionalFieldExclusionTest

#if !defined (ComGoogleGsonFunctionalFieldExclusionTest_) && (INCLUDE_ALL_ComGoogleGsonFunctionalFieldExclusionTest || defined(INCLUDE_ComGoogleGsonFunctionalFieldExclusionTest))
#define ComGoogleGsonFunctionalFieldExclusionTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Performs some functional testing to ensure GSON infrastructure properly serializes/deserializes
  fields that either should or should not be included in the output based on the GSON
  configuration.
 @author Joel Leitch
 */
@interface ComGoogleGsonFunctionalFieldExclusionTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype)init;

- (void)testDefaultInnerClassExclusion;

- (void)testDefaultNestedStaticClassIncluded;

- (void)testInnerClassExclusion;

#pragma mark Protected

- (void)setUp;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonFunctionalFieldExclusionTest)

FOUNDATION_EXPORT void ComGoogleGsonFunctionalFieldExclusionTest_init(ComGoogleGsonFunctionalFieldExclusionTest *self);

FOUNDATION_EXPORT ComGoogleGsonFunctionalFieldExclusionTest *new_ComGoogleGsonFunctionalFieldExclusionTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonFunctionalFieldExclusionTest *create_ComGoogleGsonFunctionalFieldExclusionTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonFunctionalFieldExclusionTest)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonFunctionalFieldExclusionTest")
