//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/common/TestTypes.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/JsonDeserializationContext.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonObject.h"
#include "com/google/gson/JsonPrimitive.h"
#include "com/google/gson/JsonSerializationContext.h"
#include "com/google/gson/annotations/SerializedName.h"
#include "com/google/gson/common/TestTypes.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Type.h"
#include "java/util/Collection.h"

@interface ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers () {
 @public
  JavaLangLong *longValue_;
  JavaLangInteger *intValue_;
  JavaLangBoolean *booleanValue_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers, longValue_, JavaLangLong *)
J2OBJC_FIELD_SETTER(ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers, intValue_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers, booleanValue_, JavaLangBoolean *)

@interface ComGoogleGsonCommonTestTypes_PrimitiveArray () {
 @public
  IOSLongArray *longArray_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonCommonTestTypes_PrimitiveArray, longArray_, IOSLongArray *)

@interface ComGoogleGsonCommonTestTypes_Nested () {
 @public
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1_;
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonCommonTestTypes_Nested, primitive1_, ComGoogleGsonCommonTestTypes_BagOfPrimitives *)
J2OBJC_FIELD_SETTER(ComGoogleGsonCommonTestTypes_Nested, primitive2_, ComGoogleGsonCommonTestTypes_BagOfPrimitives *)

@interface ComGoogleGsonCommonTestTypes_ClassWithTransientFields () {
 @public
  IOSLongArray *longValue_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonCommonTestTypes_ClassWithTransientFields, longValue_, IOSLongArray *)

@interface ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter () {
 @public
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag_;
  jint value_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter, bag_, ComGoogleGsonCommonTestTypes_BagOfPrimitives *)

@interface ComGoogleGsonCommonTestTypes_ArrayOfObjects () {
 @public
  IOSObjectArray *elements_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonCommonTestTypes_ArrayOfObjects, elements_, IOSObjectArray *)

__attribute__((unused)) static IOSObjectArray *ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields__Annotations$1(void);

@implementation ComGoogleGsonCommonTestTypes

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonCommonTestTypes_Base;LComGoogleGsonCommonTestTypes_Sub;LComGoogleGsonCommonTestTypes_ClassWithBaseField;LComGoogleGsonCommonTestTypes_ClassWithBaseArrayField;LComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField;LComGoogleGsonCommonTestTypes_BaseSerializer;LComGoogleGsonCommonTestTypes_SubSerializer;LComGoogleGsonCommonTestTypes_StringWrapper;LComGoogleGsonCommonTestTypes_BagOfPrimitives;LComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers;LComGoogleGsonCommonTestTypes_PrimitiveArray;LComGoogleGsonCommonTestTypes_ClassWithNoFields;LComGoogleGsonCommonTestTypes_Nested;LComGoogleGsonCommonTestTypes_ClassWithTransientFields;LComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter;LComGoogleGsonCommonTestTypes_ArrayOfObjects;LComGoogleGsonCommonTestTypes_ClassOverridingEquals;LComGoogleGsonCommonTestTypes_ClassWithArray;LComGoogleGsonCommonTestTypes_ClassWithObjects;LComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields;LComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes = { "TestTypes", "com.google.gson.common", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes;
}

@end

void ComGoogleGsonCommonTestTypes_init(ComGoogleGsonCommonTestTypes *self) {
  NSObject_init(self);
}

ComGoogleGsonCommonTestTypes *new_ComGoogleGsonCommonTestTypes_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes, init)
}

ComGoogleGsonCommonTestTypes *create_ComGoogleGsonCommonTestTypes_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes)

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonCommonTestTypes_Base)

NSString *ComGoogleGsonCommonTestTypes_Base_BASE_NAME;
NSString *ComGoogleGsonCommonTestTypes_Base_BASE_FIELD_KEY = @"baseName";
NSString *ComGoogleGsonCommonTestTypes_Base_SERIALIZER_KEY = @"serializerName";

@implementation ComGoogleGsonCommonTestTypes_Base

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_Base_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(baseName_);
  RELEASE_(serializerName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
    { "BASE_FIELD_KEY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "SERIALIZER_KEY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "baseName_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "serializerName_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleGsonCommonTestTypes_Base_BASE_NAME, &ComGoogleGsonCommonTestTypes_Base_BASE_FIELD_KEY, &ComGoogleGsonCommonTestTypes_Base_SERIALIZER_KEY, "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_Base = { "Base", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 1, 5, 3, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_Base;
}

+ (void)initialize {
  if (self == [ComGoogleGsonCommonTestTypes_Base class]) {
    JreStrongAssign(&ComGoogleGsonCommonTestTypes_Base_BASE_NAME, [ComGoogleGsonCommonTestTypes_Base_class_() getSimpleName]);
    J2OBJC_SET_INITIALIZED(ComGoogleGsonCommonTestTypes_Base)
  }
}

@end

void ComGoogleGsonCommonTestTypes_Base_init(ComGoogleGsonCommonTestTypes_Base *self) {
  NSObject_init(self);
  JreStrongAssign(&self->baseName_, ComGoogleGsonCommonTestTypes_Base_BASE_NAME);
}

ComGoogleGsonCommonTestTypes_Base *new_ComGoogleGsonCommonTestTypes_Base_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_Base, init)
}

ComGoogleGsonCommonTestTypes_Base *create_ComGoogleGsonCommonTestTypes_Base_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_Base, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_Base)

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonCommonTestTypes_Sub)

NSString *ComGoogleGsonCommonTestTypes_Sub_SUB_NAME;
NSString *ComGoogleGsonCommonTestTypes_Sub_SUB_FIELD_KEY = @"subName";

@implementation ComGoogleGsonCommonTestTypes_Sub

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_Sub_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(subName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SUB_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
    { "SUB_FIELD_KEY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "subName_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleGsonCommonTestTypes_Sub_SUB_NAME, &ComGoogleGsonCommonTestTypes_Sub_SUB_FIELD_KEY, "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_Sub = { "Sub", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 1, 3, 2, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_Sub;
}

+ (void)initialize {
  if (self == [ComGoogleGsonCommonTestTypes_Sub class]) {
    JreStrongAssign(&ComGoogleGsonCommonTestTypes_Sub_SUB_NAME, [ComGoogleGsonCommonTestTypes_Sub_class_() getSimpleName]);
    J2OBJC_SET_INITIALIZED(ComGoogleGsonCommonTestTypes_Sub)
  }
}

@end

void ComGoogleGsonCommonTestTypes_Sub_init(ComGoogleGsonCommonTestTypes_Sub *self) {
  ComGoogleGsonCommonTestTypes_Base_init(self);
  JreStrongAssign(&self->subName_, ComGoogleGsonCommonTestTypes_Sub_SUB_NAME);
}

ComGoogleGsonCommonTestTypes_Sub *new_ComGoogleGsonCommonTestTypes_Sub_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_Sub, init)
}

ComGoogleGsonCommonTestTypes_Sub *create_ComGoogleGsonCommonTestTypes_Sub_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_Sub, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_Sub)

NSString *ComGoogleGsonCommonTestTypes_ClassWithBaseField_FIELD_KEY = @"base";

@implementation ComGoogleGsonCommonTestTypes_ClassWithBaseField

- (instancetype __nonnull)initWithComGoogleGsonCommonTestTypes_Base:(ComGoogleGsonCommonTestTypes_Base *)base {
  ComGoogleGsonCommonTestTypes_ClassWithBaseField_initWithComGoogleGsonCommonTestTypes_Base_(self, base);
  return self;
}

- (void)dealloc {
  RELEASE_(base_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonCommonTestTypes_Base:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FIELD_KEY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "base_", "LComGoogleGsonCommonTestTypes_Base;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonCommonTestTypes_Base;", &ComGoogleGsonCommonTestTypes_ClassWithBaseField_FIELD_KEY, "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassWithBaseField = { "ClassWithBaseField", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 1, 2, 2, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassWithBaseField;
}

@end

void ComGoogleGsonCommonTestTypes_ClassWithBaseField_initWithComGoogleGsonCommonTestTypes_Base_(ComGoogleGsonCommonTestTypes_ClassWithBaseField *self, ComGoogleGsonCommonTestTypes_Base *base) {
  NSObject_init(self);
  JreStrongAssign(&self->base_, base);
}

ComGoogleGsonCommonTestTypes_ClassWithBaseField *new_ComGoogleGsonCommonTestTypes_ClassWithBaseField_initWithComGoogleGsonCommonTestTypes_Base_(ComGoogleGsonCommonTestTypes_Base *base) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithBaseField, initWithComGoogleGsonCommonTestTypes_Base_, base)
}

ComGoogleGsonCommonTestTypes_ClassWithBaseField *create_ComGoogleGsonCommonTestTypes_ClassWithBaseField_initWithComGoogleGsonCommonTestTypes_Base_(ComGoogleGsonCommonTestTypes_Base *base) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithBaseField, initWithComGoogleGsonCommonTestTypes_Base_, base)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassWithBaseField)

NSString *ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField_FIELD_KEY = @"base";

@implementation ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField

- (instancetype __nonnull)initWithComGoogleGsonCommonTestTypes_BaseArray:(IOSObjectArray *)base {
  ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField_initWithComGoogleGsonCommonTestTypes_BaseArray_(self, base);
  return self;
}

- (void)dealloc {
  RELEASE_(base_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonCommonTestTypes_BaseArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FIELD_KEY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 1, -1, -1 },
    { "base_", "[LComGoogleGsonCommonTestTypes_Base;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LComGoogleGsonCommonTestTypes_Base;", &ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField_FIELD_KEY, "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField = { "ClassWithBaseArrayField", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 1, 2, 2, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField;
}

@end

void ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField_initWithComGoogleGsonCommonTestTypes_BaseArray_(ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField *self, IOSObjectArray *base) {
  NSObject_init(self);
  JreStrongAssign(&self->base_, base);
}

ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField *new_ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField_initWithComGoogleGsonCommonTestTypes_BaseArray_(IOSObjectArray *base) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField, initWithComGoogleGsonCommonTestTypes_BaseArray_, base)
}

ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField *create_ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField_initWithComGoogleGsonCommonTestTypes_BaseArray_(IOSObjectArray *base) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField, initWithComGoogleGsonCommonTestTypes_BaseArray_, base)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassWithBaseArrayField)

NSString *ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField_FIELD_KEY = @"base";

@implementation ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)base {
  ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField_initWithJavaUtilCollection_(self, base);
  return self;
}

- (void)dealloc {
  RELEASE_(base_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "FIELD_KEY", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "base_", "LJavaUtilCollection;", .constantValue.asLong = 0, 0x11, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;", "(Ljava/util/Collection<Lcom/google/gson/common/TestTypes$Base;>;)V", &ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField_FIELD_KEY, "Ljava/util/Collection<Lcom/google/gson/common/TestTypes$Base;>;", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField = { "ClassWithBaseCollectionField", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 1, 2, 4, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField;
}

@end

void ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField_initWithJavaUtilCollection_(ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField *self, id<JavaUtilCollection> base) {
  NSObject_init(self);
  JreStrongAssign(&self->base_, base);
}

ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField *new_ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField_initWithJavaUtilCollection_(id<JavaUtilCollection> base) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField, initWithJavaUtilCollection_, base)
}

ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField *create_ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField_initWithJavaUtilCollection_(id<JavaUtilCollection> base) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField, initWithJavaUtilCollection_, base)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassWithBaseCollectionField)

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonCommonTestTypes_BaseSerializer)

NSString *ComGoogleGsonCommonTestTypes_BaseSerializer_NAME;

@implementation ComGoogleGsonCommonTestTypes_BaseSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_BaseSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)serializeWithId:(ComGoogleGsonCommonTestTypes_Base *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  ComGoogleGsonJsonObject *obj = create_ComGoogleGsonJsonObject_init();
  [obj addPropertyWithNSString:ComGoogleGsonCommonTestTypes_Base_SERIALIZER_KEY withNSString:ComGoogleGsonCommonTestTypes_BaseSerializer_NAME];
  return obj;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LComGoogleGsonCommonTestTypes_Base;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", &ComGoogleGsonCommonTestTypes_BaseSerializer_NAME, "LComGoogleGsonCommonTestTypes;", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Lcom/google/gson/common/TestTypes$Base;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_BaseSerializer = { "BaseSerializer", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, 4, -1 };
  return &_ComGoogleGsonCommonTestTypes_BaseSerializer;
}

+ (void)initialize {
  if (self == [ComGoogleGsonCommonTestTypes_BaseSerializer class]) {
    JreStrongAssign(&ComGoogleGsonCommonTestTypes_BaseSerializer_NAME, [ComGoogleGsonCommonTestTypes_BaseSerializer_class_() getSimpleName]);
    J2OBJC_SET_INITIALIZED(ComGoogleGsonCommonTestTypes_BaseSerializer)
  }
}

@end

void ComGoogleGsonCommonTestTypes_BaseSerializer_init(ComGoogleGsonCommonTestTypes_BaseSerializer *self) {
  NSObject_init(self);
}

ComGoogleGsonCommonTestTypes_BaseSerializer *new_ComGoogleGsonCommonTestTypes_BaseSerializer_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_BaseSerializer, init)
}

ComGoogleGsonCommonTestTypes_BaseSerializer *create_ComGoogleGsonCommonTestTypes_BaseSerializer_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_BaseSerializer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_BaseSerializer)

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonCommonTestTypes_SubSerializer)

NSString *ComGoogleGsonCommonTestTypes_SubSerializer_NAME;

@implementation ComGoogleGsonCommonTestTypes_SubSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_SubSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)serializeWithId:(ComGoogleGsonCommonTestTypes_Sub *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  ComGoogleGsonJsonObject *obj = create_ComGoogleGsonJsonObject_init();
  [obj addPropertyWithNSString:ComGoogleGsonCommonTestTypes_Base_SERIALIZER_KEY withNSString:ComGoogleGsonCommonTestTypes_SubSerializer_NAME];
  return obj;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LComGoogleGsonCommonTestTypes_Sub;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", &ComGoogleGsonCommonTestTypes_SubSerializer_NAME, "LComGoogleGsonCommonTestTypes;", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Lcom/google/gson/common/TestTypes$Sub;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_SubSerializer = { "SubSerializer", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 2, 1, 3, -1, -1, 4, -1 };
  return &_ComGoogleGsonCommonTestTypes_SubSerializer;
}

+ (void)initialize {
  if (self == [ComGoogleGsonCommonTestTypes_SubSerializer class]) {
    JreStrongAssign(&ComGoogleGsonCommonTestTypes_SubSerializer_NAME, [ComGoogleGsonCommonTestTypes_SubSerializer_class_() getSimpleName]);
    J2OBJC_SET_INITIALIZED(ComGoogleGsonCommonTestTypes_SubSerializer)
  }
}

@end

void ComGoogleGsonCommonTestTypes_SubSerializer_init(ComGoogleGsonCommonTestTypes_SubSerializer *self) {
  NSObject_init(self);
}

ComGoogleGsonCommonTestTypes_SubSerializer *new_ComGoogleGsonCommonTestTypes_SubSerializer_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_SubSerializer, init)
}

ComGoogleGsonCommonTestTypes_SubSerializer *create_ComGoogleGsonCommonTestTypes_SubSerializer_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_SubSerializer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_SubSerializer)

@implementation ComGoogleGsonCommonTestTypes_StringWrapper

- (instancetype __nonnull)initWithNSString:(NSString *)value {
  ComGoogleGsonCommonTestTypes_StringWrapper_initWithNSString_(self, value);
  return self;
}

- (void)dealloc {
  RELEASE_(someConstantStringInstanceField_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "someConstantStringInstanceField_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_StringWrapper = { "StringWrapper", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 1, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_StringWrapper;
}

@end

void ComGoogleGsonCommonTestTypes_StringWrapper_initWithNSString_(ComGoogleGsonCommonTestTypes_StringWrapper *self, NSString *value) {
  NSObject_init(self);
  JreStrongAssign(&self->someConstantStringInstanceField_, value);
}

ComGoogleGsonCommonTestTypes_StringWrapper *new_ComGoogleGsonCommonTestTypes_StringWrapper_initWithNSString_(NSString *value) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_StringWrapper, initWithNSString_, value)
}

ComGoogleGsonCommonTestTypes_StringWrapper *create_ComGoogleGsonCommonTestTypes_StringWrapper_initWithNSString_(NSString *value) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_StringWrapper, initWithNSString_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_StringWrapper)

@implementation ComGoogleGsonCommonTestTypes_BagOfPrimitives

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_BagOfPrimitives_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithLong:(jlong)longValue
                               withInt:(jint)intValue
                           withBoolean:(jboolean)booleanValue
                          withNSString:(NSString *)stringValue {
  ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(self, longValue, intValue, booleanValue, stringValue);
  return self;
}

- (jint)getIntValue {
  return intValue_;
}

- (NSString *)getExpectedJson {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"{"];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\"longValue\":"])) appendWithLong:longValue_])) appendWithNSString:@","];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\"intValue\":"])) appendWithInt:intValue_])) appendWithNSString:@","];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\"booleanValue\":"])) appendWithBoolean:booleanValue_])) appendWithNSString:@","];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\"stringValue\":\""])) appendWithNSString:stringValue_])) appendWithNSString:@"\""];
  [sb appendWithNSString:@"}"];
  return [sb description];
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + (booleanValue_ ? 1231 : 1237);
  result = prime * result + intValue_;
  result = prime * result + (jint) (longValue_ ^ (JreURShift64(longValue_, 32)));
  result = prime * result + ((stringValue_ == nil) ? 0 : ((jint) [((NSString *) nil_chk(stringValue_)) hash]));
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (self == obj) return true;
  if (obj == nil) return false;
  if ([self java_getClass] != [obj java_getClass]) return false;
  ComGoogleGsonCommonTestTypes_BagOfPrimitives *other = (ComGoogleGsonCommonTestTypes_BagOfPrimitives *) cast_chk(obj, [ComGoogleGsonCommonTestTypes_BagOfPrimitives class]);
  if (booleanValue_ != other->booleanValue_) return false;
  if (intValue_ != other->intValue_) return false;
  if (longValue_ != other->longValue_) return false;
  if (stringValue_ == nil) {
    if (other->stringValue_ != nil) return false;
  }
  else if (![stringValue_ isEqual:other->stringValue_]) return false;
  return true;
}

- (NSString *)description {
  return NSString_java_formatWithNSString_withNSObjectArray_(@"(longValue=%d,intValue=%d,booleanValue=%b,stringValue=%s)", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(longValue_), JavaLangInteger_valueOfWithInt_(intValue_), JavaLangBoolean_valueOfWithBoolean_(booleanValue_), stringValue_ } count:4 type:NSObject_class_()]);
}

- (void)dealloc {
  RELEASE_(stringValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithLong:withInt:withBoolean:withNSString:);
  methods[2].selector = @selector(getIntValue);
  methods[3].selector = @selector(getExpectedJson);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(isEqual:);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_VALUE", "J", .constantValue.asLong = ComGoogleGsonCommonTestTypes_BagOfPrimitives_DEFAULT_VALUE, 0x19, -1, -1, -1, -1 },
    { "longValue_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "intValue_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "booleanValue_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "stringValue_", "LNSString;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JIZLNSString;", "hashCode", "equals", "LNSObject;", "toString", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_BagOfPrimitives = { "BagOfPrimitives", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 7, 5, 5, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_BagOfPrimitives;
}

@end

void ComGoogleGsonCommonTestTypes_BagOfPrimitives_init(ComGoogleGsonCommonTestTypes_BagOfPrimitives *self) {
  ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(self, ComGoogleGsonCommonTestTypes_BagOfPrimitives_DEFAULT_VALUE, 0, false, @"");
}

ComGoogleGsonCommonTestTypes_BagOfPrimitives *new_ComGoogleGsonCommonTestTypes_BagOfPrimitives_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_BagOfPrimitives, init)
}

ComGoogleGsonCommonTestTypes_BagOfPrimitives *create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_BagOfPrimitives, init)
}

void ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *self, jlong longValue, jint intValue, jboolean booleanValue, NSString *stringValue) {
  NSObject_init(self);
  self->longValue_ = longValue;
  self->intValue_ = intValue;
  self->booleanValue_ = booleanValue;
  JreStrongAssign(&self->stringValue_, stringValue);
}

ComGoogleGsonCommonTestTypes_BagOfPrimitives *new_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(jlong longValue, jint intValue, jboolean booleanValue, NSString *stringValue) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_BagOfPrimitives, initWithLong_withInt_withBoolean_withNSString_, longValue, intValue, booleanValue, stringValue)
}

ComGoogleGsonCommonTestTypes_BagOfPrimitives *create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(jlong longValue, jint intValue, jboolean booleanValue, NSString *stringValue) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_BagOfPrimitives, initWithLong_withInt_withBoolean_withNSString_, longValue, intValue, booleanValue, stringValue)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_BagOfPrimitives)

@implementation ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers

- (instancetype __nonnull)initWithJavaLangLong:(JavaLangLong *)longValue
                           withJavaLangInteger:(JavaLangInteger *)intValue
                           withJavaLangBoolean:(JavaLangBoolean *)booleanValue {
  ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers_initWithJavaLangLong_withJavaLangInteger_withJavaLangBoolean_(self, longValue, intValue, booleanValue);
  return self;
}

- (NSString *)getExpectedJson {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"{"];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\"longValue\":"])) appendWithId:longValue_])) appendWithNSString:@","];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\"intValue\":"])) appendWithId:intValue_])) appendWithNSString:@","];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\"booleanValue\":"])) appendWithId:booleanValue_];
  [sb appendWithNSString:@"}"];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(longValue_);
  RELEASE_(intValue_);
  RELEASE_(booleanValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangLong:withJavaLangInteger:withJavaLangBoolean:);
  methods[1].selector = @selector(getExpectedJson);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "longValue_", "LJavaLangLong;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "intValue_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "booleanValue_", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangLong;LJavaLangInteger;LJavaLangBoolean;", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers = { "BagOfPrimitiveWrappers", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 2, 3, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers;
}

@end

void ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers_initWithJavaLangLong_withJavaLangInteger_withJavaLangBoolean_(ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers *self, JavaLangLong *longValue, JavaLangInteger *intValue, JavaLangBoolean *booleanValue) {
  NSObject_init(self);
  JreStrongAssign(&self->longValue_, longValue);
  JreStrongAssign(&self->intValue_, intValue);
  JreStrongAssign(&self->booleanValue_, booleanValue);
}

ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers *new_ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers_initWithJavaLangLong_withJavaLangInteger_withJavaLangBoolean_(JavaLangLong *longValue, JavaLangInteger *intValue, JavaLangBoolean *booleanValue) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers, initWithJavaLangLong_withJavaLangInteger_withJavaLangBoolean_, longValue, intValue, booleanValue)
}

ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers *create_ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers_initWithJavaLangLong_withJavaLangInteger_withJavaLangBoolean_(JavaLangLong *longValue, JavaLangInteger *intValue, JavaLangBoolean *booleanValue) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers, initWithJavaLangLong_withJavaLangInteger_withJavaLangBoolean_, longValue, intValue, booleanValue)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_BagOfPrimitiveWrappers)

@implementation ComGoogleGsonCommonTestTypes_PrimitiveArray

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_PrimitiveArray_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithLongArray:(IOSLongArray *)longArray {
  ComGoogleGsonCommonTestTypes_PrimitiveArray_initWithLongArray_(self, longArray);
  return self;
}

- (NSString *)getExpectedJson {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"{\"longArray\":["];
  jboolean first = true;
  {
    IOSLongArray *a__ = longArray_;
    jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong l = *b__++;
      if (!first) {
        [sb appendWithNSString:@","];
      }
      else {
        first = false;
      }
      [sb appendWithLong:l];
    }
  }
  [sb appendWithNSString:@"]}"];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(longArray_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithLongArray:);
  methods[2].selector = @selector(getExpectedJson);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "longArray_", "[J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[J", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_PrimitiveArray = { "PrimitiveArray", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 3, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_PrimitiveArray;
}

@end

void ComGoogleGsonCommonTestTypes_PrimitiveArray_init(ComGoogleGsonCommonTestTypes_PrimitiveArray *self) {
  ComGoogleGsonCommonTestTypes_PrimitiveArray_initWithLongArray_(self, [IOSLongArray arrayWithLength:0]);
}

ComGoogleGsonCommonTestTypes_PrimitiveArray *new_ComGoogleGsonCommonTestTypes_PrimitiveArray_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_PrimitiveArray, init)
}

ComGoogleGsonCommonTestTypes_PrimitiveArray *create_ComGoogleGsonCommonTestTypes_PrimitiveArray_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_PrimitiveArray, init)
}

void ComGoogleGsonCommonTestTypes_PrimitiveArray_initWithLongArray_(ComGoogleGsonCommonTestTypes_PrimitiveArray *self, IOSLongArray *longArray) {
  NSObject_init(self);
  JreStrongAssign(&self->longArray_, longArray);
}

ComGoogleGsonCommonTestTypes_PrimitiveArray *new_ComGoogleGsonCommonTestTypes_PrimitiveArray_initWithLongArray_(IOSLongArray *longArray) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_PrimitiveArray, initWithLongArray_, longArray)
}

ComGoogleGsonCommonTestTypes_PrimitiveArray *create_ComGoogleGsonCommonTestTypes_PrimitiveArray_initWithLongArray_(IOSLongArray *longArray) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_PrimitiveArray, initWithLongArray_, longArray)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_PrimitiveArray)

@implementation ComGoogleGsonCommonTestTypes_ClassWithNoFields

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_ClassWithNoFields_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isEqual:(id)other {
  return [nil_chk(other) java_getClass] == ComGoogleGsonCommonTestTypes_ClassWithNoFields_class_();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "equals", "LNSObject;", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassWithNoFields = { "ClassWithNoFields", "com.google.gson.common", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassWithNoFields;
}

@end

void ComGoogleGsonCommonTestTypes_ClassWithNoFields_init(ComGoogleGsonCommonTestTypes_ClassWithNoFields *self) {
  NSObject_init(self);
}

ComGoogleGsonCommonTestTypes_ClassWithNoFields *new_ComGoogleGsonCommonTestTypes_ClassWithNoFields_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithNoFields, init)
}

ComGoogleGsonCommonTestTypes_ClassWithNoFields *create_ComGoogleGsonCommonTestTypes_ClassWithNoFields_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithNoFields, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassWithNoFields)

@implementation ComGoogleGsonCommonTestTypes_Nested

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_Nested_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComGoogleGsonCommonTestTypes_BagOfPrimitives:(ComGoogleGsonCommonTestTypes_BagOfPrimitives *)primitive1
                              withComGoogleGsonCommonTestTypes_BagOfPrimitives:(ComGoogleGsonCommonTestTypes_BagOfPrimitives *)primitive2 {
  ComGoogleGsonCommonTestTypes_Nested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(self, primitive1, primitive2);
  return self;
}

- (NSString *)getExpectedJson {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"{"];
  [self appendFieldsWithJavaLangStringBuilder:sb];
  [sb appendWithNSString:@"}"];
  return [sb description];
}

- (void)appendFieldsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  if (primitive1_ != nil) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\"primitive1\":"])) appendWithNSString:[primitive1_ getExpectedJson]];
  }
  if (primitive1_ != nil && primitive2_ != nil) {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@","];
  }
  if (primitive2_ != nil) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"\"primitive2\":"])) appendWithNSString:[primitive2_ getExpectedJson]];
  }
}

- (void)dealloc {
  RELEASE_(primitive1_);
  RELEASE_(primitive2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComGoogleGsonCommonTestTypes_BagOfPrimitives:withComGoogleGsonCommonTestTypes_BagOfPrimitives:);
  methods[2].selector = @selector(getExpectedJson);
  methods[3].selector = @selector(appendFieldsWithJavaLangStringBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "primitive1_", "LComGoogleGsonCommonTestTypes_BagOfPrimitives;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "primitive2_", "LComGoogleGsonCommonTestTypes_BagOfPrimitives;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonCommonTestTypes_BagOfPrimitives;LComGoogleGsonCommonTestTypes_BagOfPrimitives;", "appendFields", "LJavaLangStringBuilder;", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_Nested = { "Nested", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 4, 2, 3, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_Nested;
}

@end

void ComGoogleGsonCommonTestTypes_Nested_init(ComGoogleGsonCommonTestTypes_Nested *self) {
  ComGoogleGsonCommonTestTypes_Nested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(self, nil, nil);
}

ComGoogleGsonCommonTestTypes_Nested *new_ComGoogleGsonCommonTestTypes_Nested_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_Nested, init)
}

ComGoogleGsonCommonTestTypes_Nested *create_ComGoogleGsonCommonTestTypes_Nested_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_Nested, init)
}

void ComGoogleGsonCommonTestTypes_Nested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_Nested *self, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2) {
  NSObject_init(self);
  JreStrongAssign(&self->primitive1_, primitive1);
  JreStrongAssign(&self->primitive2_, primitive2);
}

ComGoogleGsonCommonTestTypes_Nested *new_ComGoogleGsonCommonTestTypes_Nested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_Nested, initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_, primitive1, primitive2)
}

ComGoogleGsonCommonTestTypes_Nested *create_ComGoogleGsonCommonTestTypes_Nested_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive1, ComGoogleGsonCommonTestTypes_BagOfPrimitives *primitive2) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_Nested, initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withComGoogleGsonCommonTestTypes_BagOfPrimitives_, primitive1, primitive2)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_Nested)

@implementation ComGoogleGsonCommonTestTypes_ClassWithTransientFields

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_ClassWithTransientFields_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithLong:(jlong)value {
  ComGoogleGsonCommonTestTypes_ClassWithTransientFields_initWithLong_(self, value);
  return self;
}

- (NSString *)getExpectedJson {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"{"];
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"\"longValue\":["])) appendWithLong:IOSLongArray_Get(nil_chk(longValue_), 0)])) appendWithNSString:@"]"];
  [sb appendWithNSString:@"}"];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(transientT_);
  RELEASE_(longValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithLong:);
  methods[2].selector = @selector(getExpectedJson);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "transientT_", "LNSObject;", .constantValue.asLong = 0, 0x81, -1, -1, 1, -1 },
    { "transientLongValue_", "J", .constantValue.asLong = 0, 0x91, -1, -1, -1, -1 },
    { "longValue_", "[J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "J", "TT;", "LComGoogleGsonCommonTestTypes;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassWithTransientFields = { "ClassWithTransientFields", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 3, 3, 2, -1, -1, 3, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassWithTransientFields;
}

@end

void ComGoogleGsonCommonTestTypes_ClassWithTransientFields_init(ComGoogleGsonCommonTestTypes_ClassWithTransientFields *self) {
  ComGoogleGsonCommonTestTypes_ClassWithTransientFields_initWithLong_(self, 0LL);
}

ComGoogleGsonCommonTestTypes_ClassWithTransientFields *new_ComGoogleGsonCommonTestTypes_ClassWithTransientFields_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithTransientFields, init)
}

ComGoogleGsonCommonTestTypes_ClassWithTransientFields *create_ComGoogleGsonCommonTestTypes_ClassWithTransientFields_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithTransientFields, init)
}

void ComGoogleGsonCommonTestTypes_ClassWithTransientFields_initWithLong_(ComGoogleGsonCommonTestTypes_ClassWithTransientFields *self, jlong value) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->longValue_, [IOSLongArray newArrayWithLongs:(jlong[]){ value } count:1]);
  self->transientLongValue_ = value + 1;
}

ComGoogleGsonCommonTestTypes_ClassWithTransientFields *new_ComGoogleGsonCommonTestTypes_ClassWithTransientFields_initWithLong_(jlong value) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithTransientFields, initWithLong_, value)
}

ComGoogleGsonCommonTestTypes_ClassWithTransientFields *create_ComGoogleGsonCommonTestTypes_ClassWithTransientFields_initWithLong_(jlong value) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithTransientFields, initWithLong_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassWithTransientFields)

@implementation ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithInt:(jint)value {
  ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithInt_(self, value);
  return self;
}

- (instancetype __nonnull)initWithComGoogleGsonCommonTestTypes_BagOfPrimitives:(ComGoogleGsonCommonTestTypes_BagOfPrimitives *)bag
                                                                       withInt:(jint)value {
  ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withInt_(self, bag, value);
  return self;
}

- (ComGoogleGsonCommonTestTypes_BagOfPrimitives *)getBag {
  return bag_;
}

- (NSString *)getExpectedJson {
  return JreStrcat("$$$IC", @"{\"url\":\"", [((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(bag_)) getExpectedJson], @"\",\"value\":", value_, '}');
}

- (jint)getValue {
  return value_;
}

- (void)dealloc {
  RELEASE_(bag_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonCommonTestTypes_BagOfPrimitives;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(initWithComGoogleGsonCommonTestTypes_BagOfPrimitives:withInt:);
  methods[3].selector = @selector(getBag);
  methods[4].selector = @selector(getExpectedJson);
  methods[5].selector = @selector(getValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bag_", "LComGoogleGsonCommonTestTypes_BagOfPrimitives;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "value_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LComGoogleGsonCommonTestTypes_BagOfPrimitives;I", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter = { "ClassWithCustomTypeConverter", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 6, 2, 2, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter;
}

@end

void ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_init(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter *self) {
  ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withInt_(self, create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_init(), 10);
}

ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter *new_ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter, init)
}

ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter *create_ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter, init)
}

void ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithInt_(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter *self, jint value) {
  ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withInt_(self, create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(value, value, false, @""), value);
}

ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter *new_ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithInt_(jint value) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter, initWithInt_, value)
}

ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter *create_ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithInt_(jint value) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter, initWithInt_, value)
}

void ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withInt_(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter *self, ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag, jint value) {
  NSObject_init(self);
  JreStrongAssign(&self->bag_, bag);
  self->value_ = value;
}

ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter *new_ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withInt_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag, jint value) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter, initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withInt_, bag, value)
}

ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter *create_ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withInt_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag, jint value) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter, initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_withInt_, bag, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassWithCustomTypeConverter)

@implementation ComGoogleGsonCommonTestTypes_ArrayOfObjects

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_ArrayOfObjects_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getExpectedJson {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_(@"{\"elements\":[");
  jboolean first = true;
  {
    IOSObjectArray *a__ = elements_;
    ComGoogleGsonCommonTestTypes_BagOfPrimitives * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComGoogleGsonCommonTestTypes_BagOfPrimitives * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComGoogleGsonCommonTestTypes_BagOfPrimitives *element = *b__++;
      if (first) {
        first = false;
      }
      else {
        [sb appendWithNSString:@","];
      }
      [sb appendWithNSString:[((ComGoogleGsonCommonTestTypes_BagOfPrimitives *) nil_chk(element)) getExpectedJson]];
    }
  }
  [sb appendWithNSString:@"]}"];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(elements_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getExpectedJson);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "elements_", "[LComGoogleGsonCommonTestTypes_BagOfPrimitives;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ArrayOfObjects = { "ArrayOfObjects", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 2, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ArrayOfObjects;
}

@end

void ComGoogleGsonCommonTestTypes_ArrayOfObjects_init(ComGoogleGsonCommonTestTypes_ArrayOfObjects *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->elements_, [IOSObjectArray newArrayWithLength:3 type:ComGoogleGsonCommonTestTypes_BagOfPrimitives_class_()]);
  for (jint i = 0; i < self->elements_->size_; ++i) {
    IOSObjectArray_SetAndConsume(self->elements_, i, new_ComGoogleGsonCommonTestTypes_BagOfPrimitives_initWithLong_withInt_withBoolean_withNSString_(i, i + 2, false, JreStrcat("CI", 'i', i)));
  }
}

ComGoogleGsonCommonTestTypes_ArrayOfObjects *new_ComGoogleGsonCommonTestTypes_ArrayOfObjects_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ArrayOfObjects, init)
}

ComGoogleGsonCommonTestTypes_ArrayOfObjects *create_ComGoogleGsonCommonTestTypes_ArrayOfObjects_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ArrayOfObjects, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ArrayOfObjects)

@implementation ComGoogleGsonCommonTestTypes_ClassOverridingEquals

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_ClassOverridingEquals_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getExpectedJson {
  if (ref_ == nil) {
    return @"{}";
  }
  return JreStrcat("$$C", @"{\"ref\":", [ref_ getExpectedJson], '}');
}

- (jboolean)isEqual:(id)obj {
  return true;
}

- (NSUInteger)hash {
  return 1;
}

- (void)dealloc {
  RELEASE_(ref_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getExpectedJson);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ref_", "LComGoogleGsonCommonTestTypes_ClassOverridingEquals;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "equals", "LNSObject;", "hashCode", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassOverridingEquals = { "ClassOverridingEquals", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 4, 1, 3, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassOverridingEquals;
}

@end

void ComGoogleGsonCommonTestTypes_ClassOverridingEquals_init(ComGoogleGsonCommonTestTypes_ClassOverridingEquals *self) {
  NSObject_init(self);
}

ComGoogleGsonCommonTestTypes_ClassOverridingEquals *new_ComGoogleGsonCommonTestTypes_ClassOverridingEquals_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassOverridingEquals, init)
}

ComGoogleGsonCommonTestTypes_ClassOverridingEquals *create_ComGoogleGsonCommonTestTypes_ClassOverridingEquals_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassOverridingEquals, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassOverridingEquals)

@implementation ComGoogleGsonCommonTestTypes_ClassWithArray

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_ClassWithArray_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithNSObjectArray:(IOSObjectArray *)array {
  ComGoogleGsonCommonTestTypes_ClassWithArray_initWithNSObjectArray_(self, array);
  return self;
}

- (void)dealloc {
  RELEASE_(array_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSObjectArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "array_", "[LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSObject;", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassWithArray = { "ClassWithArray", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 2, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassWithArray;
}

@end

void ComGoogleGsonCommonTestTypes_ClassWithArray_init(ComGoogleGsonCommonTestTypes_ClassWithArray *self) {
  NSObject_init(self);
  JreStrongAssign(&self->array_, nil);
}

ComGoogleGsonCommonTestTypes_ClassWithArray *new_ComGoogleGsonCommonTestTypes_ClassWithArray_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithArray, init)
}

ComGoogleGsonCommonTestTypes_ClassWithArray *create_ComGoogleGsonCommonTestTypes_ClassWithArray_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithArray, init)
}

void ComGoogleGsonCommonTestTypes_ClassWithArray_initWithNSObjectArray_(ComGoogleGsonCommonTestTypes_ClassWithArray *self, IOSObjectArray *array) {
  NSObject_init(self);
  JreStrongAssign(&self->array_, array);
}

ComGoogleGsonCommonTestTypes_ClassWithArray *new_ComGoogleGsonCommonTestTypes_ClassWithArray_initWithNSObjectArray_(IOSObjectArray *array) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithArray, initWithNSObjectArray_, array)
}

ComGoogleGsonCommonTestTypes_ClassWithArray *create_ComGoogleGsonCommonTestTypes_ClassWithArray_initWithNSObjectArray_(IOSObjectArray *array) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithArray, initWithNSObjectArray_, array)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassWithArray)

@implementation ComGoogleGsonCommonTestTypes_ClassWithObjects

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_ClassWithObjects_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComGoogleGsonCommonTestTypes_BagOfPrimitives:(ComGoogleGsonCommonTestTypes_BagOfPrimitives *)bag {
  ComGoogleGsonCommonTestTypes_ClassWithObjects_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_(self, bag);
  return self;
}

- (void)dealloc {
  RELEASE_(bag_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComGoogleGsonCommonTestTypes_BagOfPrimitives:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bag_", "LComGoogleGsonCommonTestTypes_BagOfPrimitives;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonCommonTestTypes_BagOfPrimitives;", "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassWithObjects = { "ClassWithObjects", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 2, 1, 1, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassWithObjects;
}

@end

void ComGoogleGsonCommonTestTypes_ClassWithObjects_init(ComGoogleGsonCommonTestTypes_ClassWithObjects *self) {
  ComGoogleGsonCommonTestTypes_ClassWithObjects_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_(self, create_ComGoogleGsonCommonTestTypes_BagOfPrimitives_init());
}

ComGoogleGsonCommonTestTypes_ClassWithObjects *new_ComGoogleGsonCommonTestTypes_ClassWithObjects_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithObjects, init)
}

ComGoogleGsonCommonTestTypes_ClassWithObjects *create_ComGoogleGsonCommonTestTypes_ClassWithObjects_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithObjects, init)
}

void ComGoogleGsonCommonTestTypes_ClassWithObjects_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_ClassWithObjects *self, ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag) {
  NSObject_init(self);
  JreStrongAssign(&self->bag_, bag);
}

ComGoogleGsonCommonTestTypes_ClassWithObjects *new_ComGoogleGsonCommonTestTypes_ClassWithObjects_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithObjects, initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_, bag)
}

ComGoogleGsonCommonTestTypes_ClassWithObjects *create_ComGoogleGsonCommonTestTypes_ClassWithObjects_initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_(ComGoogleGsonCommonTestTypes_BagOfPrimitives *bag) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithObjects, initWithComGoogleGsonCommonTestTypes_BagOfPrimitives_, bag)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassWithObjects)

@implementation ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithInt:(jint)f
                              withInt:(jint)g {
  ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields_initWithInt_withInt_(self, f, g);
  return self;
}

- (NSString *)getExpectedJson {
  return JreStrcat("$I$IC", @"{\"fooBar\":", f_, @",\"Another Foo\":", g_, '}');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:withInt:);
  methods[2].selector = @selector(getExpectedJson);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "f_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, 1 },
    { "g_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, 2 },
  };
  static const void *ptrTable[] = { "II", (void *)&ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields__Annotations$0, (void *)&ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields__Annotations$1, "LComGoogleGsonCommonTestTypes;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields = { "ClassWithSerializedNameFields", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 3, 2, 3, -1, -1, -1, -1 };
  return &_ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields;
}

@end

void ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields_init(ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields *self) {
  ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields_initWithInt_withInt_(self, 1, 4);
}

ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields *new_ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields, init)
}

ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields *create_ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields, init)
}

void ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields_initWithInt_withInt_(ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields *self, jint f, jint g) {
  NSObject_init(self);
  self->f_ = f;
  self->g_ = g;
}

ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields *new_ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields_initWithInt_withInt_(jint f, jint g) {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields, initWithInt_withInt_, f, g)
}

ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields *create_ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields_initWithInt_withInt_(jint f, jint g) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields, initWithInt_withInt_, f, g)
}

IOSObjectArray *ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComGoogleGsonAnnotationsSerializedName(@"fooBar") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComGoogleGsonAnnotationsSerializedName(@"Another Foo") } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_ClassWithSerializedNameFields)

@implementation ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)serializeWithId:(JavaLangLong *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  return create_ComGoogleGsonJsonPrimitive_initWithNSNumber_(JavaLangLong_valueOfWithLong_([((JavaLangLong *) nil_chk(src)) longLongValue] + ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter_DIFFERENCE));
}

- (JavaLangLong *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                  withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
              withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context {
  return JavaLangLong_valueOfWithLong_([((ComGoogleGsonJsonElement *) nil_chk(json)) getAsLong] - ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter_DIFFERENCE);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  methods[2].selector = @selector(deserializeWithComGoogleGsonJsonElement:withJavaLangReflectType:withComGoogleGsonJsonDeserializationContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DIFFERENCE", "J", .constantValue.asLong = ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter_DIFFERENCE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LJavaLangLong;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "deserialize", "LComGoogleGsonJsonElement;LJavaLangReflectType;LComGoogleGsonJsonDeserializationContext;", "LComGoogleGsonJsonParseException;", "LComGoogleGsonCommonTestTypes;", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Ljava/lang/Long;>;Lcom/google/gson/JsonDeserializer<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter = { "CrazyLongTypeAdapter", "com.google.gson.common", ptrTable, methods, fields, 7, 0x9, 3, 1, 5, -1, -1, 6, -1 };
  return &_ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter;
}

@end

void ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter_init(ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter *self) {
  NSObject_init(self);
}

ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter *new_ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter, init)
}

ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter *create_ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonCommonTestTypes_CrazyLongTypeAdapter)
