//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/reflect/TypeTokenTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonReflectTypeTokenTest")
#ifdef RESTRICT_ComGoogleGsonReflectTypeTokenTest
#define INCLUDE_ALL_ComGoogleGsonReflectTypeTokenTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonReflectTypeTokenTest 1
#endif
#undef RESTRICT_ComGoogleGsonReflectTypeTokenTest

#if !defined (ComGoogleGsonReflectTypeTokenTest_) && (INCLUDE_ALL_ComGoogleGsonReflectTypeTokenTest || defined(INCLUDE_ComGoogleGsonReflectTypeTokenTest))
#define ComGoogleGsonReflectTypeTokenTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

@protocol JavaUtilList;

/*!
 @author Jesse Wilson
 */
@interface ComGoogleGsonReflectTypeTokenTest : JunitFrameworkTestCase {
 @public
  id<JavaUtilList> listOfInteger_;
  id<JavaUtilList> listOfNumber_;
  id<JavaUtilList> listOfString_;
  id<JavaUtilList> listOfUnknown_;
  id<JavaUtilList> listOfSetOfString_;
  id<JavaUtilList> listOfSetOfUnknown_;
}

#pragma mark Public

- (instancetype)init;

- (void)testIsAssignableFromRawTypes;

- (void)testIsAssignableFromWithBasicWildcards;

- (void)testIsAssignableFromWithNestedWildcards;

- (void)testIsAssignableFromWithTypeParameters;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonReflectTypeTokenTest)

J2OBJC_FIELD_SETTER(ComGoogleGsonReflectTypeTokenTest, listOfInteger_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonReflectTypeTokenTest, listOfNumber_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonReflectTypeTokenTest, listOfString_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonReflectTypeTokenTest, listOfUnknown_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonReflectTypeTokenTest, listOfSetOfString_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonReflectTypeTokenTest, listOfSetOfUnknown_, id<JavaUtilList>)

FOUNDATION_EXPORT void ComGoogleGsonReflectTypeTokenTest_init(ComGoogleGsonReflectTypeTokenTest *self);

FOUNDATION_EXPORT ComGoogleGsonReflectTypeTokenTest *new_ComGoogleGsonReflectTypeTokenTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonReflectTypeTokenTest *create_ComGoogleGsonReflectTypeTokenTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonReflectTypeTokenTest)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonReflectTypeTokenTest")
