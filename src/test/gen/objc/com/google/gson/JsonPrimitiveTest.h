//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonJsonPrimitiveTest")
#ifdef RESTRICT_ComGoogleGsonJsonPrimitiveTest
#define INCLUDE_ALL_ComGoogleGsonJsonPrimitiveTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonJsonPrimitiveTest 1
#endif
#undef RESTRICT_ComGoogleGsonJsonPrimitiveTest

#if !defined (ComGoogleGsonJsonPrimitiveTest_) && (INCLUDE_ALL_ComGoogleGsonJsonPrimitiveTest || defined(INCLUDE_ComGoogleGsonJsonPrimitiveTest))
#define ComGoogleGsonJsonPrimitiveTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Unit test for the <code>JsonPrimitive</code> class.
 @author Joel Leitch
 */
@interface ComGoogleGsonJsonPrimitiveTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype)init;

- (void)testBoolean;

- (void)testByteEqualsBigInteger;

- (void)testByteEqualsInteger;

- (void)testByteEqualsLong;

- (void)testByteEqualsShort;

- (void)testDeepCopy;

- (void)testDoubleEqualsBigDecimal;

- (void)testEquals;

- (void)testEqualsAcrossTypes;

- (void)testEqualsDoesNotEquateStringAndNonStringTypes;

- (void)testEqualsIntegerAndBigInteger;

- (void)testExponential;

- (void)testFloatEqualsBigDecimal;

- (void)testFloatEqualsDouble;

- (void)testIntegerEqualsBigInteger;

- (void)testIntegerEqualsLong;

- (void)testLongEqualsBigInteger;

- (void)testParsingStringAsBoolean;

- (void)testParsingStringAsNumber;

- (void)testShortEqualsBigInteger;

- (void)testShortEqualsInteger;

- (void)testShortEqualsLong;

- (void)testStringsAndChar;

- (void)testValidJsonOnToString;

// Disallowed inherited constructors, do not use.

- (instancetype)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonJsonPrimitiveTest)

FOUNDATION_EXPORT void ComGoogleGsonJsonPrimitiveTest_init(ComGoogleGsonJsonPrimitiveTest *self);

FOUNDATION_EXPORT ComGoogleGsonJsonPrimitiveTest *new_ComGoogleGsonJsonPrimitiveTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonJsonPrimitiveTest *create_ComGoogleGsonJsonPrimitiveTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonJsonPrimitiveTest)

#endif

#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonJsonPrimitiveTest")
