//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/internal/LinkedTreeMapTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/common/MoreAsserts.h"
#include "com/google/gson/internal/LinkedTreeMap.h"
#include "com/google/gson/internal/LinkedTreeMapTest.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Math.h"
#include "java/lang/NullPointerException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Random.h"
#include "java/util/Set.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonInternalLinkedTreeMapTest ()

- (void)assertIterationOrderWithJavaLangIterable:(id<JavaLangIterable>)actual
                               withNSObjectArray:(IOSObjectArray *)expected;

@end

__attribute__((unused)) static void ComGoogleGsonInternalLinkedTreeMapTest_assertIterationOrderWithJavaLangIterable_withNSObjectArray_(ComGoogleGsonInternalLinkedTreeMapTest *self, id<JavaLangIterable> actual, IOSObjectArray *expected);

@implementation ComGoogleGsonInternalLinkedTreeMapTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonInternalLinkedTreeMapTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testIterationOrder {
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  [map putWithId:@"a" withId:@"android"];
  [map putWithId:@"c" withId:@"cola"];
  [map putWithId:@"b" withId:@"bbq"];
  ComGoogleGsonInternalLinkedTreeMapTest_assertIterationOrderWithJavaLangIterable_withNSObjectArray_(self, [map keySet], [IOSObjectArray arrayWithObjects:(id[]){ @"a", @"c", @"b" } count:3 type:NSString_class_()]);
  ComGoogleGsonInternalLinkedTreeMapTest_assertIterationOrderWithJavaLangIterable_withNSObjectArray_(self, [map values], [IOSObjectArray arrayWithObjects:(id[]){ @"android", @"cola", @"bbq" } count:3 type:NSString_class_()]);
}

- (void)testRemoveRootDoesNotDoubleUnlink {
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  [map putWithId:@"a" withId:@"android"];
  [map putWithId:@"c" withId:@"cola"];
  [map putWithId:@"b" withId:@"bbq"];
  id<JavaUtilIterator> it = [((id<JavaUtilSet>) nil_chk([map entrySet])) iterator];
  [((id<JavaUtilIterator>) nil_chk(it)) next];
  [it next];
  [it next];
  [it remove];
  ComGoogleGsonInternalLinkedTreeMapTest_assertIterationOrderWithJavaLangIterable_withNSObjectArray_(self, [map keySet], [IOSObjectArray arrayWithObjects:(id[]){ @"a", @"c" } count:2 type:NSString_class_()]);
}

- (void)testPutNullKeyFails {
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  @try {
    [map putWithId:nil withId:@"android"];
    JunitFrameworkTestCase_fail();
  }
  @catch (JavaLangNullPointerException *expected) {
  }
}

- (void)testPutNonComparableKeyFails {
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  @try {
    [map putWithId:create_NSObject_init() withId:@"android"];
    JunitFrameworkTestCase_fail();
  }
  @catch (JavaLangClassCastException *expected) {
  }
}

- (void)testContainsNonComparableKeyReturnsFalse {
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  [map putWithId:@"a" withId:@"android"];
  JunitFrameworkTestCase_assertFalseWithBoolean_([map containsKeyWithId:create_NSObject_init()]);
}

- (void)testContainsNullKeyIsAlwaysFalse {
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  [map putWithId:@"a" withId:@"android"];
  JunitFrameworkTestCase_assertFalseWithBoolean_([map containsKeyWithId:nil]);
}

- (void)testPutOverrides {
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  JunitFrameworkTestCase_assertNullWithId_([map putWithId:@"d" withId:@"donut"]);
  JunitFrameworkTestCase_assertNullWithId_([map putWithId:@"e" withId:@"eclair"]);
  JunitFrameworkTestCase_assertNullWithId_([map putWithId:@"f" withId:@"froyo"]);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(3, [map size]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"donut", [map getWithId:@"d"]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"donut", [map putWithId:@"d" withId:@"done"]);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(3, [map size]);
}

- (void)testEmptyStringValues {
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  [map putWithId:@"a" withId:@""];
  JunitFrameworkTestCase_assertTrueWithBoolean_([map containsKeyWithId:@"a"]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"", [map getWithId:@"a"]);
}

- (void)testLargeSetOfRandomKeys {
  JavaUtilRandom *random = create_JavaUtilRandom_initWithLong_(1367593214724LL);
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  IOSObjectArray *keys = [IOSObjectArray arrayWithLength:1000 type:NSString_class_()];
  for (jint i = 0; i < keys->size_; i++) {
    IOSObjectArray_Set(keys, i, JreStrcat("$CI", JavaLangInteger_toStringWithInt_withInt_(JavaLangMath_absWithInt_([random nextInt]), 36), '-', i));
    [map putWithId:IOSObjectArray_Get(keys, i) withId:JreStrcat("I", i)];
  }
  for (jint i = 0; i < keys->size_; i++) {
    NSString *key = IOSObjectArray_Get(keys, i);
    JunitFrameworkTestCase_assertTrueWithBoolean_([map containsKeyWithId:key]);
    JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(JreStrcat("I", i), [map getWithId:key]);
  }
}

- (void)testClear {
  ComGoogleGsonInternalLinkedTreeMap *map = create_ComGoogleGsonInternalLinkedTreeMap_init();
  [map putWithId:@"a" withId:@"android"];
  [map putWithId:@"c" withId:@"cola"];
  [map putWithId:@"b" withId:@"bbq"];
  [map clear];
  ComGoogleGsonInternalLinkedTreeMapTest_assertIterationOrderWithJavaLangIterable_withNSObjectArray_(self, [map keySet], [IOSObjectArray arrayWithLength:0 type:NSString_class_()]);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(0, [map size]);
}

- (void)testEqualsAndHashCode {
  ComGoogleGsonInternalLinkedTreeMap *map1 = create_ComGoogleGsonInternalLinkedTreeMap_init();
  [map1 putWithId:@"A" withId:JavaLangInteger_valueOfWithInt_(1)];
  [map1 putWithId:@"B" withId:JavaLangInteger_valueOfWithInt_(2)];
  [map1 putWithId:@"C" withId:JavaLangInteger_valueOfWithInt_(3)];
  [map1 putWithId:@"D" withId:JavaLangInteger_valueOfWithInt_(4)];
  ComGoogleGsonInternalLinkedTreeMap *map2 = create_ComGoogleGsonInternalLinkedTreeMap_init();
  [map2 putWithId:@"C" withId:JavaLangInteger_valueOfWithInt_(3)];
  [map2 putWithId:@"B" withId:JavaLangInteger_valueOfWithInt_(2)];
  [map2 putWithId:@"D" withId:JavaLangInteger_valueOfWithInt_(4)];
  [map2 putWithId:@"A" withId:JavaLangInteger_valueOfWithInt_(1)];
  ComGoogleGsonCommonMoreAsserts_assertEqualsAndHashCodeWithId_withId_(map1, map2);
}

- (void)assertIterationOrderWithJavaLangIterable:(id<JavaLangIterable>)actual
                               withNSObjectArray:(IOSObjectArray *)expected {
  ComGoogleGsonInternalLinkedTreeMapTest_assertIterationOrderWithJavaLangIterable_withNSObjectArray_(self, actual, expected);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x82, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testIterationOrder);
  methods[2].selector = @selector(testRemoveRootDoesNotDoubleUnlink);
  methods[3].selector = @selector(testPutNullKeyFails);
  methods[4].selector = @selector(testPutNonComparableKeyFails);
  methods[5].selector = @selector(testContainsNonComparableKeyReturnsFalse);
  methods[6].selector = @selector(testContainsNullKeyIsAlwaysFalse);
  methods[7].selector = @selector(testPutOverrides);
  methods[8].selector = @selector(testEmptyStringValues);
  methods[9].selector = @selector(testLargeSetOfRandomKeys);
  methods[10].selector = @selector(testClear);
  methods[11].selector = @selector(testEqualsAndHashCode);
  methods[12].selector = @selector(assertIterationOrderWithJavaLangIterable:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangException;", "assertIterationOrder", "LJavaLangIterable;[LNSObject;", "<T:Ljava/lang/Object;>(Ljava/lang/Iterable<TT;>;[TT;)V" };
  static const J2ObjcClassInfo _ComGoogleGsonInternalLinkedTreeMapTest = { "LinkedTreeMapTest", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x11, 13, 0, -1, -1, -1, -1, -1 };
  return &_ComGoogleGsonInternalLinkedTreeMapTest;
}

@end

void ComGoogleGsonInternalLinkedTreeMapTest_init(ComGoogleGsonInternalLinkedTreeMapTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonInternalLinkedTreeMapTest *new_ComGoogleGsonInternalLinkedTreeMapTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonInternalLinkedTreeMapTest, init)
}

ComGoogleGsonInternalLinkedTreeMapTest *create_ComGoogleGsonInternalLinkedTreeMapTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonInternalLinkedTreeMapTest, init)
}

void ComGoogleGsonInternalLinkedTreeMapTest_assertIterationOrderWithJavaLangIterable_withNSObjectArray_(ComGoogleGsonInternalLinkedTreeMapTest *self, id<JavaLangIterable> actual, IOSObjectArray *expected) {
  JavaUtilArrayList *actualList = create_JavaUtilArrayList_init();
  for (id __strong t in nil_chk(actual)) {
    [actualList addWithId:t];
  }
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_(expected), actualList);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalLinkedTreeMapTest)
