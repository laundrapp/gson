//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/internal/GsonTypesTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/internal/$Gson$Types.h"
#include "com/google/gson/internal/GsonTypesTest.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/util/List.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonInternalGsonTypesTest_1D : NSObject

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalGsonTypesTest_1D)

__attribute__((unused)) static void ComGoogleGsonInternalGsonTypesTest_1D_init(ComGoogleGsonInternalGsonTypesTest_1D *self);

__attribute__((unused)) static ComGoogleGsonInternalGsonTypesTest_1D *new_ComGoogleGsonInternalGsonTypesTest_1D_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonInternalGsonTypesTest_1D *create_ComGoogleGsonInternalGsonTypesTest_1D_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalGsonTypesTest_1D)

@interface ComGoogleGsonInternalGsonTypesTest_A : NSObject

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalGsonTypesTest_A)

__attribute__((unused)) static void ComGoogleGsonInternalGsonTypesTest_A_init(ComGoogleGsonInternalGsonTypesTest_A *self);

__attribute__((unused)) static ComGoogleGsonInternalGsonTypesTest_A *new_ComGoogleGsonInternalGsonTypesTest_A_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonInternalGsonTypesTest_A *create_ComGoogleGsonInternalGsonTypesTest_A_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalGsonTypesTest_A)

@interface ComGoogleGsonInternalGsonTypesTest_B : NSObject

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalGsonTypesTest_B)

__attribute__((unused)) static void ComGoogleGsonInternalGsonTypesTest_B_init(ComGoogleGsonInternalGsonTypesTest_B *self);

__attribute__((unused)) static ComGoogleGsonInternalGsonTypesTest_B *new_ComGoogleGsonInternalGsonTypesTest_B_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonInternalGsonTypesTest_B *create_ComGoogleGsonInternalGsonTypesTest_B_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalGsonTypesTest_B)

@interface ComGoogleGsonInternalGsonTypesTest_C : NSObject

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalGsonTypesTest_C)

__attribute__((unused)) static void ComGoogleGsonInternalGsonTypesTest_C_init(ComGoogleGsonInternalGsonTypesTest_C *self);

__attribute__((unused)) static ComGoogleGsonInternalGsonTypesTest_C *new_ComGoogleGsonInternalGsonTypesTest_C_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonInternalGsonTypesTest_C *create_ComGoogleGsonInternalGsonTypesTest_C_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalGsonTypesTest_C)

@implementation ComGoogleGsonInternalGsonTypesTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonInternalGsonTypesTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testNewParameterizedTypeWithoutOwner {
  id<JavaLangReflectType> type = ComGoogleGsonInternal_Gson_Types_newParameterizedTypeWithOwnerWithJavaLangReflectType_withJavaLangReflectType_withJavaLangReflectTypeArray_(nil, JavaUtilList_class_(), [IOSObjectArray arrayWithObjects:(id[]){ ComGoogleGsonInternalGsonTypesTest_A_class_() } count:1 type:JavaLangReflectType_class_()]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(ComGoogleGsonInternalGsonTypesTest_A_class_(), ComGoogleGsonInternalGsonTypesTest_getFirstTypeArgumentWithJavaLangReflectType_(type));
  type = ComGoogleGsonInternal_Gson_Types_newParameterizedTypeWithOwnerWithJavaLangReflectType_withJavaLangReflectType_withJavaLangReflectTypeArray_(nil, ComGoogleGsonInternalGsonTypesTest_A_class_(), [IOSObjectArray arrayWithObjects:(id[]){ ComGoogleGsonInternalGsonTypesTest_B_class_() } count:1 type:JavaLangReflectType_class_()]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(ComGoogleGsonInternalGsonTypesTest_B_class_(), ComGoogleGsonInternalGsonTypesTest_getFirstTypeArgumentWithJavaLangReflectType_(type));
  @try {
    ComGoogleGsonInternal_Gson_Types_newParameterizedTypeWithOwnerWithJavaLangReflectType_withJavaLangReflectType_withJavaLangReflectTypeArray_(nil, ComGoogleGsonInternalGsonTypesTest_1D_class_(), [IOSObjectArray arrayWithObjects:(id[]){ ComGoogleGsonInternalGsonTypesTest_A_class_() } count:1 type:JavaLangReflectType_class_()]);
    JunitFrameworkTestCase_fail();
  }
  @catch (JavaLangIllegalArgumentException *expected) {
  }
  type = ComGoogleGsonInternal_Gson_Types_newParameterizedTypeWithOwnerWithJavaLangReflectType_withJavaLangReflectType_withJavaLangReflectTypeArray_(nil, ComGoogleGsonInternalGsonTypesTest_A_class_(), [IOSObjectArray arrayWithObjects:(id[]){ ComGoogleGsonInternalGsonTypesTest_1D_class_() } count:1 type:JavaLangReflectType_class_()]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(ComGoogleGsonInternalGsonTypesTest_1D_class_(), ComGoogleGsonInternalGsonTypesTest_getFirstTypeArgumentWithJavaLangReflectType_(type));
}

- (void)testGetFirstTypeArgument {
  JunitFrameworkTestCase_assertNullWithId_(ComGoogleGsonInternalGsonTypesTest_getFirstTypeArgumentWithJavaLangReflectType_(ComGoogleGsonInternalGsonTypesTest_A_class_()));
  id<JavaLangReflectType> type = ComGoogleGsonInternal_Gson_Types_newParameterizedTypeWithOwnerWithJavaLangReflectType_withJavaLangReflectType_withJavaLangReflectTypeArray_(nil, ComGoogleGsonInternalGsonTypesTest_A_class_(), [IOSObjectArray arrayWithObjects:(id[]){ ComGoogleGsonInternalGsonTypesTest_B_class_(), ComGoogleGsonInternalGsonTypesTest_C_class_() } count:2 type:JavaLangReflectType_class_()]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(ComGoogleGsonInternalGsonTypesTest_B_class_(), ComGoogleGsonInternalGsonTypesTest_getFirstTypeArgumentWithJavaLangReflectType_(type));
}

+ (id<JavaLangReflectType>)getFirstTypeArgumentWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return ComGoogleGsonInternalGsonTypesTest_getFirstTypeArgumentWithJavaLangReflectType_(type);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x9, 1, 2, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testNewParameterizedTypeWithoutOwner);
  methods[2].selector = @selector(testGetFirstTypeArgument);
  methods[3].selector = @selector(getFirstTypeArgumentWithJavaLangReflectType:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangException;", "getFirstTypeArgument", "LJavaLangReflectType;", "LComGoogleGsonInternalGsonTypesTest_A;LComGoogleGsonInternalGsonTypesTest_B;LComGoogleGsonInternalGsonTypesTest_C;" };
  static const J2ObjcClassInfo _ComGoogleGsonInternalGsonTypesTest = { "GsonTypesTest", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x11, 4, 0, -1, 3, -1, -1, -1 };
  return &_ComGoogleGsonInternalGsonTypesTest;
}

@end

void ComGoogleGsonInternalGsonTypesTest_init(ComGoogleGsonInternalGsonTypesTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonInternalGsonTypesTest *new_ComGoogleGsonInternalGsonTypesTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonInternalGsonTypesTest, init)
}

ComGoogleGsonInternalGsonTypesTest *create_ComGoogleGsonInternalGsonTypesTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonInternalGsonTypesTest, init)
}

id<JavaLangReflectType> ComGoogleGsonInternalGsonTypesTest_getFirstTypeArgumentWithJavaLangReflectType_(id<JavaLangReflectType> type) {
  ComGoogleGsonInternalGsonTypesTest_initialize();
  if (!([JavaLangReflectParameterizedType_class_() isInstance:type])) return nil;
  id<JavaLangReflectParameterizedType> ptype = (id<JavaLangReflectParameterizedType>) cast_check(type, JavaLangReflectParameterizedType_class_());
  IOSObjectArray *actualTypeArguments = [((id<JavaLangReflectParameterizedType>) nil_chk(ptype)) getActualTypeArguments];
  if (((IOSObjectArray *) nil_chk(actualTypeArguments))->size_ == 0) return nil;
  return ComGoogleGsonInternal_Gson_Types_canonicalizeWithJavaLangReflectType_(IOSObjectArray_Get(actualTypeArguments, 0));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalGsonTypesTest)

@implementation ComGoogleGsonInternalGsonTypesTest_1D

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonInternalGsonTypesTest_1D_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonInternalGsonTypesTest;", "testNewParameterizedTypeWithoutOwner" };
  static const J2ObjcClassInfo _ComGoogleGsonInternalGsonTypesTest_1D = { "D", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x10, 1, 0, 0, -1, 1, -1, -1 };
  return &_ComGoogleGsonInternalGsonTypesTest_1D;
}

@end

void ComGoogleGsonInternalGsonTypesTest_1D_init(ComGoogleGsonInternalGsonTypesTest_1D *self) {
  NSObject_init(self);
}

ComGoogleGsonInternalGsonTypesTest_1D *new_ComGoogleGsonInternalGsonTypesTest_1D_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonInternalGsonTypesTest_1D, init)
}

ComGoogleGsonInternalGsonTypesTest_1D *create_ComGoogleGsonInternalGsonTypesTest_1D_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonInternalGsonTypesTest_1D, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalGsonTypesTest_1D)

@implementation ComGoogleGsonInternalGsonTypesTest_A

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonInternalGsonTypesTest_A_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonInternalGsonTypesTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonInternalGsonTypesTest_A = { "A", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x1a, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonInternalGsonTypesTest_A;
}

@end

void ComGoogleGsonInternalGsonTypesTest_A_init(ComGoogleGsonInternalGsonTypesTest_A *self) {
  NSObject_init(self);
}

ComGoogleGsonInternalGsonTypesTest_A *new_ComGoogleGsonInternalGsonTypesTest_A_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonInternalGsonTypesTest_A, init)
}

ComGoogleGsonInternalGsonTypesTest_A *create_ComGoogleGsonInternalGsonTypesTest_A_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonInternalGsonTypesTest_A, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalGsonTypesTest_A)

@implementation ComGoogleGsonInternalGsonTypesTest_B

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonInternalGsonTypesTest_B_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonInternalGsonTypesTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonInternalGsonTypesTest_B = { "B", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x1a, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonInternalGsonTypesTest_B;
}

@end

void ComGoogleGsonInternalGsonTypesTest_B_init(ComGoogleGsonInternalGsonTypesTest_B *self) {
  NSObject_init(self);
}

ComGoogleGsonInternalGsonTypesTest_B *new_ComGoogleGsonInternalGsonTypesTest_B_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonInternalGsonTypesTest_B, init)
}

ComGoogleGsonInternalGsonTypesTest_B *create_ComGoogleGsonInternalGsonTypesTest_B_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonInternalGsonTypesTest_B, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalGsonTypesTest_B)

@implementation ComGoogleGsonInternalGsonTypesTest_C

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonInternalGsonTypesTest_C_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonInternalGsonTypesTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonInternalGsonTypesTest_C = { "C", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x1a, 1, 0, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonInternalGsonTypesTest_C;
}

@end

void ComGoogleGsonInternalGsonTypesTest_C_init(ComGoogleGsonInternalGsonTypesTest_C *self) {
  NSObject_init(self);
}

ComGoogleGsonInternalGsonTypesTest_C *new_ComGoogleGsonInternalGsonTypesTest_C_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonInternalGsonTypesTest_C, init)
}

ComGoogleGsonInternalGsonTypesTest_C *create_ComGoogleGsonInternalGsonTypesTest_C_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonInternalGsonTypesTest_C, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalGsonTypesTest_C)
