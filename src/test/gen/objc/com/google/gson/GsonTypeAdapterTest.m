//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/GsonBuilder.h"
#include "com/google/gson/GsonTypeAdapterTest.h"
#include "com/google/gson/JsonDeserializationContext.h"
#include "com/google/gson/JsonDeserializer.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonParseException.h"
#include "com/google/gson/JsonPrimitive.h"
#include "com/google/gson/JsonSerializationContext.h"
#include "com/google/gson/JsonSerializer.h"
#include "java/lang/AssertionError.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/reflect/Type.h"
#include "java/math/BigInteger.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonGsonTypeAdapterTest () {
 @public
  ComGoogleGsonGson *gson_;
}

- (void)assertSerializedWithNSString:(NSString *)expected
                        withIOSClass:(IOSClass *)instanceType
                         withBoolean:(jboolean)registerAbstractDeserializer
                         withBoolean:(jboolean)registerAbstractHierarchyDeserializer
                              withId:(id)instance;

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonGsonTypeAdapterTest, gson_, ComGoogleGsonGson *)

__attribute__((unused)) static void ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(ComGoogleGsonGsonTypeAdapterTest *self, NSString *expected, IOSClass *instanceType, jboolean registerAbstractDeserializer, jboolean registerAbstractHierarchyDeserializer, id instance);

@interface ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter : NSObject < ComGoogleGsonJsonSerializer, ComGoogleGsonJsonDeserializer >

- (instancetype __nonnull)init;

- (ComGoogleGsonJsonElement *)serializeWithId:(JavaUtilConcurrentAtomicAtomicLong *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context;

- (JavaUtilConcurrentAtomicAtomicLong *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                                        withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
                                    withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter)

__attribute__((unused)) static void ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter_init(ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter *self);

__attribute__((unused)) static ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter *new_ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter *create_ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter)

@interface ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter : NSObject < ComGoogleGsonJsonSerializer, ComGoogleGsonJsonDeserializer >

- (instancetype __nonnull)init;

- (ComGoogleGsonJsonElement *)serializeWithId:(JavaUtilConcurrentAtomicAtomicInteger *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context;

- (JavaUtilConcurrentAtomicAtomicInteger *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                                           withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
                                       withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter)

__attribute__((unused)) static void ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter_init(ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter *self);

__attribute__((unused)) static ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter *new_ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter *create_ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter)

@interface ComGoogleGsonGsonTypeAdapterTest_1 : NSObject < ComGoogleGsonJsonDeserializer >

- (instancetype __nonnull)init;

- (ComGoogleGsonGsonTypeAdapterTest_Abstract *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                                               withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
                                           withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGsonTypeAdapterTest_1)

__attribute__((unused)) static void ComGoogleGsonGsonTypeAdapterTest_1_init(ComGoogleGsonGsonTypeAdapterTest_1 *self);

__attribute__((unused)) static ComGoogleGsonGsonTypeAdapterTest_1 *new_ComGoogleGsonGsonTypeAdapterTest_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGsonTypeAdapterTest_1 *create_ComGoogleGsonGsonTypeAdapterTest_1_init(void);

@implementation ComGoogleGsonGsonTypeAdapterTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonTypeAdapterTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssign(&gson_, [((ComGoogleGsonGsonBuilder *) nil_chk([((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:JavaUtilConcurrentAtomicAtomicLong_class_() withId:create_ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter_init()])) registerTypeAdapterWithJavaLangReflectType:JavaUtilConcurrentAtomicAtomicInteger_class_() withId:create_ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter_init()])) create]);
}

- (void)testDefaultTypeAdapterThrowsParseException {
  @try {
    [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"abc\":123}" withIOSClass:JavaMathBigInteger_class_()];
    JunitFrameworkTestCase_failWithNSString_(@"Should have thrown a JsonParseException");
  }
  @catch (ComGoogleGsonJsonParseException *expected) {
  }
}

- (void)testTypeAdapterThrowsException {
  @try {
    [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:create_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(0)];
    JunitFrameworkTestCase_failWithNSString_(@"Type Adapter should have thrown an exception");
  }
  @catch (JavaLangIllegalStateException *expected) {
  }
  @try {
    [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"123" withIOSClass:JavaUtilConcurrentAtomicAtomicLong_class_()];
    JunitFrameworkTestCase_failWithNSString_(@"Type Adapter should have thrown an exception");
  }
  @catch (ComGoogleGsonJsonParseException *expected) {
  }
}

- (void)testTypeAdapterProperlyConvertsTypes {
  jint intialValue = 1;
  JavaUtilConcurrentAtomicAtomicInteger *atomicInt = create_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(intialValue);
  NSString *json = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:atomicInt];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(intialValue + 1, JavaLangInteger_parseIntWithNSString_(json));
  atomicInt = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:json withIOSClass:JavaUtilConcurrentAtomicAtomicInteger_class_()];
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(intialValue, [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(atomicInt)) get]);
}

- (void)testTypeAdapterDoesNotAffectNonAdaptedTypes {
  NSString *expected = @"blah";
  NSString *actual = [((ComGoogleGsonGson *) nil_chk(gson_)) toJsonWithId:expected];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(JreStrcat("C$C", '"', expected, '"'), actual);
  actual = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:actual withIOSClass:NSString_class_()];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expected, actual);
}

- (void)testDeserializerForAbstractClass {
  ComGoogleGsonGsonTypeAdapterTest_Concrete *instance = create_ComGoogleGsonGsonTypeAdapterTest_Concrete_init();
  JreStrongAssign(&instance->a_, @"android");
  JreStrongAssign(&instance->b_, @"beep");
  ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(self, @"{\"a\":\"android\"}", ComGoogleGsonGsonTypeAdapterTest_Abstract_class_(), true, true, instance);
  ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(self, @"{\"a\":\"android\"}", ComGoogleGsonGsonTypeAdapterTest_Abstract_class_(), true, false, instance);
  ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(self, @"{\"a\":\"android\"}", ComGoogleGsonGsonTypeAdapterTest_Abstract_class_(), false, true, instance);
  ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(self, @"{\"a\":\"android\"}", ComGoogleGsonGsonTypeAdapterTest_Abstract_class_(), false, false, instance);
  ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(self, @"{\"b\":\"beep\",\"a\":\"android\"}", ComGoogleGsonGsonTypeAdapterTest_Concrete_class_(), true, true, instance);
  ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(self, @"{\"b\":\"beep\",\"a\":\"android\"}", ComGoogleGsonGsonTypeAdapterTest_Concrete_class_(), true, false, instance);
  ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(self, @"{\"b\":\"beep\",\"a\":\"android\"}", ComGoogleGsonGsonTypeAdapterTest_Concrete_class_(), false, true, instance);
  ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(self, @"{\"b\":\"beep\",\"a\":\"android\"}", ComGoogleGsonGsonTypeAdapterTest_Concrete_class_(), false, false, instance);
}

- (void)assertSerializedWithNSString:(NSString *)expected
                        withIOSClass:(IOSClass *)instanceType
                         withBoolean:(jboolean)registerAbstractDeserializer
                         withBoolean:(jboolean)registerAbstractHierarchyDeserializer
                              withId:(id)instance {
  ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(self, expected, instanceType, registerAbstractDeserializer, registerAbstractHierarchyDeserializer, instance);
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testDefaultTypeAdapterThrowsParseException);
  methods[3].selector = @selector(testTypeAdapterThrowsException);
  methods[4].selector = @selector(testTypeAdapterProperlyConvertsTypes);
  methods[5].selector = @selector(testTypeAdapterDoesNotAffectNonAdaptedTypes);
  methods[6].selector = @selector(testDeserializerForAbstractClass);
  methods[7].selector = @selector(assertSerializedWithNSString:withIOSClass:withBoolean:withBoolean:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "assertSerialized", "LNSString;LIOSClass;ZZLNSObject;", "(Ljava/lang/String;Ljava/lang/Class<*>;ZZLjava/lang/Object;)V", "LComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter;LComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter;LComGoogleGsonGsonTypeAdapterTest_Abstract;LComGoogleGsonGsonTypeAdapterTest_Concrete;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonTypeAdapterTest = { "GsonTypeAdapterTest", "com.google.gson", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, 4, -1, -1, -1 };
  return &_ComGoogleGsonGsonTypeAdapterTest;
}

@end

void ComGoogleGsonGsonTypeAdapterTest_init(ComGoogleGsonGsonTypeAdapterTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonGsonTypeAdapterTest *new_ComGoogleGsonGsonTypeAdapterTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGsonTypeAdapterTest, init)
}

ComGoogleGsonGsonTypeAdapterTest *create_ComGoogleGsonGsonTypeAdapterTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGsonTypeAdapterTest, init)
}

void ComGoogleGsonGsonTypeAdapterTest_assertSerializedWithNSString_withIOSClass_withBoolean_withBoolean_withId_(ComGoogleGsonGsonTypeAdapterTest *self, NSString *expected, IOSClass *instanceType, jboolean registerAbstractDeserializer, jboolean registerAbstractHierarchyDeserializer, id instance) {
  id<ComGoogleGsonJsonDeserializer> deserializer = create_ComGoogleGsonGsonTypeAdapterTest_1_init();
  ComGoogleGsonGsonBuilder *builder = create_ComGoogleGsonGsonBuilder_init();
  if (registerAbstractDeserializer) {
    [builder registerTypeAdapterWithJavaLangReflectType:ComGoogleGsonGsonTypeAdapterTest_Abstract_class_() withId:deserializer];
  }
  if (registerAbstractHierarchyDeserializer) {
    [builder registerTypeHierarchyAdapterWithIOSClass:ComGoogleGsonGsonTypeAdapterTest_Abstract_class_() withId:deserializer];
  }
  ComGoogleGsonGson *gson = [builder create];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(expected, [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:instance withJavaLangReflectType:instanceType]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGsonTypeAdapterTest)

@implementation ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)serializeWithId:(JavaUtilConcurrentAtomicAtomicLong *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  @throw create_JavaLangIllegalStateException_init();
}

- (JavaUtilConcurrentAtomicAtomicLong *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                                        withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
                                    withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context {
  @throw create_JavaLangIllegalStateException_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicLong;", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  methods[2].selector = @selector(deserializeWithComGoogleGsonJsonElement:withJavaLangReflectType:withComGoogleGsonJsonDeserializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "serialize", "LJavaUtilConcurrentAtomicAtomicLong;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "deserialize", "LComGoogleGsonJsonElement;LJavaLangReflectType;LComGoogleGsonJsonDeserializationContext;", "LComGoogleGsonJsonParseException;", "LComGoogleGsonGsonTypeAdapterTest;", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Ljava/util/concurrent/atomic/AtomicLong;>;Lcom/google/gson/JsonDeserializer<Ljava/util/concurrent/atomic/AtomicLong;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter = { "ExceptionTypeAdapter", "com.google.gson", ptrTable, methods, NULL, 7, 0xa, 3, 0, 5, -1, -1, 6, -1 };
  return &_ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter;
}

@end

void ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter_init(ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter *self) {
  NSObject_init(self);
}

ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter *new_ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter, init)
}

ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter *create_ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGsonTypeAdapterTest_ExceptionTypeAdapter)

@implementation ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonJsonElement *)serializeWithId:(JavaUtilConcurrentAtomicAtomicInteger *)src
                      withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withComGoogleGsonJsonSerializationContext:(id<ComGoogleGsonJsonSerializationContext>)context {
  return create_ComGoogleGsonJsonPrimitive_initWithNSNumber_(JavaLangInteger_valueOfWithInt_([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(src)) incrementAndGet]));
}

- (JavaUtilConcurrentAtomicAtomicInteger *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                                           withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
                                       withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context {
  jint intValue = [((ComGoogleGsonJsonElement *) nil_chk(json)) getAsInt];
  return create_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(--intValue);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonJsonElement;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilConcurrentAtomicAtomicInteger;", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withJavaLangReflectType:withComGoogleGsonJsonSerializationContext:);
  methods[2].selector = @selector(deserializeWithComGoogleGsonJsonElement:withJavaLangReflectType:withComGoogleGsonJsonDeserializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "serialize", "LJavaUtilConcurrentAtomicAtomicInteger;LJavaLangReflectType;LComGoogleGsonJsonSerializationContext;", "deserialize", "LComGoogleGsonJsonElement;LJavaLangReflectType;LComGoogleGsonJsonDeserializationContext;", "LComGoogleGsonJsonParseException;", "LComGoogleGsonGsonTypeAdapterTest;", "Ljava/lang/Object;Lcom/google/gson/JsonSerializer<Ljava/util/concurrent/atomic/AtomicInteger;>;Lcom/google/gson/JsonDeserializer<Ljava/util/concurrent/atomic/AtomicInteger;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter = { "AtomicIntegerTypeAdapter", "com.google.gson", ptrTable, methods, NULL, 7, 0xa, 3, 0, 5, -1, -1, 6, -1 };
  return &_ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter;
}

@end

void ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter_init(ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter *self) {
  NSObject_init(self);
}

ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter *new_ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter, init)
}

ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter *create_ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGsonTypeAdapterTest_AtomicIntegerTypeAdapter)

@implementation ComGoogleGsonGsonTypeAdapterTest_Abstract

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonTypeAdapterTest_Abstract_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(a_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "a_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonGsonTypeAdapterTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonTypeAdapterTest_Abstract = { "Abstract", "com.google.gson", ptrTable, methods, fields, 7, 0x408, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonGsonTypeAdapterTest_Abstract;
}

@end

void ComGoogleGsonGsonTypeAdapterTest_Abstract_init(ComGoogleGsonGsonTypeAdapterTest_Abstract *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGsonTypeAdapterTest_Abstract)

@implementation ComGoogleGsonGsonTypeAdapterTest_Concrete

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonTypeAdapterTest_Concrete_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(b_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "b_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonGsonTypeAdapterTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonTypeAdapterTest_Concrete = { "Concrete", "com.google.gson", ptrTable, methods, fields, 7, 0x8, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonGsonTypeAdapterTest_Concrete;
}

@end

void ComGoogleGsonGsonTypeAdapterTest_Concrete_init(ComGoogleGsonGsonTypeAdapterTest_Concrete *self) {
  ComGoogleGsonGsonTypeAdapterTest_Abstract_init(self);
}

ComGoogleGsonGsonTypeAdapterTest_Concrete *new_ComGoogleGsonGsonTypeAdapterTest_Concrete_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGsonTypeAdapterTest_Concrete, init)
}

ComGoogleGsonGsonTypeAdapterTest_Concrete *create_ComGoogleGsonGsonTypeAdapterTest_Concrete_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGsonTypeAdapterTest_Concrete, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGsonTypeAdapterTest_Concrete)

@implementation ComGoogleGsonGsonTypeAdapterTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonTypeAdapterTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComGoogleGsonGsonTypeAdapterTest_Abstract *)deserializeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)json
                                                               withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
                                           withComGoogleGsonJsonDeserializationContext:(id<ComGoogleGsonJsonDeserializationContext>)context {
  @throw create_JavaLangAssertionError_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComGoogleGsonGsonTypeAdapterTest_Abstract;", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(deserializeWithComGoogleGsonJsonElement:withJavaLangReflectType:withComGoogleGsonJsonDeserializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "deserialize", "LComGoogleGsonJsonElement;LJavaLangReflectType;LComGoogleGsonJsonDeserializationContext;", "LComGoogleGsonJsonParseException;", "LComGoogleGsonGsonTypeAdapterTest;", "assertSerializedWithNSString:withIOSClass:withBoolean:withBoolean:withId:", "Ljava/lang/Object;Lcom/google/gson/JsonDeserializer<Lcom/google/gson/GsonTypeAdapterTest$Abstract;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonTypeAdapterTest_1 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, 4, 5, -1 };
  return &_ComGoogleGsonGsonTypeAdapterTest_1;
}

@end

void ComGoogleGsonGsonTypeAdapterTest_1_init(ComGoogleGsonGsonTypeAdapterTest_1 *self) {
  NSObject_init(self);
}

ComGoogleGsonGsonTypeAdapterTest_1 *new_ComGoogleGsonGsonTypeAdapterTest_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGsonTypeAdapterTest_1, init)
}

ComGoogleGsonGsonTypeAdapterTest_1 *create_ComGoogleGsonGsonTypeAdapterTest_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGsonTypeAdapterTest_1, init)
}
