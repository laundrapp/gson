//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/JavaSerializationTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/JavaSerializationTest.h"
#include "com/google/gson/reflect/TypeToken.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/lang/Double.h"
#include "java/lang/reflect/Type.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonJavaSerializationTest () {
 @public
  ComGoogleGsonGson *gson_;
}

- (id)serializedCopyWithId:(id)object;

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonJavaSerializationTest, gson_, ComGoogleGsonGson *)

__attribute__((unused)) static id ComGoogleGsonJavaSerializationTest_serializedCopyWithId_(ComGoogleGsonJavaSerializationTest *self, id object);

@interface ComGoogleGsonJavaSerializationTest_1 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonJavaSerializationTest_1)

__attribute__((unused)) static void ComGoogleGsonJavaSerializationTest_1_init(ComGoogleGsonJavaSerializationTest_1 *self);

__attribute__((unused)) static ComGoogleGsonJavaSerializationTest_1 *new_ComGoogleGsonJavaSerializationTest_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonJavaSerializationTest_1 *create_ComGoogleGsonJavaSerializationTest_1_init(void);

@interface ComGoogleGsonJavaSerializationTest_2 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonJavaSerializationTest_2)

__attribute__((unused)) static void ComGoogleGsonJavaSerializationTest_2_init(ComGoogleGsonJavaSerializationTest_2 *self);

__attribute__((unused)) static ComGoogleGsonJavaSerializationTest_2 *new_ComGoogleGsonJavaSerializationTest_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonJavaSerializationTest_2 *create_ComGoogleGsonJavaSerializationTest_2_init(void);

@interface ComGoogleGsonJavaSerializationTest_3 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonJavaSerializationTest_3)

__attribute__((unused)) static void ComGoogleGsonJavaSerializationTest_3_init(ComGoogleGsonJavaSerializationTest_3 *self);

__attribute__((unused)) static ComGoogleGsonJavaSerializationTest_3 *new_ComGoogleGsonJavaSerializationTest_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonJavaSerializationTest_3 *create_ComGoogleGsonJavaSerializationTest_3_init(void);

@implementation ComGoogleGsonJavaSerializationTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonJavaSerializationTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testMapIsSerializable {
  id<JavaLangReflectType> type = [create_ComGoogleGsonJavaSerializationTest_1_init() getType];
  id<JavaUtilMap> map = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"{\"b\":1,\"c\":2,\"a\":3}" withJavaLangReflectType:type];
  id<JavaUtilMap> serialized = ComGoogleGsonJavaSerializationTest_serializedCopyWithId_(self, map);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(map, serialized);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ @"b", @"c", @"a" } count:3 type:NSString_class_()]), create_JavaUtilArrayList_initWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(serialized)) keySet]));
}

- (void)testListIsSerializable {
  id<JavaLangReflectType> type = [create_ComGoogleGsonJavaSerializationTest_2_init() getType];
  id<JavaUtilList> list = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"[\"a\",\"b\",\"c\"]" withJavaLangReflectType:type];
  id<JavaUtilList> serialized = ComGoogleGsonJavaSerializationTest_serializedCopyWithId_(self, list);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(list, serialized);
}

- (void)testNumberIsSerializable {
  id<JavaLangReflectType> type = [create_ComGoogleGsonJavaSerializationTest_3_init() getType];
  id<JavaUtilList> list = [((ComGoogleGsonGson *) nil_chk(gson_)) fromJsonWithNSString:@"[1,3.14,6.673e-11]" withJavaLangReflectType:type];
  id<JavaUtilList> serialized = ComGoogleGsonJavaSerializationTest_serializedCopyWithId_(self, list);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaLangDouble_valueOfWithDouble_(1.0), JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk([((id<JavaUtilList>) nil_chk(serialized)) getWithInt:0])) doubleValue]));
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaLangDouble_valueOfWithDouble_(3.14), JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk([serialized getWithInt:1])) doubleValue]));
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaLangDouble_valueOfWithDouble_(6.673e-11), JavaLangDouble_valueOfWithDouble_([((NSNumber *) nil_chk([serialized getWithInt:2])) doubleValue]));
}

- (id)serializedCopyWithId:(id)object {
  return ComGoogleGsonJavaSerializationTest_serializedCopyWithId_(self, object);
}

- (void)dealloc {
  RELEASE_(gson_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 1, 2, 3, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testMapIsSerializable);
  methods[2].selector = @selector(testListIsSerializable);
  methods[3].selector = @selector(testNumberIsSerializable);
  methods[4].selector = @selector(serializedCopyWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "serializedCopy", "LNSObject;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "<T:Ljava/lang/Object;>(TT;)TT;" };
  static const J2ObjcClassInfo _ComGoogleGsonJavaSerializationTest = { "JavaSerializationTest", "com.google.gson", ptrTable, methods, fields, 7, 0x11, 5, 1, -1, -1, -1, -1, -1 };
  return &_ComGoogleGsonJavaSerializationTest;
}

@end

void ComGoogleGsonJavaSerializationTest_init(ComGoogleGsonJavaSerializationTest *self) {
  JunitFrameworkTestCase_init(self);
  JreStrongAssignAndConsume(&self->gson_, new_ComGoogleGsonGson_init());
}

ComGoogleGsonJavaSerializationTest *new_ComGoogleGsonJavaSerializationTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonJavaSerializationTest, init)
}

ComGoogleGsonJavaSerializationTest *create_ComGoogleGsonJavaSerializationTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonJavaSerializationTest, init)
}

id ComGoogleGsonJavaSerializationTest_serializedCopyWithId_(ComGoogleGsonJavaSerializationTest *self, id object) {
  JavaIoByteArrayOutputStream *bytesOut = create_JavaIoByteArrayOutputStream_init();
  JavaIoObjectOutputStream *out = create_JavaIoObjectOutputStream_initWithJavaIoOutputStream_(bytesOut);
  [out writeObjectWithId:object];
  [out close];
  JavaIoByteArrayInputStream *bytesIn = create_JavaIoByteArrayInputStream_initWithByteArray_([bytesOut toByteArray]);
  JavaIoObjectInputStream *in = create_JavaIoObjectInputStream_initWithJavaIoInputStream_(bytesIn);
  return [in readObject];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonJavaSerializationTest)

@implementation ComGoogleGsonJavaSerializationTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonJavaSerializationTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonJavaSerializationTest;", "testMapIsSerializable", "Lcom/google/gson/reflect/TypeToken<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Integer;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonJavaSerializationTest_1 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonJavaSerializationTest_1;
}

@end

void ComGoogleGsonJavaSerializationTest_1_init(ComGoogleGsonJavaSerializationTest_1 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonJavaSerializationTest_1 *new_ComGoogleGsonJavaSerializationTest_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonJavaSerializationTest_1, init)
}

ComGoogleGsonJavaSerializationTest_1 *create_ComGoogleGsonJavaSerializationTest_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonJavaSerializationTest_1, init)
}

@implementation ComGoogleGsonJavaSerializationTest_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonJavaSerializationTest_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonJavaSerializationTest;", "testListIsSerializable", "Lcom/google/gson/reflect/TypeToken<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonJavaSerializationTest_2 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonJavaSerializationTest_2;
}

@end

void ComGoogleGsonJavaSerializationTest_2_init(ComGoogleGsonJavaSerializationTest_2 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonJavaSerializationTest_2 *new_ComGoogleGsonJavaSerializationTest_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonJavaSerializationTest_2, init)
}

ComGoogleGsonJavaSerializationTest_2 *create_ComGoogleGsonJavaSerializationTest_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonJavaSerializationTest_2, init)
}

@implementation ComGoogleGsonJavaSerializationTest_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonJavaSerializationTest_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonJavaSerializationTest;", "testNumberIsSerializable", "Lcom/google/gson/reflect/TypeToken<Ljava/util/List<Ljava/lang/Number;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonJavaSerializationTest_3 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonJavaSerializationTest_3;
}

@end

void ComGoogleGsonJavaSerializationTest_3_init(ComGoogleGsonJavaSerializationTest_3 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonJavaSerializationTest_3 *new_ComGoogleGsonJavaSerializationTest_3_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonJavaSerializationTest_3, init)
}

ComGoogleGsonJavaSerializationTest_3 *create_ComGoogleGsonJavaSerializationTest_3_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonJavaSerializationTest_3, init)
}
