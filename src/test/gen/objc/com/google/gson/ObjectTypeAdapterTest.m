//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/ObjectTypeAdapterTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/GsonBuilder.h"
#include "com/google/gson/ObjectTypeAdapterTest.h"
#include "com/google/gson/TypeAdapter.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonObjectTypeAdapterTest () {
 @public
  ComGoogleGsonGson *gson_;
  ComGoogleGsonTypeAdapter *adapter_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonObjectTypeAdapterTest, gson_, ComGoogleGsonGson *)
J2OBJC_FIELD_SETTER(ComGoogleGsonObjectTypeAdapterTest, adapter_, ComGoogleGsonTypeAdapter *)

@interface ComGoogleGsonObjectTypeAdapterTest_RuntimeType : NSObject {
 @public
  id a_;
  id b_;
}

- (instancetype __nonnull)initWithComGoogleGsonObjectTypeAdapterTest:(ComGoogleGsonObjectTypeAdapterTest *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonObjectTypeAdapterTest_RuntimeType)

J2OBJC_FIELD_SETTER(ComGoogleGsonObjectTypeAdapterTest_RuntimeType, a_, id)
J2OBJC_FIELD_SETTER(ComGoogleGsonObjectTypeAdapterTest_RuntimeType, b_, id)

__attribute__((unused)) static void ComGoogleGsonObjectTypeAdapterTest_RuntimeType_initWithComGoogleGsonObjectTypeAdapterTest_(ComGoogleGsonObjectTypeAdapterTest_RuntimeType *self, ComGoogleGsonObjectTypeAdapterTest *outer$);

__attribute__((unused)) static ComGoogleGsonObjectTypeAdapterTest_RuntimeType *new_ComGoogleGsonObjectTypeAdapterTest_RuntimeType_initWithComGoogleGsonObjectTypeAdapterTest_(ComGoogleGsonObjectTypeAdapterTest *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonObjectTypeAdapterTest_RuntimeType *create_ComGoogleGsonObjectTypeAdapterTest_RuntimeType_initWithComGoogleGsonObjectTypeAdapterTest_(ComGoogleGsonObjectTypeAdapterTest *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonObjectTypeAdapterTest_RuntimeType)

@implementation ComGoogleGsonObjectTypeAdapterTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonObjectTypeAdapterTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testDeserialize {
  id<JavaUtilMap> map = (id<JavaUtilMap>) cast_check([((ComGoogleGsonTypeAdapter *) nil_chk(adapter_)) fromJsonWithNSString:@"{\"a\":5,\"b\":[1,2,null],\"c\":{\"x\":\"y\"}}"], JavaUtilMap_class_());
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaLangDouble_valueOfWithDouble_(5.0), [((id<JavaUtilMap>) nil_chk(map)) getWithId:@"a"]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_(1.0), JavaLangDouble_valueOfWithDouble_(2.0), nil } count:3 type:JavaLangDouble_class_()]), [map getWithId:@"b"]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JavaUtilCollections_singletonMapWithId_withId_(@"x", @"y"), [map getWithId:@"c"]);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(3, [map size]);
}

- (void)testSerialize {
  id object = create_ComGoogleGsonObjectTypeAdapterTest_RuntimeType_initWithComGoogleGsonObjectTypeAdapterTest_(self);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{'a':5,'b':[1,2,null]}", [((NSString *) nil_chk([((ComGoogleGsonTypeAdapter *) nil_chk(adapter_)) toJsonWithId:object])) java_replace:@"\"" withSequence:@"'"]);
}

- (void)testSerializeNullValue {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:@"a" withId:nil];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{'a':null}", [((NSString *) nil_chk([((ComGoogleGsonTypeAdapter *) nil_chk(adapter_)) toJsonWithId:map])) java_replace:'"' withChar:'\'']);
}

- (void)testDeserializeNullValue {
  id<JavaUtilMap> map = create_JavaUtilLinkedHashMap_init();
  [map putWithId:@"a" withId:nil];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(map, [((ComGoogleGsonTypeAdapter *) nil_chk(adapter_)) fromJsonWithNSString:@"{\"a\":null}"]);
}

- (void)testSerializeObject {
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{}", [((ComGoogleGsonTypeAdapter *) nil_chk(adapter_)) toJsonWithId:create_NSObject_init()]);
}

- (void)dealloc {
  RELEASE_(gson_);
  RELEASE_(adapter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testDeserialize);
  methods[2].selector = @selector(testSerialize);
  methods[3].selector = @selector(testSerializeNullValue);
  methods[4].selector = @selector(testDeserializeNullValue);
  methods[5].selector = @selector(testSerializeObject);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "gson_", "LComGoogleGsonGson;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "adapter_", "LComGoogleGsonTypeAdapter;", .constantValue.asLong = 0, 0x12, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Object;>;", "LComGoogleGsonObjectTypeAdapterTest_RuntimeType;" };
  static const J2ObjcClassInfo _ComGoogleGsonObjectTypeAdapterTest = { "ObjectTypeAdapterTest", "com.google.gson", ptrTable, methods, fields, 7, 0x11, 6, 2, -1, 2, -1, -1, -1 };
  return &_ComGoogleGsonObjectTypeAdapterTest;
}

@end

void ComGoogleGsonObjectTypeAdapterTest_init(ComGoogleGsonObjectTypeAdapterTest *self) {
  JunitFrameworkTestCase_init(self);
  JreStrongAssign(&self->gson_, [create_ComGoogleGsonGsonBuilder_init() create]);
  JreStrongAssign(&self->adapter_, [((ComGoogleGsonGson *) nil_chk(self->gson_)) getAdapterWithIOSClass:NSObject_class_()]);
}

ComGoogleGsonObjectTypeAdapterTest *new_ComGoogleGsonObjectTypeAdapterTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonObjectTypeAdapterTest, init)
}

ComGoogleGsonObjectTypeAdapterTest *create_ComGoogleGsonObjectTypeAdapterTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonObjectTypeAdapterTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonObjectTypeAdapterTest)

@implementation ComGoogleGsonObjectTypeAdapterTest_RuntimeType

- (instancetype __nonnull)initWithComGoogleGsonObjectTypeAdapterTest:(ComGoogleGsonObjectTypeAdapterTest *)outer$ {
  ComGoogleGsonObjectTypeAdapterTest_RuntimeType_initWithComGoogleGsonObjectTypeAdapterTest_(self, outer$);
  return self;
}

- (void)dealloc {
  RELEASE_(a_);
  RELEASE_(b_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComGoogleGsonObjectTypeAdapterTest:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "a_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "b_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonObjectTypeAdapterTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonObjectTypeAdapterTest_RuntimeType = { "RuntimeType", "com.google.gson", ptrTable, methods, fields, 7, 0x2, 1, 2, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonObjectTypeAdapterTest_RuntimeType;
}

@end

void ComGoogleGsonObjectTypeAdapterTest_RuntimeType_initWithComGoogleGsonObjectTypeAdapterTest_(ComGoogleGsonObjectTypeAdapterTest_RuntimeType *self, ComGoogleGsonObjectTypeAdapterTest *outer$) {
  NSObject_init(self);
  JreStrongAssign(&self->a_, JavaLangInteger_valueOfWithInt_(5));
  JreStrongAssign(&self->b_, JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(1), JavaLangInteger_valueOfWithInt_(2), nil } count:3 type:JavaLangInteger_class_()]));
}

ComGoogleGsonObjectTypeAdapterTest_RuntimeType *new_ComGoogleGsonObjectTypeAdapterTest_RuntimeType_initWithComGoogleGsonObjectTypeAdapterTest_(ComGoogleGsonObjectTypeAdapterTest *outer$) {
  J2OBJC_NEW_IMPL(ComGoogleGsonObjectTypeAdapterTest_RuntimeType, initWithComGoogleGsonObjectTypeAdapterTest_, outer$)
}

ComGoogleGsonObjectTypeAdapterTest_RuntimeType *create_ComGoogleGsonObjectTypeAdapterTest_RuntimeType_initWithComGoogleGsonObjectTypeAdapterTest_(ComGoogleGsonObjectTypeAdapterTest *outer$) {
  J2OBJC_CREATE_IMPL(ComGoogleGsonObjectTypeAdapterTest_RuntimeType, initWithComGoogleGsonObjectTypeAdapterTest_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonObjectTypeAdapterTest_RuntimeType)
