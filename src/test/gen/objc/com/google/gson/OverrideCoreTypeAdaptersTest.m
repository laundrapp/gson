//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/OverrideCoreTypeAdaptersTest.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/GsonBuilder.h"
#include "com/google/gson/OverrideCoreTypeAdaptersTest.h"
#include "com/google/gson/TypeAdapter.h"
#include "com/google/gson/stream/JsonReader.h"
#include "com/google/gson/stream/JsonWriter.h"
#include "java/lang/Boolean.h"
#include "java/util/Locale.h"
#include "junit/framework/TestCase.h"

@class ComGoogleGsonJsonElement;
@class JavaIoReader;

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline ComGoogleGsonTypeAdapter *ComGoogleGsonOverrideCoreTypeAdaptersTest_get_booleanAsIntAdapter(void);
static ComGoogleGsonTypeAdapter *ComGoogleGsonOverrideCoreTypeAdaptersTest_booleanAsIntAdapter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleGsonOverrideCoreTypeAdaptersTest, booleanAsIntAdapter, ComGoogleGsonTypeAdapter *)

inline ComGoogleGsonTypeAdapter *ComGoogleGsonOverrideCoreTypeAdaptersTest_get_swapCaseStringAdapter(void);
static ComGoogleGsonTypeAdapter *ComGoogleGsonOverrideCoreTypeAdaptersTest_swapCaseStringAdapter;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleGsonOverrideCoreTypeAdaptersTest, swapCaseStringAdapter, ComGoogleGsonTypeAdapter *)

@interface ComGoogleGsonOverrideCoreTypeAdaptersTest_1 : ComGoogleGsonTypeAdapter

- (instancetype)init;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(JavaLangBoolean *)value;

- (JavaLangBoolean *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg;

- (JavaLangBoolean *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaLangBoolean *)fromJsonTreeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)arg0;

- (JavaLangBoolean *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonOverrideCoreTypeAdaptersTest_1)

__attribute__((unused)) static void ComGoogleGsonOverrideCoreTypeAdaptersTest_1_init(ComGoogleGsonOverrideCoreTypeAdaptersTest_1 *self);

__attribute__((unused)) static ComGoogleGsonOverrideCoreTypeAdaptersTest_1 *new_ComGoogleGsonOverrideCoreTypeAdaptersTest_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonOverrideCoreTypeAdaptersTest_1 *create_ComGoogleGsonOverrideCoreTypeAdaptersTest_1_init(void);

@interface ComGoogleGsonOverrideCoreTypeAdaptersTest_2 : ComGoogleGsonTypeAdapter

- (instancetype)init;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(NSString *)value;

- (NSString *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg;

- (NSString *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (NSString *)fromJsonTreeWithComGoogleGsonJsonElement:(ComGoogleGsonJsonElement *)arg0;

- (NSString *)fromJsonWithNSString:(NSString *)arg0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonOverrideCoreTypeAdaptersTest_2)

__attribute__((unused)) static void ComGoogleGsonOverrideCoreTypeAdaptersTest_2_init(ComGoogleGsonOverrideCoreTypeAdaptersTest_2 *self);

__attribute__((unused)) static ComGoogleGsonOverrideCoreTypeAdaptersTest_2 *new_ComGoogleGsonOverrideCoreTypeAdaptersTest_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonOverrideCoreTypeAdaptersTest_2 *create_ComGoogleGsonOverrideCoreTypeAdaptersTest_2_init(void);

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonOverrideCoreTypeAdaptersTest)

@implementation ComGoogleGsonOverrideCoreTypeAdaptersTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonOverrideCoreTypeAdaptersTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testOverrideWrapperBooleanAdapter {
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:JavaLangBoolean_class_() withId:ComGoogleGsonOverrideCoreTypeAdaptersTest_booleanAsIntAdapter])) create];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"true", [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:JavaLangBoolean_valueOfWithBoolean_(true) withJavaLangReflectType:[IOSClass booleanClass]]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"1", [gson toJsonWithId:JavaLangBoolean_valueOfWithBoolean_(true) withJavaLangReflectType:JavaLangBoolean_class_()]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JreLoadStatic(JavaLangBoolean, TRUE), [gson fromJsonWithNSString:@"true" withIOSClass:[IOSClass booleanClass]]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JreLoadStatic(JavaLangBoolean, TRUE), [gson fromJsonWithNSString:@"1" withIOSClass:JavaLangBoolean_class_()]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JreLoadStatic(JavaLangBoolean, FALSE), [gson fromJsonWithNSString:@"0" withIOSClass:JavaLangBoolean_class_()]);
}

- (void)testOverridePrimitiveBooleanAdapter {
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:[IOSClass booleanClass] withId:ComGoogleGsonOverrideCoreTypeAdaptersTest_booleanAsIntAdapter])) create];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"1", [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:JavaLangBoolean_valueOfWithBoolean_(true) withJavaLangReflectType:[IOSClass booleanClass]]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"true", [gson toJsonWithId:JavaLangBoolean_valueOfWithBoolean_(true) withJavaLangReflectType:JavaLangBoolean_class_()]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JreLoadStatic(JavaLangBoolean, TRUE), [gson fromJsonWithNSString:@"1" withIOSClass:[IOSClass booleanClass]]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(JreLoadStatic(JavaLangBoolean, TRUE), [gson fromJsonWithNSString:@"true" withIOSClass:JavaLangBoolean_class_()]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"0", [gson toJsonWithId:JavaLangBoolean_valueOfWithBoolean_(false) withJavaLangReflectType:[IOSClass booleanClass]]);
}

- (void)testOverrideStringAdapter {
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:NSString_class_() withId:ComGoogleGsonOverrideCoreTypeAdaptersTest_swapCaseStringAdapter])) create];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"\"HELLO\"", [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:@"Hello" withJavaLangReflectType:NSString_class_()]);
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"hello", [gson fromJsonWithNSString:@"\"Hello\"" withIOSClass:NSString_class_()]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testOverrideWrapperBooleanAdapter);
  methods[2].selector = @selector(testOverridePrimitiveBooleanAdapter);
  methods[3].selector = @selector(testOverrideStringAdapter);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "booleanAsIntAdapter", "LComGoogleGsonTypeAdapter;", .constantValue.asLong = 0, 0x1a, -1, 0, 1, -1 },
    { "swapCaseStringAdapter", "LComGoogleGsonTypeAdapter;", .constantValue.asLong = 0, 0x1a, -1, 2, 3, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleGsonOverrideCoreTypeAdaptersTest_booleanAsIntAdapter, "Lcom/google/gson/TypeAdapter<Ljava/lang/Boolean;>;", &ComGoogleGsonOverrideCoreTypeAdaptersTest_swapCaseStringAdapter, "Lcom/google/gson/TypeAdapter<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonOverrideCoreTypeAdaptersTest = { "OverrideCoreTypeAdaptersTest", "com.google.gson", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_ComGoogleGsonOverrideCoreTypeAdaptersTest;
}

+ (void)initialize {
  if (self == [ComGoogleGsonOverrideCoreTypeAdaptersTest class]) {
    JreStrongAssignAndConsume(&ComGoogleGsonOverrideCoreTypeAdaptersTest_booleanAsIntAdapter, new_ComGoogleGsonOverrideCoreTypeAdaptersTest_1_init());
    JreStrongAssignAndConsume(&ComGoogleGsonOverrideCoreTypeAdaptersTest_swapCaseStringAdapter, new_ComGoogleGsonOverrideCoreTypeAdaptersTest_2_init());
    J2OBJC_SET_INITIALIZED(ComGoogleGsonOverrideCoreTypeAdaptersTest)
  }
}

@end

void ComGoogleGsonOverrideCoreTypeAdaptersTest_init(ComGoogleGsonOverrideCoreTypeAdaptersTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonOverrideCoreTypeAdaptersTest *new_ComGoogleGsonOverrideCoreTypeAdaptersTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonOverrideCoreTypeAdaptersTest, init)
}

ComGoogleGsonOverrideCoreTypeAdaptersTest *create_ComGoogleGsonOverrideCoreTypeAdaptersTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonOverrideCoreTypeAdaptersTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonOverrideCoreTypeAdaptersTest)

@implementation ComGoogleGsonOverrideCoreTypeAdaptersTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonOverrideCoreTypeAdaptersTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(JavaLangBoolean *)value {
  [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) valueWithLong:[((JavaLangBoolean *) nil_chk(value)) booleanValue] ? 1 : 0];
}

- (JavaLangBoolean *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg {
  jint value = [((ComGoogleGsonStreamJsonReader *) nil_chk(inArg)) nextInt];
  return JavaLangBoolean_valueOfWithBoolean_(value != 0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeWithComGoogleGsonStreamJsonWriter:withId:);
  methods[2].selector = @selector(readWithComGoogleGsonStreamJsonReader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "write", "LComGoogleGsonStreamJsonWriter;LJavaLangBoolean;", "LJavaIoIOException;", "read", "LComGoogleGsonStreamJsonReader;", "LComGoogleGsonOverrideCoreTypeAdaptersTest;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Boolean;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonOverrideCoreTypeAdaptersTest_1 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_ComGoogleGsonOverrideCoreTypeAdaptersTest_1;
}

@end

void ComGoogleGsonOverrideCoreTypeAdaptersTest_1_init(ComGoogleGsonOverrideCoreTypeAdaptersTest_1 *self) {
  ComGoogleGsonTypeAdapter_init(self);
}

ComGoogleGsonOverrideCoreTypeAdaptersTest_1 *new_ComGoogleGsonOverrideCoreTypeAdaptersTest_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonOverrideCoreTypeAdaptersTest_1, init)
}

ComGoogleGsonOverrideCoreTypeAdaptersTest_1 *create_ComGoogleGsonOverrideCoreTypeAdaptersTest_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonOverrideCoreTypeAdaptersTest_1, init)
}

@implementation ComGoogleGsonOverrideCoreTypeAdaptersTest_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonOverrideCoreTypeAdaptersTest_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(NSString *)value {
  [((ComGoogleGsonStreamJsonWriter *) nil_chk(outArg)) valueWithNSString:[((NSString *) nil_chk(value)) java_uppercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, US)]];
}

- (NSString *)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg {
  return [((NSString *) nil_chk([((ComGoogleGsonStreamJsonReader *) nil_chk(inArg)) nextString])) java_lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, US)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeWithComGoogleGsonStreamJsonWriter:withId:);
  methods[2].selector = @selector(readWithComGoogleGsonStreamJsonReader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "write", "LComGoogleGsonStreamJsonWriter;LNSString;", "LJavaIoIOException;", "read", "LComGoogleGsonStreamJsonReader;", "LComGoogleGsonOverrideCoreTypeAdaptersTest;", "Lcom/google/gson/TypeAdapter<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonOverrideCoreTypeAdaptersTest_2 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, 6, -1 };
  return &_ComGoogleGsonOverrideCoreTypeAdaptersTest_2;
}

@end

void ComGoogleGsonOverrideCoreTypeAdaptersTest_2_init(ComGoogleGsonOverrideCoreTypeAdaptersTest_2 *self) {
  ComGoogleGsonTypeAdapter_init(self);
}

ComGoogleGsonOverrideCoreTypeAdaptersTest_2 *new_ComGoogleGsonOverrideCoreTypeAdaptersTest_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonOverrideCoreTypeAdaptersTest_2, init)
}

ComGoogleGsonOverrideCoreTypeAdaptersTest_2 *create_ComGoogleGsonOverrideCoreTypeAdaptersTest_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonOverrideCoreTypeAdaptersTest_2, init)
}
