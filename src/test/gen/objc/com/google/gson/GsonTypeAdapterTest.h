//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/GsonTypeAdapterTest.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComGoogleGsonGsonTypeAdapterTest")
#ifdef RESTRICT_ComGoogleGsonGsonTypeAdapterTest
#define INCLUDE_ALL_ComGoogleGsonGsonTypeAdapterTest 0
#else
#define INCLUDE_ALL_ComGoogleGsonGsonTypeAdapterTest 1
#endif
#undef RESTRICT_ComGoogleGsonGsonTypeAdapterTest
#ifdef INCLUDE_ComGoogleGsonGsonTypeAdapterTest_Concrete
#define INCLUDE_ComGoogleGsonGsonTypeAdapterTest_Abstract 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComGoogleGsonGsonTypeAdapterTest_) && (INCLUDE_ALL_ComGoogleGsonGsonTypeAdapterTest || defined(INCLUDE_ComGoogleGsonGsonTypeAdapterTest))
#define ComGoogleGsonGsonTypeAdapterTest_

#define RESTRICT_JunitFrameworkTestCase 1
#define INCLUDE_JunitFrameworkTestCase 1
#include "junit/framework/TestCase.h"

/*!
 @brief Contains numerous tests involving registered type converters with a Gson instance.
 @author Inderjeet Singh
 @author Joel Leitch
 */
@interface ComGoogleGsonGsonTypeAdapterTest : JunitFrameworkTestCase

#pragma mark Public

- (instancetype __nonnull)init;

- (void)testDefaultTypeAdapterThrowsParseException;

- (void)testDeserializerForAbstractClass;

- (void)testTypeAdapterDoesNotAffectNonAdaptedTypes;

- (void)testTypeAdapterProperlyConvertsTypes;

- (void)testTypeAdapterThrowsException;

#pragma mark Protected

- (void)setUp;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGsonTypeAdapterTest)

FOUNDATION_EXPORT void ComGoogleGsonGsonTypeAdapterTest_init(ComGoogleGsonGsonTypeAdapterTest *self);

FOUNDATION_EXPORT ComGoogleGsonGsonTypeAdapterTest *new_ComGoogleGsonGsonTypeAdapterTest_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonGsonTypeAdapterTest *create_ComGoogleGsonGsonTypeAdapterTest_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonGsonTypeAdapterTest)

#endif

#if !defined (ComGoogleGsonGsonTypeAdapterTest_Abstract_) && (INCLUDE_ALL_ComGoogleGsonGsonTypeAdapterTest || defined(INCLUDE_ComGoogleGsonGsonTypeAdapterTest_Abstract))
#define ComGoogleGsonGsonTypeAdapterTest_Abstract_

@interface ComGoogleGsonGsonTypeAdapterTest_Abstract : NSObject {
 @public
  NSString *a_;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGsonTypeAdapterTest_Abstract)

J2OBJC_FIELD_SETTER(ComGoogleGsonGsonTypeAdapterTest_Abstract, a_, NSString *)

FOUNDATION_EXPORT void ComGoogleGsonGsonTypeAdapterTest_Abstract_init(ComGoogleGsonGsonTypeAdapterTest_Abstract *self);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonGsonTypeAdapterTest_Abstract)

#endif

#if !defined (ComGoogleGsonGsonTypeAdapterTest_Concrete_) && (INCLUDE_ALL_ComGoogleGsonGsonTypeAdapterTest || defined(INCLUDE_ComGoogleGsonGsonTypeAdapterTest_Concrete))
#define ComGoogleGsonGsonTypeAdapterTest_Concrete_

@interface ComGoogleGsonGsonTypeAdapterTest_Concrete : ComGoogleGsonGsonTypeAdapterTest_Abstract {
 @public
  NSString *b_;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGsonTypeAdapterTest_Concrete)

J2OBJC_FIELD_SETTER(ComGoogleGsonGsonTypeAdapterTest_Concrete, b_, NSString *)

FOUNDATION_EXPORT void ComGoogleGsonGsonTypeAdapterTest_Concrete_init(ComGoogleGsonGsonTypeAdapterTest_Concrete *self);

FOUNDATION_EXPORT ComGoogleGsonGsonTypeAdapterTest_Concrete *new_ComGoogleGsonGsonTypeAdapterTest_Concrete_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComGoogleGsonGsonTypeAdapterTest_Concrete *create_ComGoogleGsonGsonTypeAdapterTest_Concrete_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonGsonTypeAdapterTest_Concrete)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComGoogleGsonGsonTypeAdapterTest")
