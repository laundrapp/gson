//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/GsonBuilderTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/Gson.h"
#include "com/google/gson/GsonBuilder.h"
#include "com/google/gson/GsonBuilderTest.h"
#include "com/google/gson/TypeAdapter.h"
#include "com/google/gson/stream/JsonReader.h"
#include "com/google/gson/stream/JsonWriter.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/reflect/Modifier.h"
#include "java/lang/reflect/Type.h"
#include "junit/framework/TestCase.h"

inline ComGoogleGsonTypeAdapter *ComGoogleGsonGsonBuilderTest_get_NULL_TYPE_ADAPTER(void);
static ComGoogleGsonTypeAdapter *ComGoogleGsonGsonBuilderTest_NULL_TYPE_ADAPTER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleGsonGsonBuilderTest, NULL_TYPE_ADAPTER, ComGoogleGsonTypeAdapter *)

@interface ComGoogleGsonGsonBuilderTest_1 : ComGoogleGsonTypeAdapter

- (instancetype __nonnull)init;

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(id)value;

- (id)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGsonBuilderTest_1)

__attribute__((unused)) static void ComGoogleGsonGsonBuilderTest_1_init(ComGoogleGsonGsonBuilderTest_1 *self);

__attribute__((unused)) static ComGoogleGsonGsonBuilderTest_1 *new_ComGoogleGsonGsonBuilderTest_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGsonBuilderTest_1 *create_ComGoogleGsonGsonBuilderTest_1_init(void);

@interface ComGoogleGsonGsonBuilderTest_HasModifiers () {
 @public
  NSString *a_;
  volatile_id c_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonGsonBuilderTest_HasModifiers, a_, NSString *)
J2OBJC_VOLATILE_FIELD_SETTER(ComGoogleGsonGsonBuilderTest_HasModifiers, c_, NSString *)

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonGsonBuilderTest)

@implementation ComGoogleGsonGsonBuilderTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonBuilderTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)testCreatingMoreThanOnce {
  ComGoogleGsonGsonBuilder *builder = create_ComGoogleGsonGsonBuilder_init();
  [builder create];
  [builder create];
}

- (void)testExcludeFieldsWithModifiers {
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk(([create_ComGoogleGsonGsonBuilder_init() excludeFieldsWithModifiersWithIntArray:[IOSIntArray arrayWithInts:(jint[]){ JavaLangReflectModifier_VOLATILE, JavaLangReflectModifier_PRIVATE } count:2]]))) create];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"d\":\"d\"}", [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:create_ComGoogleGsonGsonBuilderTest_HasModifiers_init()]);
}

- (void)testRegisterTypeAdapterForCoreType {
  IOSObjectArray *types = [IOSObjectArray arrayWithObjects:(id[]){ [IOSClass byteClass], [IOSClass intClass], [IOSClass doubleClass], JavaLangShort_class_(), JavaLangLong_class_(), NSString_class_() } count:6 type:JavaLangReflectType_class_()];
  {
    IOSObjectArray *a__ = types;
    id<JavaLangReflectType> const *b__ = a__->buffer_;
    id<JavaLangReflectType> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<JavaLangReflectType> type = *b__++;
      [create_ComGoogleGsonGsonBuilder_init() registerTypeAdapterWithJavaLangReflectType:type withId:ComGoogleGsonGsonBuilderTest_NULL_TYPE_ADAPTER];
    }
  }
}

- (void)testTransientFieldExclusion {
  ComGoogleGsonGson *gson = [((ComGoogleGsonGsonBuilder *) nil_chk([create_ComGoogleGsonGsonBuilder_init() excludeFieldsWithModifiersWithIntArray:[IOSIntArray arrayWithLength:0]])) create];
  JunitFrameworkTestCase_assertEqualsWithNSString_withNSString_(@"{\"a\":\"a\"}", [((ComGoogleGsonGson *) nil_chk(gson)) toJsonWithId:create_ComGoogleGsonGsonBuilderTest_HasTransients_init()]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(testCreatingMoreThanOnce);
  methods[2].selector = @selector(testExcludeFieldsWithModifiers);
  methods[3].selector = @selector(testRegisterTypeAdapterForCoreType);
  methods[4].selector = @selector(testTransientFieldExclusion);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NULL_TYPE_ADAPTER", "LComGoogleGsonTypeAdapter;", .constantValue.asLong = 0, 0x1a, -1, 0, 1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleGsonGsonBuilderTest_NULL_TYPE_ADAPTER, "Lcom/google/gson/TypeAdapter<Ljava/lang/Object;>;", "LComGoogleGsonGsonBuilderTest_HasModifiers;LComGoogleGsonGsonBuilderTest_HasTransients;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonBuilderTest = { "GsonBuilderTest", "com.google.gson", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, 2, -1, -1, -1 };
  return &_ComGoogleGsonGsonBuilderTest;
}

+ (void)initialize {
  if (self == [ComGoogleGsonGsonBuilderTest class]) {
    JreStrongAssignAndConsume(&ComGoogleGsonGsonBuilderTest_NULL_TYPE_ADAPTER, new_ComGoogleGsonGsonBuilderTest_1_init());
    J2OBJC_SET_INITIALIZED(ComGoogleGsonGsonBuilderTest)
  }
}

@end

void ComGoogleGsonGsonBuilderTest_init(ComGoogleGsonGsonBuilderTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonGsonBuilderTest *new_ComGoogleGsonGsonBuilderTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGsonBuilderTest, init)
}

ComGoogleGsonGsonBuilderTest *create_ComGoogleGsonGsonBuilderTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGsonBuilderTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGsonBuilderTest)

@implementation ComGoogleGsonGsonBuilderTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonBuilderTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeWithComGoogleGsonStreamJsonWriter:(ComGoogleGsonStreamJsonWriter *)outArg
                                        withId:(id)value {
  @throw create_JavaLangAssertionError_init();
}

- (id)readWithComGoogleGsonStreamJsonReader:(ComGoogleGsonStreamJsonReader *)inArg {
  @throw create_JavaLangAssertionError_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeWithComGoogleGsonStreamJsonWriter:withId:);
  methods[2].selector = @selector(readWithComGoogleGsonStreamJsonReader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "write", "LComGoogleGsonStreamJsonWriter;LNSObject;", "read", "LComGoogleGsonStreamJsonReader;", "LComGoogleGsonGsonBuilderTest;", "Lcom/google/gson/TypeAdapter<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonBuilderTest_1 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 4, -1, -1, 5, -1 };
  return &_ComGoogleGsonGsonBuilderTest_1;
}

@end

void ComGoogleGsonGsonBuilderTest_1_init(ComGoogleGsonGsonBuilderTest_1 *self) {
  ComGoogleGsonTypeAdapter_init(self);
}

ComGoogleGsonGsonBuilderTest_1 *new_ComGoogleGsonGsonBuilderTest_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGsonBuilderTest_1, init)
}

ComGoogleGsonGsonBuilderTest_1 *create_ComGoogleGsonGsonBuilderTest_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGsonBuilderTest_1, init)
}

@implementation ComGoogleGsonGsonBuilderTest_HasModifiers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonBuilderTest_HasModifiers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)__javaClone:(ComGoogleGsonGsonBuilderTest_HasModifiers *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&b_, &original->b_);
  JreCloneVolatileStrong(&c_, &original->c_);
}

- (void)dealloc {
  RELEASE_(a_);
  JreReleaseVolatile(&b_);
  JreReleaseVolatile(&c_);
  RELEASE_(d_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "a_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "b_", "LNSString;", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
    { "c_", "LNSString;", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "d_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonGsonBuilderTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonBuilderTest_HasModifiers = { "HasModifiers", "com.google.gson", ptrTable, methods, fields, 7, 0x8, 1, 4, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonGsonBuilderTest_HasModifiers;
}

@end

void ComGoogleGsonGsonBuilderTest_HasModifiers_init(ComGoogleGsonGsonBuilderTest_HasModifiers *self) {
  NSObject_init(self);
  JreStrongAssign(&self->a_, @"a");
  JreVolatileStrongAssign(&self->b_, @"b");
  JreVolatileStrongAssign(&self->c_, @"c");
  JreStrongAssign(&self->d_, @"d");
}

ComGoogleGsonGsonBuilderTest_HasModifiers *new_ComGoogleGsonGsonBuilderTest_HasModifiers_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGsonBuilderTest_HasModifiers, init)
}

ComGoogleGsonGsonBuilderTest_HasModifiers *create_ComGoogleGsonGsonBuilderTest_HasModifiers_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGsonBuilderTest_HasModifiers, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGsonBuilderTest_HasModifiers)

@implementation ComGoogleGsonGsonBuilderTest_HasTransients

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComGoogleGsonGsonBuilderTest_HasTransients_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(a_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "a_", "LNSString;", .constantValue.asLong = 0, 0x80, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComGoogleGsonGsonBuilderTest;" };
  static const J2ObjcClassInfo _ComGoogleGsonGsonBuilderTest_HasTransients = { "HasTransients", "com.google.gson", ptrTable, methods, fields, 7, 0x8, 1, 1, 0, -1, -1, -1, -1 };
  return &_ComGoogleGsonGsonBuilderTest_HasTransients;
}

@end

void ComGoogleGsonGsonBuilderTest_HasTransients_init(ComGoogleGsonGsonBuilderTest_HasTransients *self) {
  NSObject_init(self);
  JreStrongAssign(&self->a_, @"a");
}

ComGoogleGsonGsonBuilderTest_HasTransients *new_ComGoogleGsonGsonBuilderTest_HasTransients_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGsonBuilderTest_HasTransients, init)
}

ComGoogleGsonGsonBuilderTest_HasTransients *create_ComGoogleGsonGsonBuilderTest_HasTransients_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGsonBuilderTest_HasTransients, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGsonBuilderTest_HasTransients)
