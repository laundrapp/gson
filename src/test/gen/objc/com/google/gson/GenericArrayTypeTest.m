//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/gson/src/test/java/com/google/gson/GenericArrayTypeTest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/GenericArrayTypeTest.h"
#include "com/google/gson/internal/$Gson$Types.h"
#include "com/google/gson/reflect/TypeToken.h"
#include "java/lang/reflect/GenericArrayType.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/util/List.h"
#include "junit/framework/TestCase.h"

@interface ComGoogleGsonGenericArrayTypeTest () {
 @public
  id<JavaLangReflectGenericArrayType> ourType_;
}

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonGenericArrayTypeTest, ourType_, id<JavaLangReflectGenericArrayType>)

@interface ComGoogleGsonGenericArrayTypeTest_1 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGenericArrayTypeTest_1)

__attribute__((unused)) static void ComGoogleGsonGenericArrayTypeTest_1_init(ComGoogleGsonGenericArrayTypeTest_1 *self);

__attribute__((unused)) static ComGoogleGsonGenericArrayTypeTest_1 *new_ComGoogleGsonGenericArrayTypeTest_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGenericArrayTypeTest_1 *create_ComGoogleGsonGenericArrayTypeTest_1_init(void);

@interface ComGoogleGsonGenericArrayTypeTest_2 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGenericArrayTypeTest_2)

__attribute__((unused)) static void ComGoogleGsonGenericArrayTypeTest_2_init(ComGoogleGsonGenericArrayTypeTest_2 *self);

__attribute__((unused)) static ComGoogleGsonGenericArrayTypeTest_2 *new_ComGoogleGsonGenericArrayTypeTest_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGenericArrayTypeTest_2 *create_ComGoogleGsonGenericArrayTypeTest_2_init(void);

@interface ComGoogleGsonGenericArrayTypeTest_3 : ComGoogleGsonReflectTypeToken

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonGenericArrayTypeTest_3)

__attribute__((unused)) static void ComGoogleGsonGenericArrayTypeTest_3_init(ComGoogleGsonGenericArrayTypeTest_3 *self);

__attribute__((unused)) static ComGoogleGsonGenericArrayTypeTest_3 *new_ComGoogleGsonGenericArrayTypeTest_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonGenericArrayTypeTest_3 *create_ComGoogleGsonGenericArrayTypeTest_3_init(void);

@implementation ComGoogleGsonGenericArrayTypeTest

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonGenericArrayTypeTest_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setUp {
  [super setUp];
  JreStrongAssign(&ourType_, ComGoogleGsonInternal_Gson_Types_arrayOfWithJavaLangReflectType_(ComGoogleGsonInternal_Gson_Types_newParameterizedTypeWithOwnerWithJavaLangReflectType_withJavaLangReflectType_withJavaLangReflectTypeArray_(nil, JavaUtilList_class_(), [IOSObjectArray arrayWithObjects:(id[]){ NSString_class_() } count:1 type:JavaLangReflectType_class_()])));
}

- (void)testOurTypeFunctionality {
  id<JavaLangReflectType> parameterizedType = [create_ComGoogleGsonGenericArrayTypeTest_1_init() getType];
  id<JavaLangReflectType> genericArrayType = [create_ComGoogleGsonGenericArrayTypeTest_2_init() getType];
  JunitFrameworkTestCase_assertEqualsWithId_withId_(parameterizedType, [((id<JavaLangReflectGenericArrayType>) nil_chk(ourType_)) getGenericComponentType]);
  JunitFrameworkTestCase_assertEqualsWithId_withId_(genericArrayType, ourType_);
  JunitFrameworkTestCase_assertEqualsWithInt_withInt_(((jint) [((id<JavaLangReflectType>) nil_chk(genericArrayType)) hash]), ((jint) [((id<JavaLangReflectGenericArrayType>) nil_chk(ourType_)) hash]));
}

- (void)testNotEquals {
  id<JavaLangReflectType> differentGenericArrayType = [create_ComGoogleGsonGenericArrayTypeTest_3_init() getType];
  JunitFrameworkTestCase_assertFalseWithBoolean_([((id<JavaLangReflectType>) nil_chk(differentGenericArrayType)) isEqual:ourType_]);
  JunitFrameworkTestCase_assertFalseWithBoolean_([((id<JavaLangReflectGenericArrayType>) nil_chk(ourType_)) isEqual:differentGenericArrayType]);
}

- (void)dealloc {
  RELEASE_(ourType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setUp);
  methods[2].selector = @selector(testOurTypeFunctionality);
  methods[3].selector = @selector(testNotEquals);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ourType_", "LJavaLangReflectGenericArrayType;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangException;" };
  static const J2ObjcClassInfo _ComGoogleGsonGenericArrayTypeTest = { "GenericArrayTypeTest", "com.google.gson", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_ComGoogleGsonGenericArrayTypeTest;
}

@end

void ComGoogleGsonGenericArrayTypeTest_init(ComGoogleGsonGenericArrayTypeTest *self) {
  JunitFrameworkTestCase_init(self);
}

ComGoogleGsonGenericArrayTypeTest *new_ComGoogleGsonGenericArrayTypeTest_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGenericArrayTypeTest, init)
}

ComGoogleGsonGenericArrayTypeTest *create_ComGoogleGsonGenericArrayTypeTest_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGenericArrayTypeTest, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonGenericArrayTypeTest)

@implementation ComGoogleGsonGenericArrayTypeTest_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonGenericArrayTypeTest_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonGenericArrayTypeTest;", "testOurTypeFunctionality", "Lcom/google/gson/reflect/TypeToken<Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGenericArrayTypeTest_1 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonGenericArrayTypeTest_1;
}

@end

void ComGoogleGsonGenericArrayTypeTest_1_init(ComGoogleGsonGenericArrayTypeTest_1 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonGenericArrayTypeTest_1 *new_ComGoogleGsonGenericArrayTypeTest_1_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGenericArrayTypeTest_1, init)
}

ComGoogleGsonGenericArrayTypeTest_1 *create_ComGoogleGsonGenericArrayTypeTest_1_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGenericArrayTypeTest_1, init)
}

@implementation ComGoogleGsonGenericArrayTypeTest_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonGenericArrayTypeTest_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonGenericArrayTypeTest;", "testOurTypeFunctionality", "Lcom/google/gson/reflect/TypeToken<[Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGenericArrayTypeTest_2 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonGenericArrayTypeTest_2;
}

@end

void ComGoogleGsonGenericArrayTypeTest_2_init(ComGoogleGsonGenericArrayTypeTest_2 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonGenericArrayTypeTest_2 *new_ComGoogleGsonGenericArrayTypeTest_2_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGenericArrayTypeTest_2, init)
}

ComGoogleGsonGenericArrayTypeTest_2 *create_ComGoogleGsonGenericArrayTypeTest_2_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGenericArrayTypeTest_2, init)
}

@implementation ComGoogleGsonGenericArrayTypeTest_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonGenericArrayTypeTest_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComGoogleGsonGenericArrayTypeTest;", "testNotEquals", "Lcom/google/gson/reflect/TypeToken<[[Ljava/util/List<Ljava/lang/String;>;>;" };
  static const J2ObjcClassInfo _ComGoogleGsonGenericArrayTypeTest_3 = { "", "com.google.gson", ptrTable, methods, NULL, 7, 0x8018, 1, 0, 0, -1, 1, 2, -1 };
  return &_ComGoogleGsonGenericArrayTypeTest_3;
}

@end

void ComGoogleGsonGenericArrayTypeTest_3_init(ComGoogleGsonGenericArrayTypeTest_3 *self) {
  ComGoogleGsonReflectTypeToken_init(self);
}

ComGoogleGsonGenericArrayTypeTest_3 *new_ComGoogleGsonGenericArrayTypeTest_3_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonGenericArrayTypeTest_3, init)
}

ComGoogleGsonGenericArrayTypeTest_3 *create_ComGoogleGsonGenericArrayTypeTest_3_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonGenericArrayTypeTest_3, init)
}
